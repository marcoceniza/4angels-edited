%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: Transport isometric_01.eps
%%Creator: Adobe Illustrator(R) 21.1
%%For: Roman
%%CreationDate: 16.04.2019
%%BoundingBox: 0 0 954 559
%%HiResBoundingBox: 0 0 954 559
%%CropBox: 0 0 954 559
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 76 8%%BeginData: 8206 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDB4FFA8FFA8FD7EFFA9FD7AFFA8FF%A8FFA8FFA8FFA8FFA8FDF3FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD%6CFFA9FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA9FD6EFFA8FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8A89BCAFD14FF53532852527DA8FFA8FFA8FD5C%FF7E7E7EA8A1FD11FF7D52272E27282752272852A8FD49FFA8FFA8FFA8FF%A8FFA8FFA8FFA8FFA8FFA8FFA8A85252527EA1A1FD0EFFA8522728272827%28272827282727055284FFA8FD17FF7DA87EA8A8FFA8FFA8FD24FFA8FFFF%FFA9FFFFFFA9FFFFFFA9FFFFFFA9FFA853272E272E52A89AFD0DFF522E27%28272E2728272E2728272E272E272859FFA9FD13FFA8FFA8A8522827527E%FFFFFFA8FD22FFA8A9A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A85352052727%2827537DC3FD0BFFA828282728272827282728272827282728272E272727%A8A8FFA8FD0DFFA8FFA8FFA8FFA8FFA859052727A8A8FFA8FD20FFA952A8%FD0DFFA8A85353522E2752282E53A89AFD0BFF5352285228522852285228%522852285253A8A8FFA8FFA8FFA8C3FD0CFFA9FD0AFFA852282752A8FD1E%FFA87DA8597DFF7DA8A8FFA8FFA8FFA8FFA8AFA87D525228522727272852%7E7D7EFD08FFA8FF527E5228272E2728272E2728272E28A8A8A87D5353FF%A8A984A8A1FD0BFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D2805287DFFA8FD%1BFFA8527D52A9535952A8A8FFA8FFFFFFA8FF7D5227535253282E272E59%7D537E7DFD07FFA8A85359525352522852282E285228527DA97D28275252%A9A8A984A87EA8FD0AFFA8FFFFFFA9FFFFFFA9FFFFFFA9FFFFFFA8FFA8FF%A8A9A1FD1AFFA853287D5253525352537DA8A8FFA8A85228272728522828%27525353537E7D7DA8FD06FFA8285352522E595352272E27282753A8A827%2827287DA8A8A87DA87D847DFD08FFA9537D53FFA8FFA8FFA8FFA8FFA8A8%7D52285959AFA8A87DA1FD1BFF5253537D537D537D52535252A8A9535352%5227522E5253A87D7D7DA87D7D2EA8FD06FF5259537D537D52597D532E52%287DA87D28522859A8FFA8A87EA87D847DA9FD06FF84FF537D535953A8FD%06FFAF7D2852282E2EA8A8A87EA8A8FD1AFFA85228525253282827525252%057D53522852272727527D7E7D7E7D2827532759A8FFFFFFA9FFA8522853%52282728275228520552A853272852A8A8A87DA87D7E527D7D7EFD07FFA8%2E535253527D7D7DA8FFA8FFA852272827282E7E7DA87DA87DA8FD19FFAF%FF7E5252532E5328522852282E7D5352532752277D84847D7D7D53525252%AFFD06FFA9FF7D522E535228272E2853282E7E7D272E7DA9A8A884A87E84%53537D84A8FD07FF5353527D537D5253535328A8A852282828527DA97D7E%7D847EA8A8FD18FFA8FFA8FF7E5228522852282E28285352285228285284%7D7D5253597D525228FD05FFA8FFA8FFA8FF532E285228522853525353A8%27527EA984A87DA87D847D53537D7DFD05FFA8AFA87D28535253522E2852%2827525327280553A8A87D847D7D528484FD18FFA9FD06FF7D2852525328%53527D2728287D7DA87D7D527E5952527D527DFD04FFA9FD07FF7D522E53%5253527D28A87D7E84AFA8A87EA884A87D7E527D52FD05FFA8FFFFFFAF7D%525352532752537D537D282E52A8A8A87EA87D7D527D7DFD18FF7EFFA8FF%A8FFA8FFA8A95252272E28A82852277E7D7E5353537D282E5252277DFD04%FFA8A9A8FFA8FFA8FFA8FFA859282E28522853A8A87EA87DA87EA87EA9A8%84527D52A8FD04FFA8FFA8FFA8FFA87D28532E5252532E7D2E5259A87DA8%7EA87D84535353FD18FFA8A8FFFFA9FFFFFFA9FFFFFFA9A97DA87E525253%7D7E53597D532853A8FD08FFA8AFFFA9FFFFFFA9FFFFFFA9FFA8595252A8%A9A8A884A87EA8A8FF84A8FFFF84FD05FFA8FFA8FFFFFFA9FFFFA8535352%532E53537D7DA87EA87EA8A8A97E7D7D7EFD18FF8452A8A8FFA8FFA8FFA8%FFA8FFA8A87D847D7E7D59527D522828A8FD0AFF7EA9A8FFA8FFA8FFA8FF%A8FFA8FFA8A9A8A87EA87DA87DA8A8A87DFD0AFF84A8FFA8FFA8FFA8FFA8%FFA8A8537D7DA8A8847DA87DA8A8A87EFFA8FD1AFF537D2EA8FD08FFAFA9%84A89A845953537D28527DFD0CFFA97E7DFD0AFFA8FFA8A884A87EA8A8FF%A8A8A8FD0BFF7EFD0DFFA8FFA8A87EA8A8A9A8A8A9FD1DFF525252287DA8%FFA8FFA8FFA8A87D7E7D7D527D5952277DFD0EFF527D7D53A8FFA8FFA8FF%A8AFA8FFA8A87DA87EA8A8AF7EA8FD0CFFA87D52A8A8FFA8FFA8FFA8FFA8%FFA8A87DA87EA8A8A97EA8FD1FFFFD0452285252A8A8FFA8A87E7E7D847D%7D522E52FD10FF52537D7D7D52A8FFFFA8FFA8FF84847D847DA9A8A87EFD%0EFFA97E7E287DA8FFFFFFA9FFA8FFA8A87EA87EFD04A8FD21FF7E272728%532852277D7D527D7E7D52525327527DFD11FF7D522853537D52A8A8FFA8%847D7E535959FD04A8FD0FFFA87D52A852287DFFA8A9A8A97E7E527D7DA8%7EA8A8FD23FF7D2728285353847D7E7D7D59535252287EFD14FF847D2859%52A8A8A87D7D7DA87D53537E7DAFFD12FF7D7D527E7D53527DA8A87DA87D%5353A87EFD27FFA82727272828532E522853525228FD17FF7D7D282E7D84%7EA87DA87D7D527D7DFD15FF7E7E52527DA87DA87DA87D53527D7DFD2AFF%7D2E2728275228532E535259FD18FF7EA87D52532E2828538453537D7DFD%16FFAFA87D53527EA8A97E7E7D7D53FD2DFF7E525227522E275252A8FD1A%FFA87D7D537D527D7D2E527DFD1AFF7D7D7D7E7D7D535353A9FD33FFA8A8%FD20FFA8AFA8FD21FFA8A9FD45FFA8FFA8FFA8FFA8FFA8FD78FFA9FFFFFF%A9FFFFFFA9FD1EFFA8A8FD52FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87E%FD17FF7E7D2727052727A8FD60FF527DFD13FFA87D272827282728272827%52A8FD4BFFA8A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A82E2884FD10FF%A827270527052705270527052727272EFD49FFA852FFA9FFFFFFA9FFFFFF%A9FFFFFFA8FF7D527DFFA8C3A1FD0EFF52272E2828272E2728272E272827%2E282859FD45FFA9FF8428A853537DFFA8FFA8FFA8FFA8FFA87D27272784%A8A87DA1FD0DFFA8282827282728272827282728272827597D53A8FD11FF%A9FD32FF7E7E527D5359537D7DA8FD06FFA85227282752A8A884A87EFD0D%FF7DFF5252282E2752282E27522852537E522E2884A9FD0FFFA8FFA8FD31%FFA8285352532E52525353537DA8A8AF532E2727052E7DA87DA87EA8FD0A%FF7EA8537D52535353272827282728287D2727282852847DA8FD0AFFA8FF%FFFFA87D7DA9A8FD2FFFA828535253282E28282753525253A95228522E28%527E7E7D7E7DA87EFD0AFFA85353525352597D7E522827527D5227282728%2EA87E847EFD0BFFA9FFFFA9527DA87E7DFD2DFFA9A82828522852285227%52275352A828282753277D7E847D7E535959A8FD09FFA952535252285228%535253272859270527272828847D7D5952FD08FF53FFA8FFA8FFA87D5253%52FD2EFFA8FF7D525253525352532E7D527E5252282E53A884A87E84597D%537EFD0AFF525352532E52282E275353527D28272827527DA87D53535252%FD08FFA9FD04FFA87D53A89BFD2DFFAF84FFA8FF7D2E285228532E525259%522805527D7E7DA87EA87D7D527D7EFD09FFA8A927522E52285228522728%52280527277D7D7E7D525359527DFD08FFA8FFA8FF5959527D7D84FD2DFF%A8FFA9FFFFFFA87D28522853527DA8537D7EA8A87DA87EA87D7E537D7DFD%09FFA9FFFFFF525252532E5352522E53272852A87E7E7D7E5359537DFD09%FFA87EFF7D53287D7D7E527DFD2BFFA8A8A8FFA8FFA8FFA8FF7D532852A8%A9537E53847DA87D7E7DFD04A8FD09FFA8FFA8FFA8FF7D2827522852287E%537E7D7E7D7E7D7D2753527D7DFD08FFA97D527DFF527D597D7D7E7DFD2B%FFA8A8FFAFFD07FFA8A8A8FFA8A884A87EA87E7E7DFD0EFFA87EFD06FF7D%28522859A8A87D7E7D847D5327527D537EFD08FFCAA8FFA8FFFFA87D5359%7D7D84FD2BFF537DA8A9A8FFA8FFA8A87DA8A8A984A87DA87E847D7EA8FD%0FFFA88452A8A8FFA8FFA8FFA884A8A87D7E7D7E522E277DFD0CFFA1FFA8%CA7E7D2852527E597DFD2CFFA852A8A8FFA8FFA8FFA8FFA8A87D847DA87E%847DA8FD11FF7DA8A87D7DA8FFA9FFFFFFA1A87E7E7D7D282E52FD0FFFA8%C37D525253527E7DFD2EFFAF7D52A87EA8A8AFFD04A87D7D52527D7D7DFD%13FF592E277D7D7D53FFA8FFA1A12E52597D275284FD0FFFA8A8537D5252%2EA8A8FD31FFA852A87EFD05A88484597D5384A8FD15FF532E27527DA9A8%FFA8A8527D53535384FD11FF7D2859527D7DFD35FFA8525359A87D7D7DA8%7D53537DA8FD17FF7E522728A8A9A87E537D527D53FD12FFA85253537DA8%FD38FFA87D2E52597D7E7E537E53FD1AFF7E287DA8A8FD047D53FD13FFA8%7D537DFD3DFFA87E84A852537DFD1DFF7E7D5253537D59A8FD14FF527DA8%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD38FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-04-16T21:55:23+03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-04-16T21:55:23+03:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-04-16T21:55:23+03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXnHmX829Pi8wJoWkGWeOGdLfWNVtIfrX1d5&#xA;GCLDDGD+9m5OOXESFP8Afb/EFVQfmqb8qri0sGu5pNe1XUZGh0topvrN00zijKFkPoRKK/FG6iMb&#xA;1TrirFfJGuSWcc15oztZyWAdrnSpPTVLmG3ZjK6ymYrIvHcyKsjcqenwjJTAr33CrsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeffmh50sdE1by/o2qzPa&#xA;6PrYuje3MPIyAWxg4pRPjKSesVfiCen7PLFWIef/ACz+Wcti2qaTqOnww8CkZiEcsEcrfYaCeF1d&#xA;HLb+mBMKkusJYsWVY15X0OxlMlqLifz/AKzfvDfXGn2rIlqkgi/dSajqJLhOP7zinqM5O/HkTgV7&#xA;B5a/Lm0jjF/5mtNPvdda9TUVa0hMcFtJDALeCKHmeTpCnIryH2mL8Q2+FWa4q7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUl81+TfLfmvTf0fr1kl3Ap5Q&#xA;uSUlif8AnikUh0b5HfodsVYT5W/IPQPL/ma01pdUu76LT/is7O6W3YcyrDnNIsatIVduaUC0YKdy&#xA;N1Xo2m6Vpml2otNMs4LG1Ullt7aNIYwzGrEIgVak9cVRWKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVp3REZ&#xA;3YKigszMaAAbkknASALKJSERZ2AQf1i7uhS0X0YT1uZVNSD/AL7jND9L0HswynjlL6dh3n9A/X9r&#xA;h+Lky/3fpj/OI/3Mf0yoeUggtSfSNMi9a4uZY7pvsyq5adz1A47qw22Urx8BlOY48Qsk8X2/jy5O&#xA;HrJafTR4pykJ94NzPw5HyjXD3BEeX9UbUrD124kq5TmnRqAGtN6faod+uWaTP4kLb+y9adTi4zXO&#xA;tuv4vfzTLMl2TsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVW&#xA;TzRwQyTStxiiUu7bmiqKk7e2KpPrfm7S9HktY7kSPJdlhGkSGRvgpuVXk25IAoNzkhG1S7zTPqF7&#xA;FHNpzt+jYuX1mdavG5VlYfCoZiqlN3Ckdj8PLNPrpTmAYfQOZ6fjzo/K3lO2smbNESwk+DG+I84n&#xA;cHkLNCvqAI6H08SSWfm2/tilgblVRqr9ZekqRryoGDIPjoNqLtXv4YOPXzj6L+POvlz+DptP27lx&#xA;1i4hX84+oDfnY591R2vr3F93dXUEP1l5At5HL6kV1ICbl2VtqAnii8dypA67qeuY+TJKI4ifVfP+&#xA;L9g8vs6uvz55wjxk/vBKxI/WTfyiK3MTXPeJ+pnHlC01GG0kmvI2h+shHWOSQySl6Hm8lQAC9Rt1&#xA;8d83nZ+OYiTIVddbPmT73tuwcGaGMyyDh46NE8Ur6mXde23Pv3T/ADYO+dirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirgQRUGo8RirsVdirsVdirsVdirsVdirsVdirsVSTzprcGieW7zUJ2dUjCJ+7AZy&#xA;ZHVAoqRSvKla7YQCTskEdWCaB+X/AJn1HWRrWrsNMjX00hj9SSe8McTq6lnd3CEgEbH3Kk5aZgCm&#xA;FbprZy+b/LynT2RJLZeRhmmYCEA1pSViiqSeisfozmMctTp/Rtw9CeXz/Q8Hp59odnjwSAYDkZH0&#xA;/wCmNAeUSfh3s0LT9Y13nPJGlsokLtfutZWcj4uC0G9QO4p036YNLiyZ9yBHf6uvw/ArzYdm6XUa&#xA;25SAh6r4yPVfWh8uorlvyZppWhadpik28dZmHF7h6NIR4VoAF2+yoA9s3WDSwxfSN+/r+PLk9lou&#xA;zcOmHoHq/nHn+weQoeSYZkOe7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgdT13SdL4C+uo4Hl/uo3YB&#xA;mA+0wXrxXqzdANzhAtVG71OBLV7qedIrNEMjzMwWMIBUsznalO+NIec3f546QPMkWiaJBJek7z3x&#xA;BFuoAJHEfaevErXbfpXJmBq2WOjIA8npms61pujafNf6jMIbeBC7V+01P2UXqzHoAMgBaHhOs/8A&#xA;OTmuT6gtv5a0CMxM/CL64zSzS1NFpFCycGPhybLhi72HE9K8h/mVca/aj9MaTLo90GVKlhJCzsQO&#xA;IYfEjfECUdQR775XKNMo7s5d0QVYgA9K9++QSkeveaW0gRzHTLq8sdzdXVsqyGFR+0YVJmcePBGP&#xA;thARaZaZqthqdslzZTLNE6hwVPZq0r3HQ9cBCUXirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdiryLzJP5b/ADK0yOay1mPTtT08ziOGYqKIzAESxOVYq3BSHHT7xl0biWJ3&#xA;eX3nlzXA3+GZ9Tl1SC5If9H2BkkLujED01ZAAtGJZ+PzG1cssc2L0fyr+Td3bhLrXlg0/TY0aS4s&#xA;7Zy104WlFmuBuNgeXCQ9aV8K5ZO5IinHnXSbL8wdFhfTdWjhvbTlJEvINGPUFCsi/aH2fhenyqDg&#xA;ieEpO7CvLf5aGGSYXc63t5ORFcSWbuVeJF+x6npxyfHWsgTchRvTkDMyYvQtO8k3el3yaldPFDom&#xA;mW5mi063Xi3qxkuQVUcAq8QV4nfvkDLoGVJZ+Yuja/5jgstc8u6rEYrdOaRGUrFyUkiWNgQvMVoe&#xA;RHz7YYEDYqUgj8u+d/NLWttrmpTS2VuhD6fbN6azEnrcSRFQ4Gy/RXluanYMXqHkjQtS0vT3bUyv&#xA;12YheCGqpFHURqabVAO9NvDKpEEsxdUyPIpdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVYBrv5JeTNV1aXVImu9Jup253I06VYo5HJqXaN0kUM3cqBXqd8mMhCOFNvLOj+U&#xA;/KlNHsZVk1SVTLPLMUa7mBZjWRwFrT4uI9j7nASSoFJrqGv2enQ+veyRxRswSNWZVZ5G2WNORHJ2&#xA;Oyr3OCltjUPkDyzqqjVNKnu9NhvXWa5tYSERipqyPDIrcH5V5d65ITKmFIfUPM/5eflXp0en3l3K&#xA;93MGnEXH6xeTcmNXbgERQTWleIJr3rjRkjYIbyb+enkfzlqLaKILmyuLmsdvDfRLwnVgRxrG0igk&#xA;fst8gTiYEKDac/8AKq/K6fWhbG4tY7sgyRwuoC0FPgLIzDb3x8Qrwso07TrTTrOK0tU4RRKqAndj&#xA;xAALHuaDIk2yROBXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqgdc&#xA;1NNM0qe+c0SLjyenIIHcJzYfyry5N7YQLKC8P83fl1qL+YG1yy15DZXVw108srOk0JdqsEKBlkpX&#xA;4BVfDtXL4y2piUXon5c+Ydauo9Uv7t9TvbUEWF7ds4ggpsvpk8nkYcd28TvvgMgEVb1WJrfyn5TE&#xA;l/P6qWMYa5uDReTu3xNvQAcmyrmWfIPAfOHkzzVqFydQu7+DVNHvA3oarIyoyjsvpSkSRyCgFEBH&#xA;j3y8SHLqx4TVt/l1+WGs3N3b3mmCT0udZNcljRbWIg0BtIpPilK0I5itf5hU0EpAIAe6+efNkPl2&#xA;ziuJGUFi1BIzKrbbCiJI5PKnQbd8piLNNtbWl/5ZS67dW17qOrRTxPdussay8kjBcsziKNiWCio3&#xA;P0U3GSyV0Yhm2VpdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirT8e&#xA;J504UPKvSneuKvPLj/lTvO4r6fo7er9X+tfVftfsej+469eH05YOJjs9Cj9P019Knp0HDjTjxptS&#xA;nbK2S25+r/V5frPD6twb1/Upw4U+Lny24061xV59bf8AKnuVv9X4fVfXX6rx+t/UefN6en/x7cOf&#xA;L7Pw+OWepjs9FXjxHGnGm1OlMrZJBqH+Ev8AFdj9f4fp/wBFvqHq+pT0+Rrxr+65Vr/lZIXSE/yK&#xA;XYq7FXYq7FXYq7FXYq7FX//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:b1b2e0ab-4d3b-4e18-ac04-d6b00ae9856e</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:b1b2e0ab-4d3b-4e18-ac04-d6b00ae9856e</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:fc120c41-b498-46a1-9e32-bd0afd75efb4</stRef:instanceID>
            <stRef:documentID>xmp.did:fc120c41-b498-46a1-9e32-bd0afd75efb4</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b27f53af-3aed-4113-ae66-2c25f9ea145a</stEvt:instanceID>
                  <stEvt:when>2019-04-15T22:15:14+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b1b2e0ab-4d3b-4e18-ac04-d6b00ae9856e</stEvt:instanceID>
                  <stEvt:when>2019-04-16T21:55:23+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>336.550000</stDim:w>
            <stDim:h>197.202778</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>25</xmpG:red>
                           <xmpG:green>25</xmpG:green>
                           <xmpG:blue>25</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>25</xmpG:red>
                           <xmpG:green>25</xmpG:green>
                           <xmpG:blue>25</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -559 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 559 li
954 559 li
954 0 li
cp
clp
781.215 422.287 mo
777.597 428.294 770.477 431.112 765.25 428.095 cv
760.025 425.077 759.3 417.95 762.632 411.807 cv
766.678 404.347 774.552 400.945 779.777 403.963 cv
785.004 406.98 785.593 415.018 781.215 422.287 cv
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.72668 .625269 .308721 .103059 cmyk
f
693.033 446.435 mo
691.07 455.861 li
694.13 454.669 li
697.208 446.521 li
693.033 446.435 li
cp
.821683 .7084 .379187 .253361 cmyk
f
774.178 428.43 mo
772.249 418.469 772.996 408.721 773.779 403.035 cv
769.637 403.745 765.302 406.885 762.632 411.807 cv
759.3 417.95 760.025 425.077 765.25 428.095 cv
767.968 429.664 771.195 429.644 774.178 428.43 cv
cp
.796719 .682582 .393744 .196048 cmyk
f
703.35 467.144 mo
699.733 473.15 692.612 475.969 687.386 472.951 cv
682.159 469.934 681.435 462.807 684.767 456.663 cv
688.814 449.203 696.687 445.802 701.913 448.819 cv
707.139 451.837 707.728 459.874 703.35 467.144 cv
cp
.72668 .625269 .308721 .103059 cmyk
f
780.192 420.906 mo
777.708 425.209 773.214 427.265 770.154 425.498 cv
767.094 423.731 766.628 418.812 769.111 414.509 cv
771.596 410.206 776.09 408.15 779.15 409.917 cv
782.21 411.684 782.676 416.604 780.192 420.906 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
773.084 410.38 mo
771.574 411.276 770.163 412.688 769.111 414.509 cv
766.628 418.812 767.094 423.731 770.154 425.498 cv
771.23 426.119 772.484 426.259 773.765 426.003 cv
772.908 420.391 772.84 414.953 773.084 410.38 cv
cp
.278386 .193088 .0924697 0 cmyk
f
767.182 389.392 mo
765.737 388.694 763.386 387.363 760.936 385.924 cv
759.93 386.569 758.83 387.274 757.659 388.026 cv
758.817 388.834 759.59 389.66 759.546 390.145 cv
759.546 390.145 761.052 391.327 761.482 392.511 cv
760.836 397.135 751.588 407.351 747.394 410.555 cv
743.2 413.759 739.543 415.363 733.951 414.233 cv
733.339 414.11 732.792 413.948 732.286 413.767 cv
732.374 416.228 732.374 418.704 732.051 420.507 cv
731.191 425.311 729.901 426.314 729.901 426.314 cv
714.414 435.777 li
714.414 435.777 720.15 423.59 720.867 419.719 cv
721.584 415.847 720.437 410.972 720.437 410.972 cv
720.437 410.972 724.151 410.136 727.196 408.229 cv
727.62 407.945 728.868 406.996 728.868 406.996 cv
728.868 406.996 729.494 406.389 729.757 406.097 cv
729.97 405.636 730.13 405.201 730.25 404.809 cv
730.403 404.181 730.531 403.439 730.619 402.799 cv
730.619 402.799 729.703 402.919 728.563 402.88 cv
728.563 402.88 li
726.954 402.823 724.896 402.445 724.308 400.935 cv
723.304 398.354 721.727 393.622 716.565 390.754 cv
711.403 387.886 706.815 392.188 706.815 392.188 cv
706.815 392.188 704.807 390.754 704.09 389.463 cv
703.374 388.173 698.212 396.346 703.087 405.093 cv
703.087 405.093 694.914 412.979 689.321 426.744 cv
684.589 438.358 685.02 441.656 687.027 444.381 cv
689.035 447.105 699.072 447.105 706.672 445.241 cv
706.672 445.241 714.128 449.974 715.418 458.72 cv
722.588 454.275 754.276 434.2 758.004 431.906 cv
761.733 429.612 775.211 392.618 775.641 387.456 cv
773.454 389.392 770.3 390.897 767.182 389.392 cv
cp
f
728.868 406.996 mo
728.868 406.996 731.8 412.083 740.403 409.502 cv
749.007 406.921 759.439 391.327 759.546 390.145 cv
759.653 388.962 754.922 385.735 751.481 385.735 cv
748.039 385.735 730.521 399.133 729.542 401.006 cv
728.563 402.88 728.563 402.88 728.563 402.88 cv
728.563 402.88 729.869 402.87 730.619 402.799 cv
730.447 404.05 730.124 405.691 729.757 406.097 cv
729.494 406.389 728.868 406.996 728.868 406.996 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
759.546 390.145 mo
759.439 391.327 749.007 406.921 740.403 409.502 cv
731.8 412.083 728.868 406.996 728.868 406.996 cv
728.868 406.996 727.412 408.104 727.104 408.29 cv
727.445 409.233 728.359 413.104 733.951 414.233 cv
739.543 415.363 743.2 413.759 747.394 410.555 cv
751.588 407.351 760.836 397.135 761.482 392.511 cv
761.052 391.327 759.546 390.145 759.546 390.145 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
754.814 413.266 mo
754.169 414.449 744.705 426.816 738.36 427.354 cv
732.016 427.892 730.909 424.652 730.909 424.652 cv
730.358 425.951 729.901 426.314 729.901 426.314 cv
714.414 435.777 li
713.059 438.73 712.55 441.012 713.411 444.237 cv
715.669 451.873 724.38 448.97 724.38 448.97 cv
724.38 448.97 742.77 438 749.329 433.591 cv
758.471 425.849 755.459 412.083 754.814 413.266 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
753.273 381.29 mo
756.72 383.432 764.063 387.886 767.182 389.392 cv
770.3 390.897 773.454 389.392 775.641 387.456 cv
777.828 385.521 783.958 380.251 785.033 378.314 cv
786.109 376.379 786.861 368.744 786.001 366.163 cv
785.141 363.582 779.226 359.71 774.494 358.097 cv
769.762 356.484 762.915 355.839 753.273 360.463 cv
750.297 362.722 751.481 376.917 751.588 378.53 cv
751.695 380.144 752.303 380.688 753.273 381.29 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
753.846 381.646 mo
757.477 383.891 764.225 387.964 767.182 389.392 cv
767.717 389.65 768.253 389.814 768.786 389.908 cv
768.82 389.879 li
768.82 389.879 768.82 376.379 768.82 373.45 cv
767.878 373.209 753.846 365.374 753.846 365.374 cv
753.846 381.646 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
753.846 373.619 mo
752.289 372.753 751.28 372.188 751.279 372.187 cv
751.333 375.262 751.545 377.89 751.588 378.53 cv
751.695 380.144 752.303 380.688 753.273 381.29 cv
753.451 381.401 753.648 381.522 753.846 381.646 cv
753.846 373.619 li
cp
.707393 .60531 .27628 .0864881 cmyk
f
771.16 382.832 mo
770.804 382.719 769.96 382.317 768.82 381.738 cv
768.82 385.864 768.82 389.879 768.82 389.879 cv
768.786 389.908 li
768.544 389.865 768.302 389.804 768.059 389.729 cv
770.883 390.603 773.659 389.21 775.641 387.456 cv
777.828 385.521 783.958 380.251 785.033 378.314 cv
785.559 377.369 786.006 375.061 786.227 372.646 cv
782.184 376.6 772.921 383.388 771.16 382.832 cv
cp
f
703.706 405.803 mo
705.083 407.313 706.56 408.432 708.045 409.252 cv
721.463 411.404 724.308 400.935 724.308 400.935 cv
723.304 398.354 721.727 393.622 716.565 390.754 cv
711.403 387.886 706.815 392.188 706.815 392.188 cv
701.663 397.77 703.698 405.772 703.706 405.803 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
709.969 404.52 mo
709.969 404.52 714.007 404.225 717.713 399.656 cv
719.29 400.791 720.293 402.369 720.293 402.369 cv
720.293 402.369 714.701 407.101 709.969 404.52 cv
cp
0 0 0 0 cmyk
f
755.801 418.14 mo
755.772 414.915 755.085 412.769 754.814 413.266 cv
754.169 414.449 744.705 426.816 738.36 427.354 cv
732.016 427.892 730.909 424.652 730.909 424.652 cv
730.358 425.951 729.901 426.314 729.901 426.314 cv
729.901 426.314 728.036 430.902 729.327 433.753 cv
730.617 436.603 737.213 437.283 742.59 434.058 cv
747.967 430.831 753.311 424.304 755.801 418.14 cv
755.801 418.14 li
cp
.731685 .63061 .311528 .106691 cmyk
f
754.814 413.266 mo
759.295 409.395 768.449 402.293 770.826 403.263 cv
773.469 395.85 775.48 389.398 775.641 387.456 cv
773.83 389.06 771.355 390.361 768.786 389.908 cv
768.786 389.908 760.917 398.367 754.657 403.379 cv
754.357 403.726 754.054 404.067 753.75 404.404 cv
753.706 404.454 753.662 404.503 753.618 404.552 cv
753.329 404.872 753.04 405.186 752.752 405.494 cv
752.698 405.552 752.646 405.608 752.592 405.666 cv
752.304 405.973 752.017 406.273 751.734 406.565 cv
751.692 406.608 751.651 406.649 751.609 406.692 cv
751.314 406.994 751.021 407.289 750.734 407.572 cv
750.731 407.575 750.727 407.579 750.724 407.583 cv
750.438 407.865 750.158 408.133 749.884 408.392 cv
749.844 408.43 749.804 408.469 749.765 408.506 cv
749.503 408.751 749.25 408.983 749.003 409.204 cv
748.958 409.245 748.914 409.284 748.869 409.324 cv
748.625 409.541 748.389 409.746 748.162 409.937 cv
748.129 409.964 748.098 409.989 748.065 410.017 cv
747.83 410.211 747.604 410.395 747.394 410.555 cv
746.943 410.899 746.5 411.221 746.058 411.526 cv
746.047 411.535 746.035 411.544 746.023 411.552 cv
745.578 411.859 745.135 412.146 744.693 412.411 cv
744.693 412.411 747.322 415.417 754.814 413.266 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
770.974 389.896 mo
770.961 389.949 769.905 394.23 773.64 394.981 cv
774.791 391.373 775.545 388.613 775.641 387.456 cv
774.354 388.596 772.729 389.581 770.974 389.896 cv
cp
.0208438 .691371 .53521 .00747692 cmyk
f
720.437 410.972 mo
720.437 410.972 720.449 410.969 720.472 410.964 cv
720.453 410.968 720.437 410.972 720.437 410.972 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
703.087 405.093 mo
703.087 405.093 694.914 412.979 689.321 426.744 cv
684.589 438.358 685.02 441.656 687.027 444.381 cv
687.755 445.369 689.548 445.995 691.891 446.307 cv
692.033 446.255 705.393 441.325 720.867 419.719 cv
721.584 415.847 720.437 410.972 720.437 410.972 cv
720.437 410.972 710.185 413.696 703.087 405.093 cv
cp
f
701.619 401.563 mo
701.596 401.484 701.574 401.405 701.553 401.326 cv
701.574 401.405 701.596 401.484 701.619 401.563 cv
cp
f
701.964 402.645 mo
701.964 402.643 701.964 402.641 701.963 402.639 cv
701.964 402.641 701.964 402.643 701.964 402.645 cv
cp
f
714.062 389.88 mo
714.066 389.88 714.069 389.881 714.072 389.882 cv
714.069 389.881 714.066 389.88 714.062 389.88 cv
cp
f
713.414 389.801 mo
713.414 389.801 li
713.414 389.801 li
713.414 389.801 li
cp
f
720.687 410.91 mo
720.705 410.906 720.72 410.902 720.74 410.897 cv
720.721 410.902 720.704 410.906 720.687 410.91 cv
cp
f
720.904 410.854 mo
720.923 410.849 720.943 410.844 720.964 410.838 cv
720.943 410.844 720.923 410.849 720.904 410.854 cv
cp
f
702.53 403.993 mo
702.488 403.904 702.447 403.815 702.408 403.727 cv
702.447 403.815 702.488 403.904 702.53 403.993 cv
cp
f
720.523 410.951 mo
720.54 410.947 720.553 410.944 720.576 410.938 cv
720.555 410.943 720.539 410.947 720.523 410.951 cv
cp
f
721.166 410.783 mo
721.192 410.775 721.219 410.768 721.246 410.761 cv
721.219 410.768 721.192 410.775 721.166 410.783 cv
cp
f
721.486 410.691 mo
721.513 410.684 721.54 410.676 721.567 410.668 cv
721.54 410.676 721.512 410.684 721.486 410.691 cv
cp
f
721.851 410.582 mo
721.874 410.575 721.899 410.567 721.923 410.56 cv
721.899 410.567 721.874 410.575 721.851 410.582 cv
cp
f
704.707 406.813 mo
704.703 406.813 li
704.703 406.813 701.157 413.982 704.416 417.424 cv
707.675 420.865 717.317 416.706 720.831 413.194 cv
720.647 411.869 720.437 410.972 720.437 410.972 cv
720.437 410.972 711.645 413.302 704.707 406.813 cv
cp
.712367 .610651 .278935 .0900282 cmyk
f
724.727 429.476 mo
714.414 435.777 li
713.421 437.941 712.889 439.747 713.011 441.825 cv
716.222 439.953 723.022 435.983 724.165 435.276 cv
725.147 434.668 724.969 431.564 724.727 429.476 cv
cp
.72668 .625269 .308721 .103059 cmyk
f
729.757 438.431 mo
728.61 439.146 714.992 447.186 714.975 447.196 cv
718.291 450.995 724.38 448.97 724.38 448.97 cv
724.38 448.97 733.943 443.266 741.736 438.431 cv
741.734 438.431 730.904 437.714 729.757 438.431 cv
cp
f
704.09 389.463 mo
704.396 390.013 704.934 390.583 705.453 391.063 cv
705.451 391.02 705.381 388.091 705.453 386.739 cv
703.876 385.592 703.039 387.169 703.039 387.169 cv
702.53 390.808 li
702.53 390.808 li
703.19 389.599 703.863 389.055 704.09 389.463 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
705.453 384.517 mo
705.094 383.871 703.374 381.505 701.891 379.569 cv
699.62 377.849 698.426 380.573 698.857 381.219 cv
699.287 381.864 703.039 387.169 703.039 387.169 cv
703.039 387.169 703.876 385.592 705.453 386.739 cv
705.453 386.739 705.811 385.162 705.453 384.517 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
733.055 402.473 mo
733.055 402.473 742.16 403.659 743.522 403.802 cv
744.884 403.945 744.884 407.098 743.02 406.956 cv
741.156 406.813 733.055 405.738 733.055 405.738 cv
733.055 405.738 731.621 404.227 733.055 402.473 cv
cp
f
733.055 402.473 mo
730.619 402.799 li
730.531 403.439 730.403 404.181 730.25 404.809 cv
730.13 405.201 729.97 405.636 729.757 406.097 cv
733.055 405.738 li
733.055 405.738 731.621 404.227 733.055 402.473 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
702.327 465.763 mo
699.843 470.065 695.349 472.121 692.289 470.354 cv
689.23 468.588 688.763 463.668 691.247 459.365 cv
693.732 455.063 698.226 453.007 701.285 454.773 cv
704.345 456.54 704.812 461.46 702.327 465.763 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
706.672 445.241 mo
703.682 445.975 700.319 446.414 697.213 446.519 cv
697.211 446.52 697.209 446.521 697.208 446.521 cv
697.745 446.846 698.257 447.302 698.74 447.784 cv
699.862 447.914 700.934 448.254 701.913 448.819 cv
703.433 449.696 704.567 451.039 705.322 452.67 cv
708.968 454.848 714.187 457.98 715.418 458.72 cv
715.256 457.893 li
713.634 449.683 706.672 445.241 706.672 445.241 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
688.533 439.435 mo
688.296 437.952 688.103 436.638 689.752 433.556 cv
691.329 433.483 694.463 436.279 694.509 436.781 cv
694.555 437.283 692.619 440.008 690.684 440.366 cv
688.748 440.725 688.626 440.013 688.533 439.435 cv
cp
0 0 0 0 cmyk
f
693.731 417.734 mo
692.212 420.368 690.689 423.378 689.321 426.744 cv
688.623 428.458 688.05 429.972 687.565 431.349 cv
687.638 431.306 689.666 430.11 690.827 427.999 cv
692.01 425.849 693.731 421.009 693.731 420.579 cv
693.731 420.153 693.731 417.784 693.731 417.734 cv
cp
.0208438 .691371 .53521 .00747692 cmyk
f
698.77 440.463 mo
698.77 440.463 698.405 438.462 701.015 435.65 cv
703.625 432.838 705.99 430.524 708.141 429.315 cv
710.292 428.106 711.935 428.106 711.935 428.106 cv
711.935 428.106 707.143 434.752 698.77 440.463 cv
cp
f
720.951 364.084 mo
706.983 363.51 706.815 392.188 706.815 392.188 cv
706.815 392.188 711.403 387.886 716.565 390.754 cv
721.727 393.622 723.304 398.354 724.308 400.935 cv
724.896 402.445 726.954 402.823 728.563 402.88 cv
728.563 402.88 li
728.671 402.883 728.774 402.885 728.876 402.886 cv
729.757 402.369 li
731.406 386.321 li
731.406 386.321 734.919 364.657 720.951 364.084 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
729.757 402.369 mo
729.95 400.485 li
729.749 400.704 729.607 400.882 729.542 401.006 cv
728.563 402.88 728.563 402.88 728.563 402.88 cv
728.563 402.88 728.698 402.878 728.894 402.875 cv
729.757 402.369 li
cp
.278386 .193088 .0924697 0 cmyk
f
685.439 455.532 mo
691.804 456.735 699.36 458.816 705.481 462.387 cv
707.243 456.639 706.011 451.185 701.913 448.819 cv
696.961 445.96 689.636 448.872 685.439 455.532 cv
cp
.796719 .682582 .393744 .196048 cmyk
f
692.791 457.243 mo
696.545 458.293 700.361 459.672 703.824 461.477 cv
704.223 458.58 703.344 455.962 701.285 454.773 cv
698.785 453.329 695.328 454.44 692.791 457.243 cv
cp
.278386 .193088 .0924697 0 cmyk
f
706.672 445.241 mo
704.961 445.661 703.127 445.98 701.289 446.201 cv
701.288 446.202 li
698.785 457.465 li
698.192 458.173 li
696.702 457.997 694.938 459.035 693.873 460.881 cv
692.566 463.145 692.811 465.733 694.421 466.662 cv
696.03 467.592 698.395 466.511 699.702 464.247 cv
700.233 463.326 700.495 462.356 700.526 461.462 cv
701.288 460.947 li
706.672 445.241 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
698.166 463.36 mo
697.548 464.431 696.429 464.942 695.668 464.503 cv
694.906 464.063 694.79 462.839 695.408 461.768 cv
696.026 460.697 697.145 460.186 697.907 460.625 cv
698.668 461.064 698.784 462.289 698.166 463.36 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
695.64 472.055 mo
688.128 474.155 683.876 469.049 683.68 468.807 cv
684.441 470.511 685.664 471.957 687.386 472.951 cv
692.612 475.969 699.733 473.15 703.35 467.144 cv
704.294 465.576 704.993 463.974 705.479 462.393 cv
705.459 462.462 703.297 469.914 695.64 472.055 cv
cp
f
777.553 412.684 mo
775.579 411.545 772.682 412.87 771.079 415.645 cv
769.837 417.798 769.752 420.178 770.693 421.675 cv
760.201 428.867 li
759.308 430.484 758.551 431.57 758.004 431.906 cv
756.555 432.798 750.873 436.381 744.055 440.686 cv
744.055 440.686 749.546 440.939 751.266 439.937 cv
752.985 438.933 775.641 423.877 775.641 423.877 cv
776.165 422.099 li
776.946 421.526 777.665 420.739 778.225 419.771 cv
779.826 416.995 779.526 413.823 777.553 412.684 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
776.03 418.504 mo
775.412 419.574 774.294 420.086 773.532 419.646 cv
772.771 419.207 772.655 417.982 773.274 416.911 cv
773.892 415.841 775.01 415.329 775.772 415.769 cv
776.533 416.208 776.649 417.433 776.03 418.504 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
748.214 440.615 mo
749.436 440.514 750.618 440.314 751.266 439.937 cv
752.985 438.933 775.641 423.877 775.641 423.877 cv
776.165 422.099 li
748.214 440.463 li
748.214 440.615 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
470.966 379.858 mo
495.58 353.496 li
493.435 352.214 li
470.342 375.652 li
464.267 383.726 li
470.966 379.858 li
cp
.821683 .7084 .379187 .253361 cmyk
f
528.995 439.538 mo
514.226 443.553 509.924 464.2 511.358 472.087 cv
541.936 455.454 li
541.936 455.454 543.764 435.522 528.995 439.538 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
523.116 424.052 mo
520.32 425.987 509.814 428.07 483.541 412.065 cv
457.838 396.408 457.516 391.47 459.667 388.833 cv
461.817 386.197 493.435 352.214 493.435 352.214 cv
493.435 352.214 524.191 370.711 549.141 383.616 cv
541.828 394.801 525.912 422.116 523.116 424.052 cv
cp
638.078 382.434 mo
637.54 380.497 635.676 380.748 635.676 380.748 cv
635.676 380.748 636.68 367.27 635.676 363.686 cv
634.672 360.101 630.944 358.667 629.797 357.807 cv
629.797 357.807 615.279 367.593 612.268 370.389 cv
609.257 373.185 606.891 378.132 603.127 381.788 cv
599.363 385.444 540.538 418.675 539.462 419.104 cv
538.387 419.535 535.776 417.532 536.881 415.649 cv
536.881 415.649 551.077 390.929 560.541 383.401 cv
570.004 375.873 587.641 367.485 598.18 363.613 cv
608.719 359.742 619.903 356.157 622.915 352.788 cv
622.915 352.788 624.062 349.347 622.197 345.618 cv
610.439 335.581 577.747 318.518 573.589 318.661 cv
569.431 318.805 533.01 328.842 521.252 333.431 cv
509.494 338.019 500.317 343.468 491.284 351.21 cv
482.25 358.953 457.301 387.918 457.301 387.918 cv
451.422 393.653 440.811 403.978 436.653 411.863 cv
432.495 419.75 431.898 433.641 433.785 437.53 cv
443.105 456.744 475.818 469.165 489.563 473.091 cv
498.677 475.693 509.781 472.804 511.358 472.087 cv
509.924 464.2 514.226 443.553 528.995 439.538 cv
543.764 435.522 541.936 455.454 541.936 455.454 cv
602.589 419.75 li
602.589 419.75 599.686 398.564 616.785 389.208 cv
633.884 379.853 633.238 401.36 633.238 401.36 cv
633.238 401.36 633.776 400.823 635.605 398.779 cv
637.433 396.736 638.615 384.369 638.078 382.434 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
502.576 459.863 mo
502.576 458.143 505.049 454.916 505.049 454.916 cv
505.049 454.916 502.361 455.131 500.64 457.066 cv
498.919 459.003 498.812 459.863 498.812 461.261 cv
498.812 462.659 498.812 466.208 498.812 467.714 cv
498.812 469.219 494.725 471.37 493.757 471.37 cv
492.79 471.37 480.745 467.714 477.196 465.777 cv
477.196 463.089 477.196 462.336 477.196 460.078 cv
477.196 457.819 471.066 450.185 461.925 445.237 cv
452.784 440.29 447.622 438.785 444.396 440.183 cv
442.89 441.581 443.428 445.345 443.428 445.345 cv
443.428 445.345 434.795 438.108 432.838 432.75 cv
432.974 434.83 433.295 436.52 433.785 437.53 cv
443.105 456.744 475.818 469.165 489.563 473.091 cv
498.677 475.693 509.781 472.804 511.358 472.087 cv
511.358 472.087 504.673 470.133 502.576 468.036 cv
502.576 464.81 502.576 461.584 502.576 459.863 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
510.322 472.448 mo
510.321 472.449 510.319 472.449 510.317 472.45 cv
510.319 472.449 510.32 472.449 510.322 472.448 cv
cp
.278386 .193088 .0924697 0 cmyk
f
510.66 472.344 mo
510.658 472.344 510.657 472.345 510.655 472.345 cv
510.657 472.345 510.658 472.344 510.66 472.344 cv
cp
f
638.078 382.434 mo
637.54 380.497 635.676 380.748 635.676 380.748 cv
635.676 380.748 636.68 367.27 635.676 363.686 cv
635.072 361.529 633.484 360.154 632.064 359.211 cv
629.025 363.054 619.903 368.561 616.462 371.142 cv
613.021 373.723 608.719 382.326 605.134 384.333 cv
601.55 386.341 554.662 413.584 543.764 419.894 cv
532.867 426.202 521.969 434.806 521.969 434.806 cv
505.049 454.916 li
505.049 454.916 502.576 458.143 502.576 459.863 cv
502.576 461.584 502.576 464.81 502.576 468.036 cv
504.673 470.133 511.358 472.087 511.358 472.087 cv
509.924 464.2 514.226 443.553 528.995 439.538 cv
543.764 435.522 541.936 455.454 541.936 455.454 cv
602.589 419.75 li
602.589 419.75 599.686 398.564 616.785 389.208 cv
633.884 379.853 633.238 401.36 633.238 401.36 cv
633.238 401.36 633.776 400.823 635.605 398.779 cv
637.433 396.736 638.615 384.369 638.078 382.434 cv
cp
f
510.948 472.247 mo
510.934 472.252 510.917 472.257 510.902 472.262 cv
510.917 472.257 510.934 472.252 510.948 472.247 cv
cp
f
511.18 472.161 mo
511.174 472.163 511.167 472.166 511.16 472.168 cv
511.167 472.166 511.174 472.163 511.18 472.161 cv
cp
f
636.088 372.299 mo
636.088 372.299 546.345 423.048 541.327 426.776 cv
536.308 430.504 534.431 439.171 534.431 439.171 cv
534.43 439.182 li
543.262 440.907 541.936 455.454 541.936 455.454 cv
602.589 419.75 li
602.589 419.75 599.686 398.564 616.785 389.208 cv
633.884 379.853 633.238 401.36 633.238 401.36 cv
633.238 401.36 633.776 400.823 635.605 398.779 cv
637.433 396.736 638.615 384.369 638.078 382.434 cv
637.54 380.497 635.676 380.748 635.676 380.748 cv
635.676 380.748 635.984 376.604 636.088 372.299 cv
636.088 372.299 li
cp
.390814 .279911 .131106 .00198367 cmyk
f
602.624 412.065 mo
541.516 448.08 li
542.259 451.889 541.936 455.454 541.936 455.454 cv
602.589 419.75 li
602.589 419.75 602.154 416.536 602.624 412.066 cv
602.624 412.065 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
602.624 412.066 mo
602.624 412.065 li
556.706 439.127 li
556.706 439.127 li
550.555 450.38 li
550.555 450.38 li
602.589 419.75 li
602.589 419.75 602.154 416.536 602.624 412.066 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
483.541 412.065 mo
457.838 396.408 457.516 391.47 459.667 388.833 cv
459.667 388.833 458.265 388.633 456.172 389.02 cv
451.717 393.373 445.315 399.731 440.701 405.743 cv
437.481 422.409 474.451 442.118 491.714 442.118 cv
509.566 442.118 523.116 424.052 523.116 424.052 cv
520.32 425.987 509.814 428.07 483.541 412.065 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
436.418 412.332 mo
437.308 420.158 444.719 426.74 444.719 426.74 cv
444.719 426.74 444.611 424.267 444.719 422.331 cv
439.8 416.486 438.479 411.837 438.143 409.356 cv
437.591 410.211 437.081 411.053 436.653 411.863 cv
436.572 412.017 436.496 412.175 436.418 412.332 cv
cp
0 0 0 0 cmyk
f
483.864 444.055 mo
462.99 438.868 444.719 422.331 444.719 422.331 cv
444.611 424.267 444.719 426.74 444.719 426.74 cv
463 443.194 481.81 447.388 481.81 447.388 cv
482.336 446.205 483.864 444.055 483.864 444.055 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
444.671 424.488 mo
460.825 438.77 477.186 444.371 482.615 445.937 cv
483.213 444.971 483.864 444.055 483.864 444.055 cv
462.99 438.868 444.719 422.331 444.719 422.331 cv
444.68 423.027 444.669 423.792 444.671 424.488 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
498.274 449.754 mo
489.133 449.95 481.81 447.388 481.81 447.388 cv
481.81 447.388 463 443.194 444.719 426.74 cv
444.719 426.74 437.311 420.16 436.418 412.335 cv
435.91 413.363 435.455 414.479 435.058 415.656 cv
435.056 415.74 434.989 421.665 442.962 428.783 cv
450.992 435.953 468.198 446.453 480.53 450.811 cv
492.861 455.167 502.789 453.623 508.866 450.38 cv
510.155 449.692 514.852 445.61 514.188 444.055 cv
511.358 445.44 502.797 449.657 498.274 449.754 cv
cp
.278386 .193088 .0924697 0 cmyk
f
568.068 369.421 mo
579.683 364.044 622.197 345.618 622.197 345.618 cv
610.439 335.581 577.747 318.518 573.589 318.661 cv
569.431 318.805 533.01 328.842 521.252 333.431 cv
510.024 337.812 501.15 342.983 492.507 350.183 cv
492.659 350.931 492.935 351.688 493.435 352.214 cv
493.435 352.214 524.191 370.711 549.141 383.616 cv
549.141 383.616 556.454 374.798 568.068 369.421 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
514.226 397.668 mo
514.226 397.668 510.211 399.676 507.343 401.396 cv
496.876 394.514 470.967 379.859 470.966 379.858 cv
464.267 383.726 li
461.83 386.388 460.113 388.286 459.667 388.833 cv
457.516 391.47 457.838 396.408 483.541 412.065 cv
509.814 428.07 520.32 425.987 523.116 424.052 cv
524.434 423.14 528.666 416.59 533.537 408.75 cv
528.902 405.206 514.226 397.668 514.226 397.668 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
506.001 359.635 mo
470.966 379.858 li
470.966 379.858 li
470.966 379.858 477.616 383.62 485.536 388.225 cv
489.803 386.246 498.411 383.051 509.979 382.756 cv
509.736 377.14 510.538 367.586 511.021 362.549 cv
509.254 361.527 507.568 360.548 506.001 359.635 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
511.021 362.549 mo
510.538 367.586 509.736 377.14 509.979 382.756 cv
539.208 399.548 li
540.129 378.854 li
540.129 378.854 li
529.898 373.349 519.443 367.418 511.021 362.549 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
513.007 421.686 mo
507.415 420.61 478.809 404.909 469.991 398.902 cv
461.182 392.902 460.956 387.38 460.956 387.367 cv
460.316 388.079 459.863 388.593 459.667 388.833 cv
457.516 391.47 457.838 396.408 483.541 412.065 cv
509.814 428.07 520.32 425.987 523.116 424.052 cv
523.511 423.778 524.171 422.991 525.027 421.823 cv
524.575 422.424 518.59 422.76 513.007 421.686 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
507.343 401.396 mo
510.211 399.676 514.226 397.668 514.226 397.668 cv
514.226 397.668 519.708 400.484 525.028 403.482 cv
539.208 399.548 li
509.979 382.756 li
498.411 383.051 489.803 386.246 485.536 388.225 cv
493.253 392.712 502.178 398 507.343 401.396 cv
cp
f
539.208 399.548 mo
542.952 393.447 546.576 387.539 549.141 383.616 cv
547.73 382.887 546.299 382.137 544.858 381.376 cv
544.768 381.328 544.679 381.282 544.588 381.234 cv
543.194 380.497 541.79 379.747 540.38 378.989 cv
540.296 378.943 540.213 378.9 540.129 378.855 cv
539.208 399.548 li
cp
.858457 .739651 .439277 .415595 cmyk
f
533.537 408.75 mo
533.108 409.439 532.686 410.116 532.269 410.783 cv
534.477 407.253 536.865 403.365 539.208 399.548 cv
525.028 403.482 li
525.026 403.481 525.024 403.48 525.022 403.479 cv
528.41 405.388 531.733 407.371 533.537 408.75 cv
cp
f
512.746 368.674 mo
512.746 368.674 520.652 371.03 528.023 377.487 cv
528.706 378.854 527.613 379.926 526.931 380.06 cv
526.249 380.194 513.847 373.229 512.746 371.755 cv
511.645 370.281 511.98 368.418 512.746 368.674 cv
cp
.278386 .193088 .0924697 0 cmyk
f
499.744 370.567 mo
498.486 370.116 495.729 372.273 495.585 373.93 cv
495.442 375.587 497.88 376.16 499.744 375.156 cv
501.608 374.152 500.823 370.956 499.744 370.567 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
539.462 419.104 mo
540.499 418.69 595.155 387.82 602.496 382.305 cv
597.107 364.02 li
586.48 368.044 569.696 376.119 560.541 383.401 cv
551.077 390.929 536.881 415.649 536.881 415.649 cv
535.776 417.532 538.387 419.535 539.462 419.104 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
600.441 362.79 mo
599.686 363.063 598.932 363.338 598.18 363.613 cv
597.293 363.939 596.341 364.308 595.364 364.694 cv
595.364 364.696 li
595.958 364.462 596.546 364.231 597.107 364.02 cv
602.495 382.303 li
602.767 382.099 602.992 381.919 603.127 381.788 cv
604.081 380.861 604.944 379.853 605.751 378.816 cv
600.441 362.79 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
631.446 391.827 mo
633.397 396.027 633.238 401.36 633.238 401.36 cv
633.238 401.36 633.776 400.823 635.605 398.779 cv
637.433 396.736 638.615 384.369 638.078 382.434 cv
637.54 380.497 635.676 380.748 635.676 380.748 cv
635.676 380.748 635.676 384.333 634.959 387.201 cv
634.533 388.907 632.79 390.672 631.446 391.827 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
600.441 362.79 mo
605.751 378.816 li
608.13 375.763 610.02 372.477 612.268 370.389 cv
615.279 367.593 629.797 357.807 629.797 357.807 cv
622.915 352.788 li
620.118 355.917 610.272 359.232 600.441 362.79 cv
cp
f
471.057 372.299 mo
471.057 372.299 468.772 366.267 462.463 366.267 cv
460.025 368.273 461.459 372.299 461.459 372.299 cv
461.459 372.299 462.464 375.52 466.048 377.919 cv
467.912 376.017 471.057 372.299 471.057 372.299 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
461.459 372.299 mo
461.459 372.299 462.464 375.52 466.048 377.919 cv
466.667 377.287 467.428 376.454 468.168 375.624 cv
466.952 374.677 465.637 373.478 464.614 372.093 cv
462.033 368.599 462.463 366.267 462.463 366.267 cv
460.025 368.273 461.459 372.299 461.459 372.299 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
511.241 471.311 mo
516.859 474.837 521.969 474.109 521.969 474.109 cv
521.97 474.105 li
520.712 473.993 519.511 473.638 518.414 473.005 cv
512.721 469.718 511.973 460.356 516.743 452.096 cv
519.327 447.618 523.003 444.398 526.733 442.897 cv
526.735 442.885 li
523.938 441.766 li
513.623 448.274 510.337 464.008 511.241 471.311 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
616.785 389.208 mo
602.413 397.072 602.172 413.288 602.461 418.263 cv
608.86 423.464 615.434 421.684 615.434 421.684 cv
630.42 401.36 li
633.238 401.36 li
633.238 401.36 633.884 379.853 616.785 389.208 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
537.357 463.997 mo
532.587 472.259 524.106 476.291 518.414 473.005 cv
512.721 469.718 511.973 460.356 516.743 452.096 cv
521.512 443.835 529.993 439.802 535.686 443.089 cv
541.378 446.375 542.126 455.736 537.357 463.997 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
534.887 462.571 mo
531.521 468.402 525.43 471.188 521.284 468.794 cv
517.138 466.4 516.505 459.733 519.872 453.902 cv
523.238 448.071 529.329 445.285 533.475 447.68 cv
537.621 450.073 538.253 456.74 534.887 462.571 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
530.167 447.249 mo
529.018 447.249 527.796 447.532 526.56 448.098 cv
524.07 449.236 521.828 451.374 520.244 454.117 cv
518.661 456.861 517.931 459.872 518.189 462.597 cv
518.442 465.267 519.618 467.335 521.5 468.422 cv
525.432 470.693 531.272 467.972 534.515 462.356 cv
537.757 456.74 537.194 450.323 533.259 448.052 cv
532.332 447.517 531.283 447.249 530.167 447.249 cv
cp
524.569 470.076 mo
523.329 470.076 522.138 469.783 521.069 469.167 cv
518.939 467.938 517.613 465.633 517.333 462.678 cv
517.058 459.776 517.827 456.584 519.5 453.688 cv
521.172 450.791 523.552 448.528 526.202 447.315 cv
528.901 446.081 531.561 446.077 533.689 447.307 cv
538.035 449.815 538.739 456.76 535.259 462.786 cv
532.636 467.33 528.371 470.076 524.569 470.076 cv
cp
.278386 .193088 .0924697 0 cmyk
f
517.714 461.46 mo
524.622 459.971 li
519.702 467.478 li
520.157 467.994 520.678 468.444 521.284 468.794 cv
522.22 469.335 523.257 469.598 524.338 469.635 cv
527.74 461.046 li
531.962 466.302 li
533.056 465.265 534.055 464.012 534.887 462.571 cv
534.905 462.54 534.919 462.508 534.938 462.477 cv
529.784 457.892 li
536.441 451.369 li
535.866 449.8 534.888 448.511 533.508 447.702 cv
528.852 453.453 li
528.852 446.945 li
527.644 447.146 526.415 447.615 525.229 448.323 cv
524.98 456.386 li
518.802 456.104 li
518.077 457.92 517.722 459.751 517.714 461.46 cv
cp
f
518.018 458.716 mo
526.375 458.671 li
521.252 468.772 li
521.264 468.779 521.273 468.788 521.284 468.794 cv
521.524 468.933 521.772 469.05 522.024 469.154 cv
527.205 458.938 li
533.452 464.675 li
533.629 464.452 533.798 464.217 533.967 463.98 cv
527.681 458.207 li
535.452 449.472 li
535.28 449.236 535.094 449.014 534.894 448.804 cv
527.508 457.105 li
527.508 447.274 li
527.22 447.368 526.934 447.478 526.647 447.6 cv
526.647 457.81 li
518.227 457.854 li
518.148 458.143 518.078 458.43 518.018 458.716 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
526.772 460.773 mo
526.506 460.773 526.25 460.71 526.021 460.578 cv
525.564 460.314 525.28 459.819 525.22 459.186 cv
525.161 458.563 525.326 457.878 525.685 457.257 cv
526.043 456.635 526.554 456.149 527.123 455.89 cv
527.702 455.624 528.272 455.624 528.729 455.888 cv
529.662 456.426 529.813 457.916 529.066 459.209 cv
528.503 460.184 527.588 460.773 526.772 460.773 cv
cp
.278386 .193088 .0924697 0 cmyk
f
527.085 459.452 mo
526.958 459.452 526.834 459.422 526.725 459.358 cv
526.505 459.231 526.368 458.994 526.339 458.689 cv
526.311 458.391 526.391 458.062 526.563 457.764 cv
526.735 457.465 526.98 457.231 527.253 457.106 cv
527.532 456.979 527.806 456.979 528.025 457.105 cv
528.473 457.364 528.545 458.08 528.187 458.701 cv
527.917 459.169 527.477 459.452 527.085 459.452 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
629.018 411.597 mo
624.248 419.857 615.767 423.891 610.075 420.604 cv
604.382 417.317 603.634 407.956 608.403 399.694 cv
613.173 391.434 621.654 387.4 627.347 390.688 cv
633.039 393.974 633.788 403.335 629.018 411.597 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
626.548 410.17 mo
623.182 416.001 617.091 418.787 612.945 416.394 cv
608.799 413.999 608.167 407.332 611.533 401.501 cv
614.899 395.671 620.989 392.885 625.136 395.278 cv
629.282 397.672 629.914 404.34 626.548 410.17 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
621.828 394.849 mo
620.678 394.849 619.458 395.131 618.221 395.696 cv
615.731 396.836 613.489 398.974 611.905 401.717 cv
610.321 404.46 609.591 407.472 609.85 410.195 cv
610.103 412.866 611.278 414.935 613.161 416.021 cv
617.092 418.292 622.933 415.571 626.175 409.955 cv
629.418 404.34 628.855 397.923 624.92 395.651 cv
623.993 395.116 622.944 394.849 621.828 394.849 cv
cp
616.229 417.675 mo
614.989 417.675 613.799 417.383 612.73 416.766 cv
610.601 415.536 609.274 413.231 608.993 410.277 cv
608.718 407.376 609.488 404.184 611.161 401.286 cv
612.833 398.39 615.213 396.127 617.863 394.914 cv
620.563 393.68 623.222 393.677 625.351 394.905 cv
629.696 397.415 630.4 404.358 626.92 410.386 cv
624.297 414.93 620.031 417.675 616.229 417.675 cv
cp
.278386 .193088 .0924697 0 cmyk
f
609.375 409.059 mo
616.283 407.569 li
611.363 415.077 li
611.817 415.593 612.339 416.043 612.945 416.394 cv
613.881 416.934 614.918 417.197 615.999 417.234 cv
619.401 408.645 li
623.624 413.9 li
624.717 412.863 625.716 411.611 626.548 410.17 cv
626.566 410.139 626.581 410.106 626.598 410.075 cv
621.444 405.49 li
628.102 398.969 li
627.527 397.399 626.549 396.109 625.169 395.301 cv
620.513 401.053 li
620.513 394.544 li
619.305 394.746 618.076 395.214 616.89 395.922 cv
616.641 403.984 li
610.463 403.703 li
609.738 405.519 609.383 407.351 609.375 409.059 cv
cp
f
609.679 406.314 mo
618.036 406.27 li
612.914 416.372 li
612.924 416.378 612.934 416.387 612.945 416.394 cv
613.185 416.532 613.433 416.649 613.685 416.753 cv
618.866 406.537 li
625.113 412.273 li
625.29 412.051 625.459 411.815 625.628 411.58 cv
619.342 405.806 li
627.113 397.071 li
626.941 396.835 626.755 396.612 626.555 396.402 cv
619.168 404.705 li
619.168 394.873 li
618.881 394.967 618.594 395.076 618.308 395.198 cv
618.308 405.408 li
609.888 405.453 li
609.809 405.741 609.739 406.028 609.679 406.314 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
618.433 408.372 mo
618.167 408.372 617.912 408.31 617.682 408.177 cv
617.225 407.913 616.94 407.419 616.88 406.784 cv
616.821 406.162 616.987 405.478 617.346 404.855 cv
617.704 404.234 618.215 403.749 618.784 403.488 cv
619.363 403.224 619.933 403.223 620.39 403.486 cv
621.322 404.025 621.474 405.515 620.727 406.808 cv
620.164 407.783 619.249 408.372 618.433 408.372 cv
cp
.278386 .193088 .0924697 0 cmyk
f
618.746 407.051 mo
618.618 407.051 618.496 407.021 618.385 406.957 cv
618.166 406.831 618.029 406.593 618 406.289 cv
617.972 405.99 618.051 405.661 618.224 405.362 cv
618.396 405.063 618.641 404.831 618.914 404.706 cv
619.192 404.578 619.466 404.578 619.686 404.705 cv
620.133 404.964 620.206 405.679 619.848 406.3 cv
619.577 406.769 619.138 407.051 618.746 407.051 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
483.864 444.055 mo
483.864 444.055 482.336 446.205 481.81 447.388 cv
481.81 447.388 489.133 449.95 498.274 449.754 cv
507.415 449.559 514.188 444.055 514.188 444.055 cv
521.969 434.806 li
521.969 434.806 510.641 442.227 505.479 443.947 cv
500.317 445.668 490.208 445.668 483.864 444.055 cv
cp
0 0 0 0 cmyk
f
470.966 379.858 mo
473.828 381.485 li
509.259 361.528 li
506.001 359.635 li
470.966 379.858 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
481.81 376.989 mo
481.81 376.989 488.133 382.35 493.241 381.485 cv
498.35 380.621 510.3 371.313 510.3 371.313 cv
510.04 375.993 li
510.04 375.993 503.613 380.938 498.588 384.032 cv
494.584 384.975 491.936 385.733 490.924 386.086 cv
489.37 386.105 482.056 381.587 478.992 378.576 cv
479.852 378.092 481.81 376.989 481.81 376.989 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
582.591 402.79 mo
582.591 402.79 582.59 404.184 581.494 404.967 cv
580.486 405.688 577.259 407.784 576.399 408.071 cv
576.033 408.193 573.816 407.831 573.816 407.831 cv
573.816 409.565 li
573.816 409.565 575.792 410.215 576.938 409.801 cv
578.085 409.387 582.313 406.861 582.78 406.207 cv
583.061 405.813 582.956 404.305 582.591 402.79 cv
cp
f
576.399 408.071 mo
577.259 407.784 580.485 405.688 581.494 404.967 cv
582.161 404.49 582.42 403.791 582.522 403.314 cv
582.591 402.79 li
573.816 407.831 li
573.816 407.831 576.033 408.193 576.399 408.071 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
602.495 382.303 mo
599.582 381.485 li
597.431 374.356 li
599.62 372.547 li
602.495 382.303 li
cp
.858457 .739651 .439277 .415595 cmyk
f
522.162 401.891 mo
522.162 401.891 529.281 397.471 536.614 403.77 cv
535.591 405.43 535.123 406.189 535.123 406.189 cv
535.123 406.189 530.271 402.058 525.028 403.482 cv
523.845 402.82 522.162 401.891 522.162 401.891 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
613.422 339.209 mo
567.213 350.38 530.034 343.962 510.246 338.375 cv
503.848 341.682 498.126 345.502 492.507 350.183 cv
492.659 350.931 492.935 351.688 493.435 352.214 cv
493.435 352.214 524.191 370.711 549.141 383.616 cv
549.141 383.616 556.454 374.798 568.068 369.421 cv
579.683 364.044 622.197 345.618 622.197 345.618 cv
619.933 343.685 616.887 341.49 613.422 339.209 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
598.472 368.65 mo
598.472 368.65 li
597.107 364.02 li
586.48 368.044 569.696 376.118 560.541 383.401 cv
551.473 390.614 538.069 413.597 536.963 415.508 cv
578.418 391.711 598.472 368.65 598.472 368.65 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
539.208 411.733 mo
539.208 411.733 542.715 410.018 546.694 410.905 cv
550.673 411.792 553.801 414.517 554.446 416.237 cv
555.02 417.958 553.013 419.008 552.295 419.379 cv
551.579 419.75 539.462 419.104 539.462 419.104 cv
539.462 419.104 536.267 416.475 539.208 411.733 cv
cp
.278386 .193088 .0924697 0 cmyk
f
554.535 416.676 mo
549.47 416.251 538.123 415.086 537.995 415.072 cv
537.757 417.689 539.462 419.104 539.462 419.104 cv
539.462 419.104 551.579 419.75 552.296 419.379 cv
552.949 419.04 554.668 418.136 554.535 416.676 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
511.097 446.068 mo
513.048 444.972 514.188 444.055 514.188 444.055 cv
521.969 434.806 li
521.969 434.806 514.805 439.498 509.275 442.284 cv
509.274 442.285 li
510.513 444.092 511.09 446.046 511.097 446.068 cv
cp
.0208438 .691371 .53521 .00747692 cmyk
f
340.867 369.243 mo
329.683 378.563 320.076 384.585 310.182 390.607 cv
300.288 396.63 275.195 411.112 271.324 412.26 cv
267.452 413.406 266.735 411.256 269.89 405.807 cv
273.044 400.358 279.497 383.725 314.627 361.787 cv
329.537 352.476 349.614 344.437 351.765 344.58 cv
353.916 344.724 352.051 359.923 340.867 369.243 cv
cp
251.106 413.406 mo
242.933 414.84 226.013 412.546 205.939 401.505 cv
185.864 390.464 186.151 376.125 186.151 376.125 cv
186.151 376.125 212.248 348.738 222.858 338.558 cv
231.605 356.625 272.758 371.967 284.516 373.831 cv
269.173 390.607 256.412 411.112 251.106 413.406 cv
cp
380.586 343.684 mo
371.875 335.726 355.313 322.283 347.248 316.046 cv
339.182 309.809 323.481 302.173 315.416 300.13 cv
307.35 298.086 300.897 298.624 293.478 301.205 cv
286.057 303.786 257.559 313.787 222.93 336.264 cv
216.263 340.35 188.947 369.213 183.248 375.591 cv
178.623 380.678 165.181 393.153 158.728 403.047 cv
155.179 408.531 153.028 419.07 151.523 430.362 cv
151.308 434.126 151.953 435.524 153.674 437.567 cv
155.395 439.61 166.256 450.58 178.946 458.323 cv
191.636 466.065 211.101 472.626 222.177 473.916 cv
228.307 474.669 235.083 473.916 240.567 469.507 cv
240.352 464.453 239.492 454.451 247.987 444.987 cv
256.483 435.524 265.295 434.689 268.731 440.041 cv
270.977 443.538 270.463 452.301 270.463 452.301 cv
346.603 408.102 li
346.603 408.102 345.635 385.087 361.551 377.021 cv
377.467 368.956 377.575 386.593 377.682 389.174 cv
380.478 387.131 383.705 384.657 384.35 378.85 cv
384.995 373.043 389.296 351.642 380.586 343.684 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
340.867 369.243 mo
329.683 378.563 320.076 384.585 310.182 390.607 cv
300.288 396.63 275.195 411.112 271.324 412.26 cv
267.452 413.406 266.735 411.256 269.89 405.807 cv
273.044 400.358 279.497 383.725 314.627 361.787 cv
329.537 352.476 349.614 344.437 351.765 344.58 cv
353.916 344.724 352.051 359.923 340.867 369.243 cv
cp
380.586 343.684 mo
378.07 341.386 374.897 338.629 371.466 335.722 cv
372.063 336.234 374.563 341.285 374.277 343.146 cv
363.236 344.149 356.783 336.55 356.783 336.55 cv
329.109 344.293 284.516 373.831 284.516 373.831 cv
271.008 388.602 259.504 406.254 253.324 411.833 cv
253.324 411.833 253.324 411.833 253.323 411.834 cv
249.088 416.427 237.054 431.617 233.183 435.201 cv
229.311 438.786 224.436 442.084 210.24 440.363 cv
196.045 438.643 178.838 430.613 169.518 419.716 cv
161.759 410.643 162.646 400.285 163.16 397.068 cv
161.497 399.109 159.98 401.127 158.728 403.047 cv
155.179 408.531 153.028 419.07 151.523 430.362 cv
151.308 434.126 151.953 435.524 153.674 437.567 cv
155.395 439.61 166.256 450.58 178.946 458.323 cv
191.636 466.065 211.101 472.626 222.177 473.916 cv
228.307 474.669 235.083 473.916 240.567 469.507 cv
240.352 464.453 239.492 454.451 247.987 444.987 cv
256.483 435.524 265.295 434.689 268.731 440.041 cv
270.977 443.538 270.463 452.301 270.463 452.301 cv
346.603 408.102 li
346.603 408.102 345.635 385.087 361.551 377.021 cv
377.467 368.956 377.575 386.593 377.682 389.174 cv
380.478 387.131 383.705 384.657 384.35 378.85 cv
384.995 373.043 389.296 351.642 380.586 343.684 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
352.954 404.233 mo
377.682 389.174 li
377.575 386.593 377.467 368.956 361.551 377.021 cv
345.635 385.087 346.603 408.101 346.603 408.101 cv
354.346 412.786 359.613 411.353 359.613 411.353 cv
354.346 407.348 li
352.954 404.233 li
cp
.821683 .7084 .379187 .253361 cmyk
f
268.731 440.041 mo
265.295 434.689 256.483 435.524 247.987 444.987 cv
243.628 449.844 241.735 454.839 240.951 459.237 cv
240.949 459.25 240.947 459.262 240.945 459.274 cv
240.841 459.86 240.756 460.436 240.689 460.998 cv
240.688 461.002 240.688 461.007 240.688 461.011 cv
240.483 462.72 240.43 464.313 240.44 465.743 cv
240.44 465.751 240.44 465.759 240.44 465.768 cv
240.444 466.23 240.453 466.677 240.467 467.104 cv
240.467 467.124 240.468 467.144 240.469 467.163 cv
240.482 467.583 240.499 467.984 240.516 468.365 cv
240.517 468.396 240.518 468.423 240.52 468.453 cv
240.521 468.499 240.523 468.545 240.526 468.591 cv
240.54 468.908 240.555 469.221 240.567 469.507 cv
239.775 470.144 238.955 470.695 238.115 471.186 cv
245.709 475.386 252.894 473.886 252.894 473.886 cv
245.103 466.896 li
270.463 452.301 li
270.463 452.301 270.977 443.538 268.731 440.041 cv
cp
f
266.111 463.819 mo
261.341 472.08 252.86 476.113 247.167 472.826 cv
241.475 469.54 240.727 460.179 245.497 451.917 cv
250.266 443.656 258.747 439.624 264.44 442.91 cv
270.132 446.197 270.88 455.558 266.111 463.819 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
263.641 462.394 mo
260.274 468.224 254.184 471.01 250.038 468.616 cv
245.892 466.223 245.259 459.555 248.626 453.725 cv
251.992 447.894 258.083 445.107 262.229 447.501 cv
266.375 449.896 267.007 456.563 263.641 462.394 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
258.92 447.071 mo
257.771 447.071 256.55 447.354 255.314 447.92 cv
252.824 449.059 250.582 451.196 248.998 453.939 cv
247.415 456.683 246.685 459.694 246.943 462.418 cv
247.196 465.089 248.372 467.157 250.253 468.243 cv
254.186 470.515 260.026 467.794 263.269 462.178 cv
266.511 456.563 265.948 450.146 262.013 447.874 cv
261.086 447.339 260.037 447.071 258.92 447.071 cv
cp
253.323 469.897 mo
252.083 469.897 250.892 469.605 249.823 468.988 cv
247.693 467.759 246.367 465.455 246.086 462.5 cv
245.812 459.599 246.581 456.406 248.254 453.509 cv
249.926 450.612 252.306 448.35 254.956 447.138 cv
257.655 445.902 260.314 445.899 262.443 447.129 cv
266.789 449.638 267.493 456.582 264.013 462.608 cv
261.39 467.152 257.125 469.897 253.323 469.897 cv
cp
.278386 .193088 .0924697 0 cmyk
f
246.468 461.281 mo
253.375 459.792 li
248.456 467.3 li
248.911 467.816 249.432 468.267 250.038 468.616 cv
250.974 469.156 252.011 469.42 253.092 469.457 cv
256.494 460.868 li
260.716 466.123 li
261.81 465.087 262.809 463.834 263.641 462.394 cv
263.659 462.361 263.673 462.329 263.691 462.298 cv
258.538 457.713 li
265.195 451.191 li
264.62 449.622 263.642 448.332 262.262 447.523 cv
257.605 453.275 li
257.605 446.767 li
256.397 446.969 255.169 447.437 253.983 448.145 cv
253.734 456.208 li
247.556 455.927 li
246.831 457.741 246.476 459.573 246.468 461.281 cv
cp
f
246.772 458.537 mo
255.129 458.493 li
250.006 468.595 li
250.018 468.602 250.027 468.609 250.038 468.616 cv
250.278 468.755 250.526 468.872 250.778 468.976 cv
255.958 458.76 li
262.206 464.496 li
262.383 464.273 262.552 464.038 262.721 463.803 cv
256.435 458.028 li
264.206 449.294 li
264.034 449.058 263.848 448.835 263.648 448.625 cv
256.262 456.928 li
256.262 447.096 li
255.974 447.189 255.688 447.299 255.401 447.421 cv
255.401 457.631 li
246.98 457.676 li
246.902 457.964 246.832 458.251 246.772 458.537 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
255.526 460.595 mo
255.26 460.595 255.004 460.532 254.775 460.399 cv
254.318 460.136 254.034 459.642 253.974 459.008 cv
253.915 458.385 254.08 457.7 254.438 457.078 cv
254.797 456.457 255.308 455.972 255.876 455.711 cv
256.456 455.446 257.026 455.445 257.483 455.709 cv
258.416 456.248 258.566 457.737 257.82 459.03 cv
257.257 460.006 256.342 460.595 255.526 460.595 cv
cp
.278386 .193088 .0924697 0 cmyk
f
255.839 459.273 mo
255.711 459.273 255.588 459.244 255.479 459.18 cv
255.259 459.054 255.122 458.816 255.093 458.512 cv
255.065 458.213 255.145 457.884 255.317 457.585 cv
255.489 457.287 255.734 457.054 256.007 456.929 cv
256.286 456.802 256.56 456.801 256.779 456.928 cv
257.227 457.187 257.299 457.901 256.94 458.522 cv
256.67 458.991 256.231 459.273 255.839 459.273 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
372.993 401.269 mo
368.223 409.53 359.742 413.563 354.049 410.276 cv
348.357 406.989 347.609 397.628 352.378 389.367 cv
357.148 381.106 365.629 377.073 371.322 380.36 cv
377.014 383.646 377.762 393.008 372.993 401.269 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
370.523 399.843 mo
367.156 405.674 361.066 408.46 356.92 406.065 cv
352.773 403.672 352.142 397.005 355.508 391.174 cv
358.874 385.343 364.964 382.557 369.11 384.951 cv
373.257 387.345 373.889 394.012 370.523 399.843 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
365.803 384.521 mo
364.653 384.521 363.433 384.804 362.196 385.369 cv
359.707 386.508 357.464 388.646 355.88 391.389 cv
354.296 394.133 353.566 397.144 353.825 399.868 cv
354.078 402.538 355.253 404.606 357.135 405.693 cv
361.067 407.965 366.908 405.243 370.15 399.628 cv
373.393 394.012 372.83 387.595 368.895 385.323 cv
367.968 384.788 366.919 384.521 365.803 384.521 cv
cp
360.205 407.348 mo
358.964 407.348 357.774 407.055 356.705 406.438 cv
354.575 405.209 353.249 402.904 352.968 399.949 cv
352.693 397.048 353.463 393.855 355.136 390.959 cv
356.808 388.063 359.188 385.799 361.838 384.587 cv
364.537 383.353 367.196 383.349 369.325 384.578 cv
373.671 387.087 374.375 394.031 370.895 400.058 cv
368.272 404.602 364.006 407.348 360.205 407.348 cv
cp
.278386 .193088 .0924697 0 cmyk
f
353.35 398.73 mo
360.257 397.242 li
355.338 404.749 li
355.792 405.266 356.314 405.716 356.92 406.065 cv
357.856 406.606 358.894 406.869 359.974 406.906 cv
363.376 398.317 li
367.598 403.573 li
368.692 402.536 369.691 401.283 370.523 399.843 cv
370.541 399.812 370.555 399.779 370.573 399.747 cv
365.419 395.163 li
372.077 388.641 li
371.501 387.071 370.523 385.782 369.144 384.974 cv
364.487 390.725 li
364.487 384.217 li
363.279 384.418 362.051 384.886 360.865 385.595 cv
360.616 393.657 li
354.438 393.376 li
353.713 395.191 353.358 397.022 353.35 398.73 cv
cp
f
353.654 395.987 mo
362.011 395.942 li
356.888 406.044 li
356.899 406.051 356.909 406.06 356.92 406.065 cv
357.16 406.204 357.408 406.321 357.66 406.426 cv
362.84 396.209 li
369.087 401.946 li
369.265 401.724 369.434 401.487 369.603 401.252 cv
363.316 395.478 li
371.088 386.743 li
370.916 386.508 370.729 386.284 370.53 386.075 cv
363.144 394.377 li
363.144 384.546 li
362.856 384.639 362.569 384.749 362.283 384.871 cv
362.283 395.081 li
353.862 395.126 li
353.784 395.414 353.714 395.701 353.654 395.987 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
362.408 398.044 mo
362.142 398.044 361.887 397.981 361.657 397.85 cv
361.2 397.586 360.916 397.091 360.855 396.457 cv
360.796 395.835 360.961 395.149 361.32 394.528 cv
361.679 393.906 362.19 393.421 362.758 393.161 cv
363.338 392.896 363.908 392.896 364.365 393.159 cv
365.297 393.697 365.448 395.188 364.702 396.48 cv
364.139 397.455 363.224 398.044 362.408 398.044 cv
cp
.278386 .193088 .0924697 0 cmyk
f
362.721 396.724 mo
362.593 396.724 362.47 396.693 362.36 396.63 cv
362.141 396.503 362.004 396.266 361.975 395.961 cv
361.947 395.662 362.026 395.333 362.199 395.035 cv
362.371 394.736 362.616 394.503 362.889 394.378 cv
363.167 394.251 363.441 394.251 363.661 394.377 cv
364.108 394.636 364.181 395.352 363.822 395.973 cv
363.552 396.44 363.113 396.724 362.721 396.724 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
360.798 333.109 mo
359.508 335.69 356.783 336.55 356.783 336.55 cv
356.783 336.55 363.236 344.149 374.277 343.146 cv
374.563 341.283 372.058 336.226 371.464 335.72 cv
366.504 331.517 361.002 327 356.141 323.087 cv
356.479 323.362 362.088 330.529 360.798 333.109 cv
cp
f
151.523 430.362 mo
151.308 434.126 151.953 435.524 153.674 437.567 cv
155.395 439.61 166.256 450.58 178.946 458.323 cv
191.636 466.065 211.101 472.626 222.177 473.916 cv
228.307 474.669 235.083 473.916 240.567 469.507 cv
240.352 464.453 239.492 454.451 247.987 444.987 cv
256.483 435.524 265.295 434.689 268.731 440.041 cv
270.977 443.538 270.463 452.301 270.463 452.301 cv
346.603 408.102 li
346.603 408.102 345.635 385.087 361.551 377.021 cv
377.467 368.956 377.575 386.593 377.682 389.174 cv
380.478 387.131 383.705 384.657 384.35 378.85 cv
384.822 374.602 387.245 362.012 385.104 352.441 cv
377.588 346.612 368.302 350.081 362.662 357.198 cv
356.64 364.798 343.018 375.982 320.506 391.324 cv
297.994 406.667 244.797 433.338 240.495 439.217 cv
236.194 445.096 233.899 450.4 216.406 451.117 cv
198.913 451.835 178.122 440.65 165.934 429.466 cv
153.746 418.281 158.728 403.047 158.728 403.047 cv
155.179 408.531 153.028 419.07 151.523 430.362 cv
cp
.278386 .193088 .0924697 0 cmyk
f
210.24 440.363 mo
224.436 442.084 229.311 438.786 233.183 435.201 cv
236.549 432.084 246.087 420.192 251.303 414.124 cv
251.106 413.406 li
251.106 413.406 226.3 424.018 215.402 430.039 cv
207.977 434.144 205.679 437.646 204.968 439.463 cv
206.756 439.85 208.521 440.155 210.24 440.363 cv
cp
0 0 0 0 cmyk
f
166.171 414.836 mo
164.975 401.712 179.714 380.488 182.719 376.315 cv
183.058 375.845 183.248 375.591 183.248 375.591 cv
179.519 379.693 170.066 388.598 163.158 397.08 cv
162.734 399.738 162.071 407.218 166.171 414.836 cv
cp
f
172.816 451.494 mo
172.816 451.494 188.517 462.355 205.455 466.926 cv
222.393 471.497 226.372 470.905 227.339 467.195 cv
228.307 463.484 225.834 460.151 221.532 459.721 cv
217.23 459.291 215.026 465.313 209.649 464.722 cv
204.272 464.13 184.054 457.247 174.483 450.149 cv
164.912 443.052 161.202 439.181 159.104 433.643 cv
157.007 428.104 157.115 421.866 155.448 420.791 cv
153.781 419.716 153.458 425.093 153.512 427.781 cv
153.566 430.47 155.018 434.933 157.438 438.105 cv
159.857 441.277 169.435 449.313 172.816 451.494 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
224.934 463.578 mo
225.993 465.73 225.709 468.038 224.3 468.732 cv
222.89 469.427 220.888 468.244 219.828 466.093 cv
218.768 463.94 219.052 461.633 220.461 460.938 cv
221.872 460.244 223.874 461.426 224.934 463.578 cv
cp
.278386 .193088 .0924697 0 cmyk
f
156.394 426.188 mo
156.533 428.032 156.147 429.565 155.532 429.611 cv
154.917 429.657 154.307 428.2 154.168 426.356 cv
154.029 424.512 154.415 422.979 155.03 422.933 cv
155.645 422.887 156.255 424.345 156.394 426.188 cv
cp
f
240.413 427.12 mo
240.413 427.12 li
244.178 422.658 248.407 417.494 251.303 414.124 cv
251.106 413.406 li
251.106 413.406 226.3 424.018 215.402 430.039 cv
215.402 430.039 231.979 432.48 240.413 427.12 cv
cp
f
168.751 401.253 mo
168.753 401.252 li
172.891 390.332 180.632 379.214 182.719 376.315 cv
183.058 375.845 183.248 375.591 183.248 375.591 cv
180.229 378.911 173.462 385.378 167.329 392.22 cv
167.774 397.134 168.751 401.253 168.751 401.253 cv
cp
f
220.812 430.516 mo
220.564 430.594 li
220.564 430.594 220.887 434.771 224.113 434.664 cv
226.15 434.596 226.514 432.258 226.507 430.542 cv
224.446 430.628 222.493 430.596 220.812 430.516 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
228.282 430.438 mo
228.55 431.818 229.25 434.283 230.888 434.666 cv
233.125 435.188 234.775 431.525 233.86 429.647 cv
232.036 430.052 230.139 430.298 228.282 430.438 cv
cp
f
224.113 437.46 mo
219.28 435.097 206.948 436.419 206.918 436.422 cv
205.834 437.671 205.261 438.713 204.968 439.463 cv
206.756 439.85 208.521 440.155 210.24 440.363 cv
218.643 441.382 223.779 440.642 227.375 439.125 cv
226.39 438.602 225.294 438.037 224.113 437.46 cv
cp
.278386 .193088 .0924697 0 cmyk
f
346.603 408.102 mo
346.603 408.102 345.635 385.087 361.551 377.021 cv
377.467 368.956 377.575 386.593 377.682 389.174 cv
380.478 387.131 383.705 384.657 384.35 378.85 cv
384.536 377.17 385.028 374.182 385.423 370.595 cv
383.114 377.631 379.038 382.282 378.542 382.184 cv
378.005 382.076 377.359 366.268 360.368 374.226 cv
343.376 382.184 342.516 403.369 342.516 403.369 cv
342.516 403.369 276.163 441.116 272.614 443.375 cv
272.722 440.256 268.851 428.964 257.343 434.233 cv
235.341 444.338 236.721 466.376 237.385 471.601 cv
238.482 471.02 239.547 470.327 240.567 469.507 cv
240.352 464.453 239.492 454.451 247.987 444.987 cv
256.483 435.524 265.295 434.689 268.731 440.041 cv
270.977 443.538 270.463 452.301 270.463 452.301 cv
346.603 408.102 li
cp
.390814 .279911 .131106 .00198367 cmyk
f
374.277 343.146 mo
374.277 343.146 375.547 346.473 375.701 349.541 cv
375.701 349.542 375.701 349.542 375.701 349.543 cv
378.889 349.292 382.135 350.139 385.104 352.441 cv
385.254 353.113 385.38 353.801 385.487 354.498 cv
385.489 354.499 385.491 354.499 385.492 354.5 cv
384.823 350.153 383.373 346.229 380.586 343.684 cv
380.365 343.482 380.134 343.273 379.903 343.065 cv
377.22 342.953 375.004 342.941 374.277 343.146 cv
cp
.0208438 .691371 .53521 .00747692 cmyk
f
231.2 384.729 mo
228.644 383.725 210.24 373.688 205.509 370.595 cv
201.818 368.182 199.705 364.361 198.95 362.791 cv
191.822 370.175 186.151 376.125 186.151 376.125 cv
186.151 376.125 185.864 390.464 205.939 401.505 cv
226.013 412.546 242.933 414.84 251.106 413.406 cv
253.344 412.438 256.912 408.225 261.438 402.423 cv
251.212 384.928 233.674 385.7 231.2 384.729 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
200.734 365.83 mo
200.734 365.83 li
224.809 341.828 li
224.049 340.749 223.392 339.659 222.858 338.558 cv
217.192 343.995 207.116 354.331 198.95 362.791 cv
199.279 363.477 199.869 364.591 200.734 365.83 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
198.112 363.658 mo
198.037 363.737 197.958 363.818 197.883 363.896 cv
197.883 363.896 li
197.959 363.817 198.036 363.737 198.112 363.658 cv
cp
f
241.857 370.139 mo
245.91 358.777 li
241.514 356.315 237.341 353.631 233.71 350.783 cv
202.188 367.679 li
203.107 368.719 204.208 369.744 205.509 370.595 cv
207.449 371.863 211.69 374.3 216.193 376.803 cv
223.652 369.593 241.857 370.139 241.857 370.139 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
267.56 380.463 mo
268.425 369.085 li
261.394 366.475 253.351 362.945 245.91 358.777 cv
245.91 358.777 li
241.857 370.139 li
264.441 382.184 li
267.56 380.463 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
231.2 384.729 mo
232.81 385.36 240.797 385.259 248.998 389.928 cv
249 389.927 249 389.927 249.002 389.927 cv
251.845 385.732 264.441 382.184 264.441 382.184 cv
241.857 370.139 li
241.857 370.139 223.652 369.593 216.193 376.803 cv
222.67 380.401 229.692 384.137 231.2 384.729 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
268.425 369.085 mo
267.56 380.463 li
281.457 373.198 li
278.06 372.381 273.515 370.976 268.425 369.085 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
261.437 402.422 mo
267.64 394.47 275.642 383.534 284.516 373.831 cv
283.652 373.694 282.613 373.477 281.457 373.198 cv
267.56 380.463 li
264.441 382.184 li
255.141 394.453 li
255.142 394.455 li
257.396 396.569 259.542 399.181 261.437 402.422 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
259.711 404.614 mo
259.711 404.615 li
259.717 404.607 259.723 404.601 259.729 404.593 cv
259.723 404.601 259.717 404.607 259.711 404.614 cv
cp
f
260.848 403.176 mo
260.926 403.076 261.005 402.976 261.083 402.875 cv
261.005 402.976 260.926 403.076 260.848 403.176 cv
cp
f
255.142 394.455 mo
255.141 394.453 li
264.441 382.184 li
264.441 382.184 251.845 385.732 249.002 389.927 cv
249 389.927 249 389.927 248.998 389.928 cv
248.998 389.928 li
251.598 391.407 254.216 393.373 256.662 395.988 cv
256.666 395.985 li
256.165 395.45 255.657 394.938 255.142 394.455 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
270.719 390.388 mo
261.791 385.68 li
255.141 394.453 li
255.142 394.455 li
257.396 396.569 259.542 399.181 261.437 402.422 cv
264.2 398.879 267.323 394.743 270.718 390.389 cv
270.719 390.388 li
cp
.657984 .551446 .269413 .0538033 cmyk
f
271.324 412.26 mo
273.774 411.533 284.723 405.467 294.94 399.583 cv
278.784 391.795 li
273.491 398.441 271.338 403.306 269.89 405.807 cv
266.735 411.256 267.452 413.406 271.324 412.26 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
294.94 399.583 mo
293.871 400.199 292.792 400.817 291.717 401.431 cv
291.718 401.431 li
297.982 397.855 304.325 394.139 308.668 391.523 cv
308.879 387.17 309.325 379.265 309.931 375.635 cv
310.792 370.483 314.627 367.558 314.627 367.558 cv
314.627 361.787 li
295.625 373.653 285.022 383.963 278.785 391.795 cv
278.784 391.795 li
294.94 399.583 li
cp
.821683 .7084 .379187 .253361 cmyk
f
314.627 387.882 mo
316.498 386.724 318.37 385.546 320.253 384.329 cv
317.838 359.848 li
316.749 360.486 315.674 361.133 314.627 361.787 cv
314.627 367.558 li
314.627 387.882 li
cp
.858457 .739651 .439277 .415595 cmyk
f
333.922 374.772 mo
318.619 367.765 li
320.253 384.329 li
324.685 381.466 329.187 378.377 333.922 374.772 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
318.263 385.6 mo
318.264 385.604 li
318.923 385.185 319.583 384.762 320.245 384.334 cv
319.583 384.763 318.923 385.18 318.263 385.6 cv
cp
f
351.765 344.58 mo
349.765 344.446 332.27 351.39 317.838 359.849 cv
318.618 367.754 li
318.663 367.784 li
333.922 374.772 li
336.179 373.055 338.485 371.228 340.867 369.243 cv
352.051 359.923 353.916 344.724 351.765 344.58 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
346.959 362.449 mo
347.581 361.525 348.141 360.594 348.648 359.664 cv
344.291 346.99 li
343.747 347.205 343.183 347.433 342.597 347.673 cv
346.959 362.449 li
cp
.821683 .7084 .379187 .253361 cmyk
f
249.959 388.099 mo
257.558 390.679 261.436 402.42 261.437 402.422 cv
261.437 402.422 li
261.438 402.423 li
262.24 401.394 263.075 400.312 263.936 399.192 cv
262.089 394.411 257.038 385.409 250.568 383.831 cv
243.375 382.076 243.112 387.262 243.111 387.278 cv
244.006 387.586 244.921 387.939 245.852 388.348 cv
246.448 387.631 247.466 387.177 249.959 388.099 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
188.311 373.864 mo
186.945 375.292 186.151 376.125 186.151 376.125 cv
186.151 376.125 185.864 390.464 205.939 401.505 cv
226.013 412.546 242.933 414.84 251.106 413.406 cv
252.073 412.988 253.29 411.962 254.724 410.465 cv
240.418 410.678 219.847 406.094 204.218 395.196 cv
188.589 384.299 188.311 373.865 188.311 373.864 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
276.139 395.318 mo
272.714 400.171 271.068 403.771 269.89 405.807 cv
266.735 411.256 267.452 413.406 271.324 412.26 cv
272.367 411.95 274.954 410.671 278.366 408.853 cv
276.139 395.318 li
cp
.707393 .60531 .27628 .0864881 cmyk
f
274.695 410.757 mo
274.695 410.757 274.321 403.064 280.135 403.539 cv
285.949 404.015 290.358 409.714 290.681 411.22 cv
291.004 412.726 289.068 414.123 286.81 414.23 cv
284.551 414.339 277.206 413.198 274.695 410.757 cv
cp
.278386 .193088 .0924697 0 cmyk
f
274.989 407.856 mo
274.634 409.396 274.695 410.757 274.695 410.757 cv
277.206 413.198 284.551 414.339 286.81 414.23 cv
289.068 414.123 291.004 412.726 290.681 411.22 cv
284.828 412.183 278.413 409.573 274.989 407.856 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
192.648 365.502 mo
194.403 363.656 196.286 361.69 198.235 359.676 cv
198.235 359.676 li
198.235 359.676 196.26 355.216 190.561 355.473 cv
186.104 355.673 189.464 362.806 192.648 365.502 cv
cp
.278386 .193088 .0924697 0 cmyk
f
189.574 355.698 mo
186.719 356.92 189.747 363.045 192.648 365.502 cv
193.41 364.701 194.206 363.868 195.011 363.027 cv
192.673 360.835 190.732 357.764 189.574 355.698 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
307.727 402.177 mo
310.08 400.917 312.659 399.503 315.416 397.885 cv
316.896 397.016 316.975 399.175 315.9 400.143 cv
314.824 401.111 309.447 404.229 308.157 404.552 cv
306.866 404.875 306.76 402.694 307.727 402.177 cv
cp
f
342.309 378.358 mo
344.662 377.099 347.242 375.685 349.998 374.066 cv
351.478 373.197 351.557 375.356 350.482 376.324 cv
349.406 377.292 344.029 380.411 342.739 380.733 cv
341.448 381.057 341.342 378.876 342.309 378.358 cv
cp
f
233.71 350.783 mo
202.188 367.679 li
203.107 368.719 204.208 369.744 205.509 370.595 cv
205.871 370.831 206.313 371.108 206.823 371.42 cv
238.829 354.463 li
237.037 353.271 235.318 352.044 233.71 350.783 cv
cp
f
314.627 387.878 mo
314.627 367.558 li
314.627 367.558 310.792 370.483 309.931 375.635 cv
309.325 379.265 308.879 387.17 308.668 391.523 cv
309.201 391.202 309.714 390.893 310.182 390.607 cv
311.668 389.703 313.148 388.795 314.627 387.878 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
235.674 359.217 mo
235.674 359.217 231.426 361.313 230.942 362.55 cv
230.458 363.787 231.802 365.196 233.685 364.169 cv
235.566 363.142 236.211 362.791 236.211 362.791 cv
236.211 362.791 236.449 361.888 235.674 359.217 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
166.11 413.269 mo
166 410.799 165.4 406.168 165.181 404.384 cv
164.706 400.517 164.712 395.24 164.713 395.216 cv
164.185 395.838 163.663 396.46 163.158 397.08 cv
162.734 399.738 162.071 407.218 166.171 414.836 cv
166.125 414.326 166.11 413.801 166.11 413.269 cv
cp
.278386 .193088 .0924697 0 cmyk
f
167.827 396.3 mo
167.827 396.3 166.227 401.095 167.935 403.546 cv
168.418 402.148 168.751 401.253 168.751 401.253 cv
168.751 401.253 167.904 396.818 167.827 396.3 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
426.623 165.615 mo
426.623 165.615 424.338 159.582 418.029 159.582 cv
415.591 161.589 417.025 165.615 417.025 165.615 cv
417.025 165.615 418.03 168.835 421.614 171.234 cv
423.478 169.332 426.623 165.615 426.623 165.615 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
417.025 165.615 mo
417.025 165.615 418.03 168.835 421.614 171.234 cv
422.233 170.602 422.994 169.77 423.734 168.939 cv
422.518 167.992 421.203 166.793 420.18 165.408 cv
417.599 161.914 418.029 159.582 418.029 159.582 cv
415.591 161.589 417.025 165.615 417.025 165.615 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
592.182 223.751 mo
592.182 223.751 583.671 223.721 579.128 221.266 cv
579.613 209.148 588.098 187.851 588.098 187.851 cv
607.149 175.657 li
615.736 177.251 li
617.027 194.078 li
613.891 200.798 li
592.182 223.751 li
cp
.858457 .739651 .439277 .415595 cmyk
f
464.463 297.08 mo
464.463 297.08 455.715 296.919 450.265 293.108 cv
449.362 286.792 462.68 258.173 462.68 258.173 cv
481.708 250.235 li
492.752 252.171 li
486.328 274.527 li
464.463 297.08 li
cp
f
609.936 209.507 mo
604.639 220.101 595.164 226.099 588.773 222.904 cv
582.383 219.708 581.497 208.53 586.794 197.936 cv
592.091 187.341 601.566 181.343 607.957 184.538 cv
614.347 187.733 615.233 198.912 609.936 209.507 cv
cp
f
607.567 208.322 mo
603.461 216.533 596.118 221.183 591.165 218.706 cv
586.211 216.229 585.524 207.565 589.63 199.354 cv
593.736 191.142 601.08 186.493 606.033 188.97 cv
610.986 191.446 611.673 200.11 607.567 208.322 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
596.364 208.428 mo
597.056 217.063 li
597.065 217.178 597.179 217.253 597.289 217.216 cv
597.849 217.028 599.408 216.38 600.833 214.66 cv
600.881 214.602 600.893 214.521 600.854 214.455 cv
599.896 212.822 597.583 209.565 596.682 208.308 cv
596.578 208.162 596.35 208.249 596.364 208.428 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
598.426 206.156 mo
602.34 212.937 li
602.396 213.033 602.527 213.056 602.609 212.981 cv
603.055 212.578 604.325 211.267 605.306 208.665 cv
605.34 208.574 605.302 208.47 605.212 208.435 cv
603.621 207.797 599.934 206.393 598.638 205.901 cv
598.482 205.842 598.343 206.012 598.426 206.156 cv
cp
f
599.692 203.351 mo
606.182 206.231 li
606.272 206.271 606.376 206.235 606.415 206.145 cv
606.633 205.628 607.292 203.91 607.382 201.762 cv
607.386 201.646 607.282 201.553 607.169 201.576 cv
605.739 201.86 601.292 202.715 599.728 203.016 cv
599.558 203.049 599.534 203.281 599.692 203.351 cv
cp
f
600.193 201.029 mo
607.742 199.214 li
607.815 199.199 607.87 199.146 607.88 199.072 cv
607.923 198.773 608.002 197.861 607.814 195.823 cv
607.802 195.691 607.658 195.607 607.547 195.678 cv
605.617 196.905 601.516 199.681 600.053 200.713 cv
599.896 200.823 600.005 201.068 600.193 201.029 cv
cp
f
599.035 199.093 mo
605.002 190.955 li
605.06 190.876 605.167 190.855 605.246 190.913 cv
605.669 191.22 606.908 192.222 607.075 193.535 cv
607.083 193.602 607.054 193.668 607 193.707 cv
604.573 195.414 600.817 198.262 599.277 199.343 cv
599.114 199.458 598.918 199.254 599.035 199.093 cv
cp
f
597.782 199.008 mo
603.086 190.692 li
603.169 190.57 603.079 190.406 602.932 190.416 cv
602.213 190.462 600.631 190.568 600.201 190.628 cv
600.136 190.637 600.088 190.678 600.066 190.741 cv
599.464 192.477 598.15 196.871 597.466 198.857 cv
597.399 199.052 597.666 199.178 597.782 199.008 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
597.831 192.19 mo
596.256 199.49 li
596.209 199.677 595.939 199.664 595.91 199.473 cv
595.21 193.934 li
595.201 193.875 595.22 193.817 595.265 193.778 cv
595.532 193.541 596.542 192.662 597.566 191.996 cv
597.7 191.91 597.87 192.036 597.831 192.19 cv
cp
f
593.631 196.263 mo
594.848 201.188 li
594.883 201.332 594.738 201.453 594.604 201.392 cv
591.162 199.84 li
591.075 199.801 591.032 199.705 591.069 199.617 cv
591.271 199.129 591.982 197.574 593.328 196.181 cv
593.424 196.081 593.598 196.128 593.631 196.263 cv
cp
f
590.225 201.438 mo
590 201.82 589.371 203.108 588.958 206.103 cv
588.938 206.249 589.103 206.356 589.229 206.283 cv
592.355 204.467 593.69 203.624 594.193 203.294 cv
594.311 203.217 594.291 203.043 594.162 202.987 cv
590.445 201.369 li
590.365 201.333 590.269 201.361 590.225 201.438 cv
cp
f
592.31 217.414 mo
592.787 217.537 594.203 217.858 595.458 217.715 cv
595.552 217.705 595.62 217.624 595.614 217.53 cv
595.414 214.488 595.184 209.977 595.081 207.909 cv
595.071 207.708 594.787 207.679 594.734 207.873 cv
592.189 217.198 li
592.163 217.293 592.214 217.39 592.31 217.414 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
589.485 213.714 mo
589.485 213.97 589.556 215.171 590.821 216.323 cv
590.916 216.409 591.073 216.371 591.112 216.249 cv
591.767 214.199 593.335 209.249 593.947 207.234 cv
594.006 207.039 593.743 206.916 593.63 207.085 cv
589.515 213.621 li
589.496 213.65 589.485 213.679 589.485 213.714 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
588.634 207.841 mo
588.669 208.378 588.818 210.612 588.947 211.904 cv
588.963 212.069 589.175 212.121 589.267 211.982 cv
590.739 209.759 592.679 206.915 593.482 205.74 cv
593.584 205.59 593.421 205.404 593.258 205.483 cv
588.733 207.67 li
588.668 207.702 588.629 207.769 588.634 207.841 cv
cp
f
597.826 203.807 mo
597.371 204.716 596.557 205.231 596.009 204.957 cv
595.46 204.683 595.384 203.723 595.839 202.813 cv
596.293 201.903 597.107 201.388 597.656 201.663 cv
598.205 201.937 598.281 202.897 597.826 203.807 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
482.11 282.993 mo
476.486 293.639 466.722 299.519 460.301 296.126 cv
453.88 292.734 453.233 281.354 458.857 270.709 cv
464.48 260.064 474.245 254.185 480.666 257.577 cv
487.087 260.969 487.733 272.349 482.11 282.993 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
479.729 281.736 mo
475.371 289.986 467.803 294.544 462.826 291.915 cv
457.849 289.285 457.348 280.466 461.707 272.215 cv
466.065 263.964 473.633 259.407 478.61 262.036 cv
483.587 264.665 484.088 273.485 479.729 281.736 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
468.343 281.589 mo
468.849 290.379 li
468.856 290.497 468.97 290.575 469.083 290.54 cv
469.656 290.361 471.255 289.738 472.743 288.023 cv
472.793 287.966 472.806 287.883 472.769 287.815 cv
471.832 286.135 469.556 282.772 468.668 281.474 cv
468.566 281.323 468.333 281.407 468.343 281.589 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
470.49 279.327 mo
474.313 286.307 li
474.367 286.406 474.5 286.433 474.586 286.358 cv
475.048 285.958 476.368 284.654 477.424 282.033 cv
477.46 281.941 477.424 281.835 477.333 281.797 cv
475.731 281.113 472.016 279.603 470.711 279.073 cv
470.555 279.009 470.409 279.179 470.49 279.327 cv
cp
f
471.84 276.505 mo
478.37 279.581 li
478.46 279.623 478.567 279.588 478.608 279.497 cv
478.842 278.978 479.551 277.246 479.69 275.065 cv
479.698 274.949 479.593 274.852 479.479 274.872 cv
478.019 275.128 473.48 275.896 471.884 276.167 cv
471.71 276.196 471.681 276.431 471.84 276.505 cv
cp
f
472.402 274.157 mo
480.114 272.485 li
480.188 272.471 480.246 272.418 480.258 272.343 cv
480.309 272.041 480.409 271.116 480.265 269.04 cv
480.255 268.906 480.111 268.818 479.996 268.887 cv
478.007 270.09 473.777 272.818 472.267 273.833 cv
472.105 273.942 472.21 274.193 472.402 274.157 cv
cp
f
471.269 272.164 mo
477.518 264.03 li
477.578 263.951 477.688 263.933 477.766 263.993 cv
478.189 264.314 479.425 265.36 479.566 266.699 cv
479.573 266.767 479.542 266.833 479.485 266.872 cv
476.98 268.551 473.099 271.36 471.51 272.423 cv
471.341 272.536 471.146 272.325 471.269 272.164 cv
cp
f
469.998 272.049 mo
475.577 263.719 li
475.665 263.598 475.575 263.429 475.426 263.435 cv
474.694 263.466 473.084 263.538 472.646 263.589 cv
472.58 263.597 472.53 263.637 472.507 263.7 cv
471.856 265.45 470.421 269.885 469.681 271.889 cv
469.608 272.085 469.875 272.219 469.998 272.049 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
470.203 265.122 mo
468.437 272.504 li
468.384 272.693 468.11 272.674 468.085 272.479 cv
467.5 266.834 li
467.492 266.774 467.512 266.716 467.559 266.677 cv
467.835 266.442 468.882 265.572 469.938 264.919 cv
470.076 264.834 470.246 264.966 470.203 265.122 cv
cp
f
465.842 269.166 mo
466.967 274.198 li
467 274.344 466.849 274.464 466.714 274.399 cv
463.251 272.745 li
463.164 272.703 463.123 272.604 463.162 272.515 cv
463.379 272.024 464.137 270.46 465.536 269.075 cv
465.636 268.976 465.812 269.028 465.842 269.166 cv
cp
f
462.263 274.346 mo
462.026 274.729 461.358 276.025 460.87 279.058 cv
460.846 279.206 461.011 279.319 461.142 279.247 cv
464.359 277.473 465.735 276.646 466.253 276.323 cv
466.375 276.248 466.359 276.07 466.229 276.01 cv
462.489 274.281 li
462.408 274.243 462.31 274.27 462.263 274.346 cv
cp
f
464.019 290.628 mo
464.501 290.764 465.932 291.123 467.21 291.006 cv
467.307 290.997 467.378 290.917 467.374 290.82 cv
467.24 287.726 467.108 283.136 467.051 281.033 cv
467.045 280.829 466.758 280.792 466.699 280.988 cv
463.901 290.405 li
463.872 290.502 463.922 290.601 464.019 290.628 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
461.232 286.804 mo
461.227 287.064 461.271 288.286 462.531 289.485 cv
462.625 289.575 462.786 289.539 462.828 289.417 cv
463.54 287.349 465.246 282.354 465.914 280.321 cv
465.978 280.124 465.713 279.993 465.595 280.163 cv
461.265 286.71 li
461.245 286.739 461.233 286.769 461.232 286.804 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
460.501 280.817 mo
460.525 281.363 460.625 283.638 460.727 284.952 cv
460.74 285.121 460.954 285.178 461.05 285.039 cv
462.597 282.813 464.632 279.968 465.476 278.792 cv
465.583 278.642 465.421 278.45 465.253 278.526 cv
460.606 280.646 li
460.54 280.676 460.498 280.744 460.501 280.817 cv
cp
f
469.934 276.926 mo
469.451 277.84 468.612 278.345 468.061 278.054 cv
467.509 277.763 467.454 276.786 467.937 275.872 cv
468.419 274.957 469.258 274.452 469.81 274.744 cv
470.361 275.035 470.417 276.012 469.934 276.926 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
584.125 169.497 mo
579.681 172.365 493.074 225.418 493.074 225.418 cv
493.074 225.418 504.258 194.733 520.461 182.402 cv
536.664 170.07 555.018 156.592 580.111 156.735 cv
605.204 156.878 588.571 166.629 584.125 169.497 cv
cp
484.614 225.562 mo
481.89 231.44 448.767 223.698 432.564 212.37 cv
416.361 201.042 409.335 186.99 413.494 181.972 cv
417.652 176.953 442.028 153.868 444.609 151.717 cv
444.609 151.717 457.514 170.644 504.688 187.851 cv
498.81 197.314 487.339 219.683 484.614 225.562 cv
cp
631.588 167.059 mo
630.727 164.478 631.731 152.29 627.859 144.834 cv
620.116 134.223 578.534 112.285 574.232 111.854 cv
567.923 112.572 552.293 114.866 546.988 116.156 cv
546.38 116.304 568.209 120.458 607.928 149.422 cv
602.48 148.562 595.023 148.275 586.133 147.988 cv
554.588 126.767 531.886 118.554 523.54 115.653 cv
520.173 116.002 516.853 116.529 513.866 117.303 cv
475.438 125.907 450.409 144.638 444.179 148.992 cv
437.006 154.005 423.244 167.776 417.222 174.085 cv
411.199 180.394 408.025 182.192 386.823 197.458 cv
372.484 207.781 364.988 217.513 363.021 222.407 cv
359.791 230.445 359.149 241.765 359.293 255.96 cv
359.436 270.155 383.813 284.351 398.438 291.521 cv
413.063 298.689 435.432 300.841 444.179 297.686 cv
445.284 297.287 448.748 295.489 453.952 292.655 cv
453.758 283.808 455.339 268.002 467.78 259.248 cv
483.476 248.203 487.985 264.202 486.328 274.527 cv
516.292 257.522 555.555 234.891 581.577 219.851 cv
581.778 213.173 583.603 194.157 597.485 184.388 cv
613.397 173.19 616.442 191.256 613.891 200.798 cv
617.006 198.604 621.153 195.375 624.418 191.722 cv
630.441 184.983 632.448 169.64 631.588 167.059 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
486.328 274.527 mo
516.292 257.522 555.555 234.891 581.577 219.851 cv
581.778 213.173 583.603 194.157 597.485 184.388 cv
613.397 173.19 616.442 191.256 613.891 200.798 cv
617.006 198.604 621.153 195.375 624.418 191.722 cv
630.441 184.983 632.448 169.64 631.588 167.059 cv
631.214 165.939 631.192 163.011 630.97 159.446 cv
626.408 159.235 624.812 156.448 624.812 156.448 cv
624.812 156.448 599.755 169.354 587.603 176.666 cv
575.451 183.979 518.669 218.607 495.548 232.48 cv
472.426 246.353 455.65 258.72 448.66 264.635 cv
445.003 274.636 440.379 279.261 418.01 277.325 cv
395.642 275.389 371.015 256.354 364.885 249.256 cv
361.787 245.669 360.389 241.562 359.762 238.374 cv
359.33 243.614 359.228 249.484 359.293 255.96 cv
359.436 270.155 383.813 284.351 398.438 291.521 cv
413.063 298.689 435.432 300.841 444.179 297.686 cv
445.284 297.287 448.748 295.489 453.952 292.655 cv
453.758 283.808 455.339 268.002 467.78 259.248 cv
483.476 248.203 487.985 264.202 486.328 274.527 cv
cp
.278386 .193088 .0924697 0 cmyk
f
614.811 185.7 mo
613.664 180.824 609.792 176.953 601.476 179.534 cv
580.254 186.56 578.39 217.102 578.39 217.102 cv
578.39 217.102 494.221 265.567 488.342 268.865 cv
488.629 266.427 488.199 249.507 472.426 254.096 cv
456.654 258.684 451.778 276.608 451.205 280.192 cv
448.48 282.486 439.877 285.785 422.384 284.351 cv
404.89 282.917 387.11 272.45 373.632 263.416 cv
366.354 258.539 361.881 252.87 359.302 248.684 cv
359.269 251.019 359.268 253.442 359.293 255.96 cv
359.436 270.155 383.813 284.351 398.438 291.521 cv
413.063 298.689 435.432 300.841 444.179 297.686 cv
445.284 297.287 448.748 295.489 453.952 292.655 cv
453.758 283.808 455.339 268.002 467.78 259.248 cv
483.476 248.203 487.985 264.202 486.328 274.527 cv
516.292 257.522 555.555 234.891 581.577 219.851 cv
581.778 213.173 583.603 194.157 597.485 184.388 cv
613.397 173.19 616.442 191.256 613.891 200.798 cv
617.006 198.604 621.153 195.375 624.418 191.722 cv
630.441 184.983 632.448 169.64 631.588 167.059 cv
631.014 176.81 619.113 182.688 614.811 185.7 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
561.883 231.222 mo
561.968 231.173 562.054 231.123 562.138 231.074 cv
562.053 231.123 561.968 231.173 561.883 231.222 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
566.599 228.501 mo
566.827 228.37 567.052 228.239 567.28 228.108 cv
567.053 228.239 566.826 228.37 566.599 228.501 cv
cp
f
546.425 240.129 mo
546.679 239.982 546.933 239.836 547.186 239.69 cv
546.933 239.836 546.678 239.983 546.425 240.129 cv
cp
f
551.77 237.051 mo
551.991 236.923 552.211 236.796 552.433 236.669 cv
552.211 236.796 551.991 236.923 551.77 237.051 cv
cp
f
494.354 269.964 mo
494.354 269.964 li
494.366 269.958 494.378 269.951 494.39 269.944 cv
494.377 269.951 494.366 269.958 494.354 269.964 cv
cp
f
571.511 225.666 mo
571.536 225.651 571.56 225.637 571.585 225.623 cv
571.56 225.637 571.536 225.651 571.511 225.666 cv
cp
f
578.39 217.102 mo
578.39 217.102 573.372 214.09 570.36 215.668 cv
567.349 217.245 509.277 250.368 499.67 255.96 cv
490.063 261.552 488.342 268.865 488.342 268.865 cv
494.221 265.567 578.39 217.102 578.39 217.102 cv
cp
f
514.771 258.305 mo
514.924 258.217 515.076 258.13 515.229 258.042 cv
515.077 258.13 514.924 258.217 514.771 258.305 cv
cp
f
504.467 264.197 mo
504.519 264.167 504.571 264.138 504.624 264.108 cv
504.572 264.138 504.519 264.167 504.467 264.197 cv
cp
f
499.214 267.195 mo
499.333 267.127 499.453 267.059 499.572 266.991 cv
499.453 267.059 499.333 267.127 499.214 267.195 cv
cp
f
536.196 246.013 mo
536.337 245.932 536.477 245.851 536.618 245.77 cv
536.477 245.851 536.336 245.932 536.196 246.013 cv
cp
f
520.2 255.195 mo
520.329 255.121 520.459 255.046 520.589 254.972 cv
520.459 255.046 520.329 255.121 520.2 255.195 cv
cp
f
530.855 249.081 mo
530.951 249.026 531.045 248.972 531.141 248.917 cv
531.045 248.972 530.95 249.026 530.855 249.081 cv
cp
f
432.564 212.37 mo
416.361 201.042 409.335 186.99 413.494 181.972 cv
411.037 179.833 li
409.18 181.341 406.965 182.995 403.933 185.189 cv
392.842 198.246 369.402 225.264 369.402 234.948 cv
380.156 251.935 403.6 259.688 414.569 262.699 cv
420.038 256.319 466.55 234.078 480.604 227.445 cv
470.756 228.601 445.92 221.707 432.564 212.37 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
414.569 262.699 mo
414.569 262.699 422.205 265.173 431.668 264.313 cv
441.132 263.452 446.724 261.946 448.66 264.635 cv
447.046 272.163 437.476 274.959 430.916 274.959 cv
424.355 274.959 414.139 272.378 409.407 270.55 cv
411.666 267.969 414.569 262.699 414.569 262.699 cv
cp
.278386 .193088 .0924697 0 cmyk
f
396.514 271.156 mo
397.299 271.489 398.006 271.801 398.614 272.084 cv
398.684 272.114 398.754 272.146 398.824 272.176 cv
405.171 275.091 409.407 270.55 409.407 270.55 cv
411.666 267.969 414.569 262.699 414.569 262.699 cv
403.6 259.688 380.156 251.935 369.402 234.948 cv
369.402 234.948 368.326 238.287 367.574 247.105 cv
367.319 250.084 369.715 253.918 369.748 253.969 cv
375.794 259.208 385.594 266.167 396.514 271.156 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
369.402 234.948 mo
369.402 234.948 365.022 227.265 364.319 219.848 cv
363.762 220.798 363.319 221.665 363.021 222.407 cv
362.222 224.396 361.582 226.588 361.072 228.973 cv
361.513 235.154 363.577 241.952 367.574 247.105 cv
368.326 238.287 369.402 234.948 369.402 234.948 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
414.565 296.939 mo
411.763 294.036 400.8 278.652 400.8 278.652 cv
400.791 278.646 li
390.878 274.476 381.518 268.702 373.632 263.416 cv
372.501 262.659 371.447 261.881 370.448 261.094 cv
370.446 261.094 370.442 261.092 370.44 261.092 cv
366.983 263.628 361.951 264.19 361.889 264.197 cv
368.565 275.415 386.659 285.746 398.438 291.521 cv
403.232 293.87 408.859 295.678 414.565 296.939 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
422.384 284.351 mo
419.485 284.113 416.579 283.623 413.685 282.937 cv
413.674 282.937 li
413.674 282.937 416.648 290.086 421.237 291.95 cv
425.825 293.814 440.594 294.102 442.602 292.954 cv
444.139 292.075 440.799 286.668 439.151 284.185 cv
434.827 284.743 429.303 284.918 422.384 284.351 cv
cp
f
359.293 255.96 mo
359.293 256.006 359.3 256.052 359.302 256.098 cv
360.654 258.286 362.029 259.563 363.568 259.847 cv
365.98 260.293 366.925 258.042 366.925 258.042 cv
366.924 258.041 li
363.432 254.711 360.969 251.388 359.302 248.684 cv
359.269 251.019 359.268 253.442 359.293 255.96 cv
cp
f
411.833 293.634 mo
411.833 293.634 li
378.196 282.555 364.321 263.739 364.321 263.739 cv
364.321 263.739 li
362.917 264.081 361.917 264.193 361.889 264.197 cv
368.565 275.415 386.659 285.746 398.438 291.521 cv
403.232 293.87 408.859 295.678 414.565 296.939 cv
413.966 296.318 412.991 295.124 411.833 293.634 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
431.668 264.313 mo
422.205 265.173 414.569 262.699 414.569 262.699 cv
414.569 262.699 411.666 267.969 409.407 270.55 cv
410.325 270.904 411.453 271.287 412.717 271.674 cv
412.72 271.666 414.358 267.431 418.978 267.646 cv
423.154 267.84 440.041 267.595 446.842 263.428 cv
444.07 262.586 439.053 263.641 431.668 264.313 cv
cp
0 0 0 0 cmyk
f
426.624 274.674 mo
428.15 274.853 429.607 274.959 430.916 274.959 cv
437.476 274.959 447.046 272.163 448.66 264.635 cv
448.66 264.635 442.207 268.937 436.615 269.964 cv
431.037 270.99 426.645 274.656 426.624 274.674 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
363.021 222.407 mo
362.222 224.396 361.582 226.588 361.072 228.973 cv
361.479 234.672 363.286 240.878 366.694 245.854 cv
367.2 239.817 365.599 234.874 364.319 231.222 cv
363.037 227.562 364.319 219.848 364.319 219.848 cv
363.762 220.798 363.319 221.665 363.021 222.407 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
630.97 159.446 mo
630.759 156.066 630.37 152.115 629.332 148.586 cv
627.835 150.021 626.216 151.524 625.242 152.29 cv
623.056 154.011 624.812 156.448 624.812 156.448 cv
624.812 156.448 626.408 159.235 630.97 159.446 cv
cp
.0208438 .691371 .53521 .00747692 cmyk
f
574.232 111.854 mo
567.923 112.572 552.293 114.866 546.988 116.156 cv
546.38 116.304 568.209 120.458 607.929 149.422 cv
607.929 149.422 617.775 145.171 625.706 142.4 cv
614.367 131.201 578.227 112.254 574.232 111.854 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
607.929 149.422 mo
568.209 120.458 546.38 116.304 546.988 116.156 cv
535.804 114.579 523.54 115.653 523.54 115.653 cv
531.886 118.554 554.588 126.767 586.133 147.988 cv
595.023 148.275 602.48 148.562 607.929 149.422 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
432.564 212.37 mo
448.767 223.698 481.89 231.44 484.614 225.562 cv
485.068 224.582 485.77 223.136 486.644 221.376 cv
474.583 203.765 464.057 203.559 451.492 201.186 cv
440.285 199.069 420.706 183.55 415.746 179.501 cv
414.763 180.531 413.984 181.38 413.494 181.972 cv
409.335 186.99 416.361 201.042 432.564 212.37 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
462.962 185.556 mo
461.766 176.729 462.794 171.38 464.051 168.278 cv
458.577 164.731 454.476 161.517 451.487 158.883 cv
415.746 179.501 li
415.746 179.501 li
418.774 181.973 427.25 188.716 435.944 194.079 cv
444.355 185.961 454.467 185.813 462.962 185.556 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
418.997 182.099 mo
455.193 161.966 li
453.805 160.871 452.57 159.838 451.487 158.883 cv
415.746 179.501 li
416.51 180.125 417.623 181.022 418.997 182.099 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
435.944 194.079 mo
444.355 185.961 454.467 185.813 462.962 185.556 cv
462.478 181.98 462.362 178.984 462.475 176.468 cv
457.745 179.28 448.537 184.659 447.477 184.553 cv
446.043 184.409 440.881 177.526 437.296 179.357 cv
434.733 180.667 428.067 184.298 424.474 186.262 cv
427.9 188.788 431.895 191.581 435.944 194.079 cv
cp
f
488.639 181.391 mo
478.244 176.773 470.105 172.219 463.801 168.114 cv
463.887 168.169 463.965 168.223 464.051 168.278 cv
462.794 171.38 461.766 176.729 462.962 185.556 cv
482.32 196.741 li
482.32 196.741 489.059 192.583 493.361 191.722 cv
493.6 188.094 491.619 184.579 488.639 181.391 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
451.492 201.186 mo
457.138 202.252 462.373 202.886 467.521 204.853 cv
482.32 196.741 li
462.962 185.556 li
454.467 185.813 444.355 185.961 435.944 194.079 cv
441.491 197.5 447.126 200.361 451.492 201.186 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
435.942 194.078 mo
435.436 193.766 434.932 193.448 434.428 193.128 cv
434.428 193.129 li
434.932 193.45 435.436 193.766 435.942 194.078 cv
cp
f
493.361 191.722 mo
489.059 192.583 482.32 196.741 482.32 196.741 cv
478.279 198.956 li
493.698 207.615 li
495.815 203.589 498.034 199.458 500.083 195.778 cv
493.361 191.722 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
481.708 215.014 mo
493.698 207.615 li
478.279 198.956 li
467.521 204.853 li
467.521 204.853 li
472.239 206.657 476.886 209.591 481.708 215.014 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
432.564 212.37 mo
448.767 223.698 481.89 231.44 484.614 225.562 cv
484.799 225.164 485.033 224.671 485.294 224.13 cv
472.504 226.415 444.005 218.486 428.263 206.061 cv
411.942 193.18 413.494 181.972 413.494 181.972 cv
409.335 186.99 416.361 201.042 432.564 212.37 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
481.708 215.014 mo
483.33 216.838 484.972 218.935 486.644 221.376 cv
488.441 217.754 490.983 212.777 493.698 207.615 cv
481.708 215.014 li
cp
.858457 .739651 .439277 .415595 cmyk
f
500.083 195.778 mo
493.361 191.722 li
490.941 192.206 487.75 193.733 485.421 194.977 cv
497.03 201.356 li
498.066 199.434 499.095 197.552 500.083 195.778 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
493.074 225.418 mo
493.074 225.418 501.508 220.251 513.247 213.057 cv
501.91 206.261 li
496.347 216.449 493.074 225.418 493.074 225.418 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
532.434 178.494 mo
532.363 178.208 532.386 175.454 532.41 173.637 cv
528.267 176.493 524.302 179.479 520.461 182.402 cv
513.018 188.067 506.638 197.604 501.91 206.261 cv
513.247 213.057 li
519.763 209.062 527.298 204.443 534.974 199.734 cv
535.237 196.531 536.198 184.712 536.198 183.226 cv
536.198 181.505 532.542 178.924 532.434 178.494 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
536.437 170.946 mo
538.19 178.107 541 193.978 541.328 195.837 cv
543.653 194.411 545.967 192.991 548.25 191.59 cv
546.468 185.419 542.876 172.019 541.726 167.713 cv
539.927 168.75 538.165 169.832 536.437 170.946 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
541.328 195.837 mo
541 193.978 538.19 178.107 536.437 170.946 cv
536.931 170.627 530.684 174.827 532.41 173.637 cv
532.386 175.454 532.363 178.208 532.434 178.494 cv
532.542 178.924 536.198 181.505 536.198 183.226 cv
536.198 184.712 535.237 196.531 534.974 199.734 cv
533.893 200.398 542.518 195.106 541.328 195.837 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
493.361 191.722 mo
500.083 195.778 li
500.046 195.843 500.008 195.913 499.972 195.979 cv
501.721 192.833 503.351 190.004 504.688 187.851 cv
498.537 185.606 492.974 183.334 487.941 181.077 cv
488.175 181.182 488.403 181.287 488.639 181.391 cv
491.619 184.579 493.6 188.094 493.361 191.722 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
573.085 164.402 mo
570.071 163.149 564.165 161.162 559.768 159.725 cv
553.311 161.686 547.338 164.481 541.727 167.716 cv
542.878 172.025 546.469 185.421 548.25 191.59 cv
559.544 184.658 570.019 178.223 576.734 174.082 cv
576.953 171.299 576.845 165.966 573.085 164.402 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
559.128 159.931 mo
558.797 160.035 558.461 160.131 558.133 160.239 cv
558.137 160.25 li
558.466 160.142 558.796 160.035 559.128 159.931 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
580.111 156.735 mo
572.797 156.693 566.063 157.821 559.781 159.729 cv
564.176 161.166 570.074 163.15 573.085 164.402 cv
576.845 165.966 576.953 171.299 576.734 174.082 cv
580.756 171.603 583.436 169.942 584.125 169.497 cv
588.571 166.629 605.204 156.878 580.111 156.735 cv
cp
f
576.425 174.272 mo
576.416 174.279 576.404 174.286 576.394 174.292 cv
576.404 174.286 576.416 174.279 576.425 174.272 cv
cp
f
582.448 170.549 mo
575.602 156.859 li
574.949 156.898 574.303 156.951 573.659 157.008 cv
580.195 171.945 li
581.077 171.4 581.835 170.93 582.448 170.549 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
523.54 115.653 mo
520.173 116.002 516.854 116.529 513.866 117.303 cv
476.913 125.576 452.36 143.207 444.989 148.421 cv
444.609 151.717 li
444.609 151.717 457.514 170.644 504.688 187.851 cv
504.688 187.851 528.713 155.577 586.134 147.988 cv
586.134 147.988 li
586.133 147.988 li
554.588 126.767 531.886 118.554 523.54 115.653 cv
cp
.804318 .691493 .355047 .205478 cmyk
f
444.609 151.717 mo
444.609 151.717 421.087 173.578 415.746 179.501 cv
418.997 182.099 418.997 182.099 418.997 182.099 cv
421.513 180.7 li
421.513 180.7 439.872 160.75 446.503 154.016 cv
445.781 153.195 444.609 151.717 444.609 151.717 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
579.72 157.594 mo
554.478 157.594 535.914 171.723 520.982 183.086 cv
507.768 193.144 497.791 215.949 494.805 223.349 cv
508.286 215.089 579.669 171.349 583.66 168.774 cv
584.395 168.305 li
586.858 166.738 593.404 162.577 592.747 160.295 cv
592.52 159.504 590.832 157.657 580.106 157.595 cv
579.977 157.595 579.848 157.594 579.72 157.594 cv
cp
491.422 227.439 mo
492.266 225.124 li
492.726 223.861 503.723 194.06 519.94 181.717 cv
535.077 170.197 553.898 155.874 579.717 155.874 cv
579.85 155.874 579.982 155.874 580.116 155.875 cv
589.102 155.926 593.641 157.18 594.401 159.819 cv
595.335 163.066 590.202 166.651 585.317 169.757 cv
584.592 170.22 li
580.189 173.061 494.39 225.621 493.523 226.152 cv
491.422 227.439 li
cp
0 0 0 0 cmyk
f
540.409 203.994 mo
540.409 203.994 540.407 205.387 539.311 206.17 cv
538.303 206.891 535.077 208.988 534.216 209.274 cv
533.85 209.396 531.634 209.035 531.634 209.035 cv
531.634 210.769 li
531.634 210.769 533.609 211.418 534.756 211.004 cv
535.903 210.59 540.13 208.065 540.597 207.41 cv
540.878 207.016 540.773 205.509 540.409 203.994 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
534.216 209.274 mo
535.077 208.988 538.303 206.891 539.311 206.17 cv
539.978 205.694 540.237 204.995 540.34 204.518 cv
540.409 203.994 li
531.634 209.035 li
531.634 209.035 533.85 209.396 534.216 209.274 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
587.903 175.927 mo
587.903 175.927 587.902 177.32 586.805 178.104 cv
585.797 178.824 582.571 180.921 581.71 181.208 cv
581.344 181.33 579.128 180.968 579.128 180.968 cv
579.128 182.702 li
579.128 182.702 581.103 183.351 582.25 182.937 cv
583.397 182.523 587.625 179.998 588.091 179.344 cv
588.373 178.949 588.268 177.442 587.903 175.927 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
581.71 181.208 mo
582.571 180.921 585.797 178.824 586.805 178.104 cv
587.472 177.627 587.731 176.928 587.834 176.451 cv
587.903 175.927 li
579.128 180.968 li
579.128 180.968 581.344 181.33 581.71 181.208 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
461.541 173.819 mo
461.541 173.819 469.448 176.175 476.818 182.632 cv
477.501 184 476.409 185.071 475.727 185.205 cv
475.044 185.339 462.643 178.373 461.541 176.9 cv
460.44 175.426 460.776 173.563 461.541 173.819 cv
cp
.278386 .193088 .0924697 0 cmyk
f
502.091 209.718 mo
502.091 209.718 505.598 208.002 509.577 208.889 cv
513.556 209.776 516.684 212.501 517.329 214.222 cv
517.903 215.942 515.896 216.992 515.178 217.363 cv
514.461 217.734 502.345 217.089 502.345 217.089 cv
502.345 217.089 499.149 214.459 502.091 209.718 cv
cp
f
517.417 214.66 mo
512.353 214.236 501.005 213.07 500.877 213.057 cv
500.64 215.674 502.345 217.089 502.345 217.089 cv
502.345 217.089 514.461 217.734 515.178 217.363 cv
515.832 217.025 517.551 216.121 517.417 214.66 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
451.238 144.109 mo
484.171 146.112 528.605 146.481 573.247 139.718 cv
548.434 124.549 530.7 118.142 523.54 115.653 cv
520.173 116.002 516.854 116.529 513.866 117.303 cv
484.122 123.962 462.421 136.68 451.238 144.109 cv
cp
.833463 .720241 .392493 .285161 cmyk
f
412.449 266.277 mo
407.242 264.88 396.351 261.333 384.744 253.764 cv
373.603 246.5 369.794 240.423 368.685 238.191 cv
368.548 238.959 368.401 239.878 368.25 240.958 cv
370.282 244.097 374.661 249.277 383.789 255.229 cv
395.263 262.711 405.844 266.295 411.442 267.826 cv
411.79 267.309 412.13 266.785 412.449 266.277 cv
cp
.278386 .193088 .0924697 0 cmyk
f
409.383 270.574 mo
403.69 268.892 393.603 265.236 382.912 258.142 cv
374.108 252.301 369.84 247.211 367.856 244.167 cv
367.767 244.996 367.68 245.892 367.597 246.85 cv
367.599 246.874 367.599 246.897 367.602 246.922 cv
370.054 250.155 374.391 254.636 381.946 259.648 cv
392.108 266.391 401.577 270.055 407.576 271.919 cv
408.658 271.298 409.291 270.669 409.383 270.574 cv
cp
f
477.384 204.845 mo
473.407 203.875 471.554 205.026 470.687 206.252 cv
472 206.917 473.312 207.688 474.628 208.606 cv
475.19 208.636 475.885 208.784 476.775 209.112 cv
481.947 210.869 485.394 216.867 487.069 220.521 cv
487.673 219.312 488.347 217.975 489.074 216.548 cv
486.6 211.812 482.427 206.075 477.384 204.845 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
685.542 188.414 mo
687.108 186.766 688.79 185.011 690.53 183.211 cv
690.53 183.211 li
690.53 183.211 688.766 179.23 683.677 179.458 cv
679.699 179.637 682.698 186.006 685.542 188.414 cv
cp
.278386 .193088 .0924697 0 cmyk
f
682.797 179.66 mo
680.248 180.751 682.95 186.22 685.542 188.414 cv
686.222 187.698 686.932 186.955 687.651 186.204 cv
685.564 184.247 683.831 181.504 682.797 179.66 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
860.342 212.114 mo
841.529 231.576 li
841.529 231.576 838.155 231.883 831.688 228.945 cv
825.221 226.008 834.054 197.587 834.054 197.587 cv
855.275 187.904 li
862.651 192.69 li
865.645 200.886 li
860.342 212.114 li
cp
.858457 .739651 .439277 .415595 cmyk
f
837.356 182.258 mo
755.657 232.286 li
755.657 232.286 762.269 209.941 777.823 196.1 cv
793.379 182.258 817.575 169.583 839.084 174.384 cv
838.892 176.497 837.356 182.258 837.356 182.258 cv
cp
707.731 226.234 mo
677.196 212.024 681.613 196.1 681.613 196.1 cv
681.613 196.1 699.089 178.417 710.035 168.432 cv
720.597 180.146 759.196 198.581 765.533 200.886 cv
759.388 209.335 746.522 233.724 746.522 233.724 cv
746.522 233.724 738.264 240.445 707.731 226.234 cv
cp
877.555 182.771 mo
876.979 182.066 875.187 180.722 875.187 180.722 cv
875.187 180.722 876.147 168.879 874.61 160.046 cv
873.458 156.717 843.372 130.6 817.383 126.888 cv
811.366 129.192 805.734 131.369 802.404 132.265 cv
799.076 133.161 785.505 132.521 774.495 134.313 cv
763.485 136.105 721.621 155.053 710.099 164.911 cv
698.577 174.769 680.269 192.564 680.269 192.564 cv
675.276 196.917 643.142 216.121 637.637 227.899 cv
632.132 239.677 630.501 256.058 632.765 264.898 cv
634.436 271.427 650.335 282.411 679.79 296.571 cv
686.447 299.772 709.715 300.745 717.652 294.6 cv
717.652 294.6 716.546 267.321 736.344 261.377 cv
742.861 259.42 747.93 265.474 745.945 277.995 cv
751.935 274.67 800.822 246.648 831.688 228.945 cv
831.336 225.582 830.343 209.166 843.053 199.605 cv
857.263 188.916 861.68 203.894 860.592 210.616 cv
860.504 211.155 860.422 211.646 860.342 212.114 cv
865.824 208.204 876.108 200.267 877.043 195.125 cv
878.323 188.083 878.131 183.475 877.555 182.771 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
837.356 182.258 mo
755.657 232.286 li
755.657 232.286 762.269 209.941 777.823 196.1 cv
793.379 182.258 817.575 169.583 839.084 174.384 cv
838.892 176.497 837.356 182.258 837.356 182.258 cv
cp
707.731 226.234 mo
677.196 212.024 681.613 196.1 681.613 196.1 cv
681.613 196.1 699.089 178.417 710.035 168.432 cv
720.597 180.146 759.196 198.581 765.533 200.886 cv
759.388 209.335 746.522 233.724 746.522 233.724 cv
746.522 233.724 738.264 240.445 707.731 226.234 cv
cp
877.555 182.771 mo
876.979 182.066 875.187 180.722 875.187 180.722 cv
875.187 180.722 876.147 168.879 874.61 160.046 cv
873.458 156.717 843.372 130.6 817.383 126.888 cv
811.366 129.192 805.734 131.369 802.404 132.265 cv
799.076 133.161 785.505 132.521 774.495 134.313 cv
763.485 136.105 721.621 155.053 710.099 164.911 cv
698.577 174.769 680.269 192.564 680.269 192.564 cv
675.276 196.917 643.142 216.121 637.637 227.899 cv
632.132 239.677 630.501 256.058 632.765 264.898 cv
634.436 271.427 650.335 282.411 679.79 296.571 cv
686.447 299.772 709.715 300.745 717.652 294.6 cv
717.652 294.6 716.546 267.321 736.344 261.377 cv
742.861 259.42 747.93 265.474 745.945 277.995 cv
751.935 274.67 800.822 246.648 831.688 228.945 cv
831.336 225.582 830.343 209.166 843.053 199.605 cv
857.263 188.916 861.68 203.894 860.592 210.616 cv
860.504 211.155 860.422 211.646 860.342 212.114 cv
865.824 208.204 876.108 200.267 877.043 195.125 cv
878.323 188.083 878.131 183.475 877.555 182.771 cv
cp
f
746.522 254.173 mo
745.854 254.173 731.337 259.679 731.337 259.679 cv
726.687 266.341 li
718.411 274.235 716.009 287.868 717.652 294.6 cv
723.606 297.433 729.909 297.235 729.909 297.235 cv
729.909 297.231 li
728.655 297.266 727.428 297.054 726.272 296.555 cv
720.272 293.967 718.453 284.811 722.209 276.104 cv
723.604 272.87 725.579 270.177 727.81 268.176 cv
745.946 277.995 li
748.499 275.78 li
753.669 260.447 li
753.669 260.447 747.19 254.173 746.522 254.173 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
743.935 285.476 mo
740.18 294.183 732.271 299.143 726.272 296.555 cv
720.272 293.967 718.453 284.811 722.209 276.104 cv
725.964 267.396 733.873 262.437 739.872 265.024 cv
745.872 267.612 747.691 276.769 743.935 285.476 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
741.332 284.353 mo
738.681 290.498 732.99 293.951 728.62 292.066 cv
724.25 290.182 722.856 283.672 725.507 277.526 cv
728.158 271.381 733.849 267.927 738.219 269.813 cv
742.589 271.697 743.983 278.208 741.332 284.353 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
734.903 269.77 mo
733.769 269.902 732.596 270.322 731.44 271.023 cv
729.114 272.435 727.147 274.805 725.9 277.696 cv
724.652 280.587 724.279 283.645 724.849 286.305 cv
725.407 288.912 726.806 290.818 728.79 291.674 cv
732.934 293.463 738.386 290.102 740.94 284.184 cv
743.493 278.265 742.196 271.994 738.049 270.205 cv
737.072 269.784 736.006 269.641 734.903 269.77 cv
cp
732.01 292.953 mo
730.786 293.096 729.577 292.945 728.451 292.459 cv
726.206 291.491 724.63 289.369 724.012 286.483 cv
723.406 283.651 723.797 280.41 725.115 277.357 cv
726.431 274.304 728.52 271.795 730.997 270.292 cv
733.519 268.762 736.144 268.452 738.388 269.419 cv
742.968 271.396 744.464 278.17 741.724 284.522 cv
739.659 289.312 735.764 292.515 732.01 292.953 cv
cp
.278386 .193088 .0924697 0 cmyk
f
724.249 285.236 mo
730.897 282.97 li
726.906 290.949 li
727.414 291.407 727.981 291.791 728.62 292.066 cv
729.606 292.492 730.661 292.632 731.732 292.544 cv
734.1 283.671 li
738.875 288.373 li
739.836 287.224 740.677 285.871 741.332 284.353 cv
741.346 284.319 741.357 284.286 741.371 284.253 cv
735.754 280.321 li
741.574 273.113 li
740.825 271.63 739.71 270.47 738.255 269.831 cv
734.321 276.046 li
733.57 269.621 li
732.401 269.959 731.241 270.563 730.152 271.399 cv
730.837 279.389 li
724.705 279.824 li
724.198 281.699 724.059 283.549 724.249 285.236 cv
cp
f
724.232 282.492 mo
732.478 281.484 li
728.586 292.049 li
728.598 292.055 728.608 292.062 728.62 292.066 cv
728.873 292.176 729.131 292.263 729.392 292.337 cv
733.328 281.651 li
740.158 286.595 li
740.307 286.354 740.447 286.103 740.587 285.851 cv
733.714 280.875 li
740.378 271.354 li
740.181 271.141 739.971 270.942 739.751 270.758 cv
733.416 279.808 li
732.281 270.101 li
732.008 270.227 731.737 270.368 731.469 270.521 cv
732.647 280.602 li
724.339 281.618 li
724.295 281.912 724.258 282.203 724.232 282.492 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
733.112 283.514 mo
732.85 283.544 732.59 283.512 732.349 283.407 cv
731.867 283.2 731.529 282.744 731.397 282.126 cv
731.266 281.518 731.35 280.822 731.633 280.167 cv
731.916 279.512 732.364 278.974 732.895 278.651 cv
733.436 278.323 734 278.256 734.481 278.464 cv
735.464 278.888 735.785 280.342 735.197 281.704 cv
734.754 282.732 733.918 283.419 733.112 283.514 cv
cp
.278386 .193088 .0924697 0 cmyk
f
733.269 282.173 mo
733.143 282.188 733.018 282.173 732.902 282.122 cv
732.671 282.022 732.508 281.804 732.445 281.507 cv
732.382 281.215 732.423 280.881 732.559 280.566 cv
732.694 280.251 732.909 279.993 733.165 279.838 cv
733.424 279.681 733.695 279.648 733.926 279.749 cv
734.398 279.952 734.552 280.65 734.27 281.305 cv
734.057 281.798 733.656 282.128 733.269 282.173 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
857.04 219.899 mo
853.284 228.606 845.376 233.566 839.376 230.979 cv
833.376 228.39 831.558 219.234 835.313 210.527 cv
839.068 201.82 846.978 196.86 852.977 199.448 cv
858.977 202.036 860.796 211.192 857.04 219.899 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
854.437 218.776 mo
851.785 224.921 846.094 228.375 841.724 226.49 cv
837.355 224.605 835.96 218.095 838.611 211.95 cv
841.262 205.805 846.953 202.351 851.323 204.236 cv
855.693 206.121 857.087 212.631 854.437 218.776 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
848.008 204.193 mo
846.873 204.325 845.7 204.746 844.545 205.447 cv
842.218 206.858 840.251 209.228 839.004 212.119 cv
837.757 215.011 837.384 218.068 837.953 220.728 cv
838.511 223.335 839.91 225.242 841.894 226.097 cv
846.038 227.886 851.491 224.525 854.044 218.606 cv
856.597 212.688 855.301 206.417 851.154 204.628 cv
850.177 204.207 849.11 204.064 848.008 204.193 cv
cp
845.115 227.376 mo
843.891 227.52 842.682 227.368 841.555 226.883 cv
839.311 225.915 837.734 223.792 837.116 220.907 cv
836.511 218.075 836.902 214.833 838.219 211.78 cv
839.535 208.728 841.624 206.219 844.101 204.716 cv
846.624 203.186 849.249 202.875 851.492 203.843 cv
856.072 205.819 857.569 212.594 854.828 218.945 cv
852.764 223.735 848.868 226.938 845.115 227.376 cv
cp
.278386 .193088 .0924697 0 cmyk
f
837.353 219.66 mo
844.001 217.393 li
840.011 225.373 li
840.519 225.83 841.085 226.214 841.724 226.49 cv
842.71 226.916 843.766 227.056 844.836 226.968 cv
847.204 218.095 li
851.98 222.796 li
852.94 221.646 853.781 220.294 854.437 218.776 cv
854.451 218.743 854.461 218.709 854.476 218.676 cv
848.858 214.745 li
854.679 207.537 li
853.929 206.054 852.815 204.894 851.359 204.254 cv
847.426 210.47 li
846.674 204.044 li
845.505 204.383 844.346 204.987 843.257 205.823 cv
843.942 213.812 li
837.809 214.248 li
837.303 216.123 837.164 217.973 837.353 219.66 cv
cp
f
837.336 216.916 mo
845.582 215.908 li
841.691 226.473 li
841.702 226.478 841.712 226.485 841.724 226.49 cv
841.977 226.599 842.235 226.686 842.496 226.76 cv
846.432 216.075 li
853.262 221.019 li
853.412 220.778 853.552 220.526 853.692 220.273 cv
846.818 215.298 li
853.483 205.778 li
853.285 205.564 853.076 205.366 852.855 205.182 cv
846.52 214.231 li
845.386 204.524 li
845.112 204.65 844.842 204.791 844.573 204.945 cv
845.752 215.025 li
837.443 216.042 li
837.399 216.335 837.362 216.626 837.336 216.916 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
846.217 217.937 mo
845.954 217.968 845.694 217.935 845.453 217.831 cv
844.972 217.624 844.634 217.168 844.501 216.549 cv
844.371 215.941 844.455 215.246 844.737 214.591 cv
845.02 213.936 845.468 213.397 845.999 213.075 cv
846.541 212.747 847.104 212.68 847.585 212.888 cv
848.568 213.312 848.889 214.765 848.301 216.128 cv
847.859 217.156 847.023 217.843 846.217 217.937 cv
cp
.278386 .193088 .0924697 0 cmyk
f
846.373 216.597 mo
846.247 216.611 846.123 216.596 846.007 216.546 cv
845.776 216.446 845.613 216.228 845.549 215.93 cv
845.486 215.638 845.527 215.304 845.663 214.99 cv
845.799 214.675 846.014 214.417 846.269 214.262 cv
846.529 214.104 846.8 214.072 847.03 214.172 cv
847.503 214.375 847.656 215.074 847.374 215.728 cv
847.161 216.222 846.76 216.552 846.373 216.597 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
860.342 212.114 mo
865.824 208.204 876.108 200.267 877.043 195.125 cv
878.323 188.083 878.131 183.475 877.555 182.771 cv
876.979 182.066 875.187 180.722 875.187 180.722 cv
875.187 180.722 875.806 173.064 875.25 165.471 cv
875.249 165.472 786.274 223.45 765.438 236.22 cv
744.601 248.991 719.541 264.834 714.068 268.291 cv
713.299 269.923 711.667 275.972 708.402 278.469 cv
705.138 280.677 694.288 281.637 683.63 279.813 cv
666.346 275.684 637.637 255.424 635.429 251.007 cv
633.25 246.649 634.351 237.132 634.381 236.881 cv
631.581 247.014 631.037 258.151 632.765 264.898 cv
634.436 271.427 650.335 282.411 679.79 296.571 cv
686.447 299.772 709.715 300.745 717.652 294.6 cv
717.652 294.6 716.546 267.321 736.344 261.377 cv
742.861 259.42 747.93 265.474 745.945 277.995 cv
751.935 274.67 800.822 246.648 831.688 228.945 cv
831.336 225.582 830.343 209.166 843.053 199.605 cv
857.263 188.916 861.68 203.894 860.592 210.616 cv
860.504 211.155 860.422 211.646 860.342 212.114 cv
cp
.278386 .193088 .0924697 0 cmyk
f
707.731 226.234 mo
677.196 212.024 681.613 196.1 681.613 196.1 cv
681.613 196.1 646.866 221.366 642.246 246.441 cv
647.623 250.815 667.307 264.834 681.391 268.934 cv
681.391 268.934 742.745 240.752 746.522 233.724 cv
746.522 233.724 738.264 240.445 707.731 226.234 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
640.205 250.464 mo
655.304 265.154 681.391 275.396 681.391 275.396 cv
681.391 268.934 li
667.307 264.834 647.623 250.815 642.246 246.441 cv
640.205 250.464 li
cp
.821683 .7084 .379187 .253361 cmyk
f
710.58 276.017 mo
712.438 273.191 713.494 269.509 714.068 268.291 cv
702.929 272.323 681.391 268.934 681.391 268.934 cv
681.391 275.396 li
696.59 279.747 710.57 276.02 710.58 276.017 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
642.246 246.441 mo
642.246 246.441 635.905 240.635 637.344 228.548 cv
636.3 230.87 635.403 233.356 634.653 235.921 cv
634.573 236.29 633.279 242.848 640.205 250.464 cv
642.246 246.441 li
cp
f
632.04 249.888 mo
632.04 249.888 632.004 253.739 635.205 258.998 cv
638.405 264.258 671.759 284.102 680.623 286.662 cv
689.487 289.223 709.587 285.894 710.995 286.662 cv
712.403 287.431 714.324 289.734 713.427 290.503 cv
712.531 291.271 694.713 293.757 680.318 291.688 cv
670.705 287.978 647.252 276.036 636.172 265.41 cv
631.62 259.393 631.819 252.93 632.04 249.888 cv
cp
f
634.14 257.076 mo
634.14 257.076 li
632.642 254.084 632.213 251.746 632.09 250.622 cv
631.994 250.628 li
631.851 253.255 631.919 257.612 634.14 262.115 cv
634.14 257.076 li
cp
.048188 .0296941 .0172122 0 cmyk
f
710.995 286.662 mo
710.165 286.209 702.839 287.18 695.149 287.528 cv
695.149 287.528 li
692.944 292.492 li
703.468 292.483 712.786 291.053 713.427 290.503 cv
714.324 289.734 712.403 287.431 710.995 286.662 cv
cp
f
637.735 261.612 mo
636.172 265.41 li
647.252 276.036 670.705 287.978 680.318 291.688 cv
680.623 286.662 li
672.874 284.424 646.409 268.977 637.735 261.612 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
844.013 195.637 mo
824.937 207.287 828.777 226.875 828.777 226.875 cv
749.025 272.785 li
748.37 265.863 746.042 254.56 734.423 258.881 cv
718.933 264.642 716.628 278.725 715.732 284.229 cv
714.836 289.734 713.427 290.503 713.427 290.503 cv
712.531 291.271 694.713 293.757 680.318 291.688 cv
670.705 287.978 647.252 276.036 636.172 265.41 cv
633.849 262.34 632.768 259.157 632.291 256.369 cv
632.291 256.369 li
631.785 256.081 li
631.815 259.424 632.138 262.452 632.765 264.898 cv
634.436 271.427 650.335 282.411 679.79 296.571 cv
686.447 299.772 709.715 300.745 717.652 294.6 cv
717.652 294.6 716.546 267.321 736.344 261.377 cv
742.861 259.42 747.93 265.474 745.945 277.995 cv
751.935 274.67 800.822 246.648 831.688 228.945 cv
831.336 225.582 830.343 209.166 843.053 199.605 cv
857.263 188.916 861.68 203.894 860.592 210.616 cv
860.504 211.155 860.422 211.646 860.342 212.114 cv
861.038 211.617 861.812 211.055 862.634 210.443 cv
863.181 191.646 850.95 191.399 844.013 195.637 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
749.025 272.785 mo
828.777 226.875 li
828.777 226.875 828.487 225.382 828.464 222.984 cv
748.499 268.934 li
748.499 268.935 li
748.748 270.28 748.912 271.598 749.025 272.785 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
875.388 177.085 mo
875.502 174.146 875.568 169.799 875.25 165.471 cv
875.25 165.471 872.69 169.392 870.577 179.186 cv
871.576 179.435 873.513 178.371 875.388 177.085 cv
cp
.0208438 .691371 .53521 .00747692 cmyk
f
783.397 133.338 mo
783.47 133.333 783.543 133.328 783.615 133.323 cv
783.543 133.328 783.47 133.333 783.397 133.338 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
788.817 133.046 mo
788.817 133.046 li
788.815 133.047 788.813 133.047 788.811 133.047 cv
788.813 133.047 788.815 133.047 788.817 133.046 cv
cp
f
710.099 164.911 mo
709.626 165.316 709.137 165.739 708.642 166.169 cv
710.035 168.432 li
712.005 170.403 li
724.711 182.107 759.541 198.707 765.533 200.886 cv
765.533 200.886 777.881 177.619 830.759 163.231 cv
794.397 136.907 774.495 134.313 774.495 134.313 cv
763.485 136.105 721.621 155.053 710.099 164.911 cv
cp
f
781.546 133.479 mo
781.614 133.473 781.683 133.467 781.752 133.461 cv
781.683 133.467 781.614 133.473 781.546 133.479 cv
cp
f
776.09 134.074 mo
776.183 134.061 776.276 134.048 776.369 134.035 cv
776.276 134.048 776.184 134.061 776.09 134.074 cv
cp
f
779.842 133.631 mo
779.861 133.629 779.881 133.628 779.901 133.626 cv
779.881 133.628 779.861 133.629 779.842 133.631 cv
cp
f
777.926 133.838 mo
778.025 133.827 778.123 133.815 778.221 133.804 cv
778.123 133.815 778.025 133.827 777.926 133.838 cv
cp
f
855.983 161.518 mo
850.222 156.717 824.681 139.114 802.404 132.265 cv
799.076 133.161 785.505 132.521 774.495 134.313 cv
774.495 134.313 794.397 136.907 830.759 163.231 cv
834.859 165.359 852.334 162.478 855.983 161.518 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
817.383 126.888 mo
811.366 129.192 805.734 131.369 802.404 132.265 cv
824.681 139.114 850.222 156.717 855.983 161.518 cv
855.983 161.518 862.526 158.824 869.633 154.694 cv
859.855 145.905 837.409 129.749 817.383 126.888 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
692.56 271.747 mo
692.56 271.747 696.144 272.131 699.857 271.939 cv
699.857 273.54 699.857 275.78 699.857 275.78 cv
699.857 275.78 695.056 274.436 692.56 271.747 cv
cp
f
701.265 271.747 mo
701.265 271.747 706.376 271.338 708.818 271.19 cv
708.818 272.791 708.818 275.031 708.818 275.031 cv
708.818 275.031 703.762 274.436 701.265 271.747 cv
cp
f
681.391 268.934 mo
681.391 275.396 li
684.111 276.175 686.791 276.691 689.36 277.02 cv
681.391 268.934 li
cp
.707393 .60531 .27628 .0864881 cmyk
f
640.205 250.464 mo
642.246 246.441 li
637.313 246.647 li
638.067 247.871 639.011 249.151 640.205 250.464 cv
cp
f
636.485 236.111 mo
636.485 236.111 636.725 238.669 637.637 241.261 cv
635.909 240.205 635.333 239.461 635.333 239.461 cv
636.485 236.111 li
cp
.048188 .0296941 .0172122 0 cmyk
f
722.901 214.232 mo
713.876 212.408 703.794 207.511 695.728 201.078 cv
689.448 196.068 687.134 192.583 686.414 191.281 cv
683.501 194.19 681.613 196.1 681.613 196.1 cv
681.613 196.1 677.196 212.024 707.731 226.234 cv
738.264 240.445 746.522 233.724 746.522 233.724 cv
746.522 233.724 747.029 232.763 747.881 231.173 cv
743.214 221.822 731.52 215.975 722.901 214.232 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
728.639 182.097 mo
724.365 179.538 720.352 176.938 716.98 174.445 cv
686.414 191.281 li
687.134 192.583 689.448 196.068 695.728 201.078 cv
698.483 203.275 701.476 205.287 704.578 207.064 cv
709.967 203.3 720.477 200.05 726.55 202.23 cv
724.95 192.141 726.976 185.542 728.639 182.097 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
725.43 180.134 mo
725.429 180.135 li
725.461 180.154 725.494 180.174 725.525 180.193 cv
725.493 180.174 725.462 180.154 725.43 180.134 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
728.639 182.097 mo
728.639 182.097 728.639 182.097 728.639 182.097 cv
726.976 185.542 724.95 192.141 726.55 202.23 cv
743.257 211.256 li
743.257 211.256 748.443 207.607 752.475 208.375 cv
752.722 204.913 753.202 200.001 753.669 195.521 cv
746.367 191.971 737.026 187.119 728.639 182.097 cv
cp
f
704.582 207.063 mo
710.562 210.49 716.959 213.031 722.901 214.232 cv
725.848 214.828 729.152 215.915 732.414 217.446 cv
743.257 211.256 li
726.55 202.23 li
720.478 200.05 709.971 203.299 704.582 207.063 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
720.323 176.809 mo
719.156 176.014 718.033 175.224 716.98 174.445 cv
686.414 191.281 li
686.864 192.095 687.937 193.762 690.211 196.12 cv
690.211 196.12 694.7 191.716 720.323 176.809 cv
720.323 176.809 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
760.027 209.486 mo
752.55 207.384 li
752.524 207.721 752.497 208.06 752.475 208.375 cv
748.443 207.607 743.257 211.256 743.257 211.256 cv
732.414 217.446 li
732.414 217.446 li
736.789 219.5 741.076 222.368 744.318 226.003 cv
753.669 220.571 li
753.669 220.571 li
755.694 216.933 757.921 213.018 760.027 209.487 cv
760.027 209.486 li
cp
f
732.414 217.446 mo
732.414 217.446 li
736.789 219.5 741.076 222.368 744.318 226.003 cv
753.669 220.571 li
740.213 212.994 li
732.414 217.446 li
cp
.657984 .551446 .269413 .0538033 cmyk
f
753.79 220.354 mo
753.75 220.426 753.709 220.5 753.669 220.571 cv
753.669 220.571 li
744.318 226.003 li
744.269 225.948 744.214 225.897 744.166 225.843 cv
745.64 227.47 746.917 229.242 747.881 231.173 cv
747.857 231.217 747.837 231.256 747.814 231.299 cv
749.125 228.85 751.313 224.8 753.79 220.354 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
755.122 217.977 mo
755.18 217.875 755.236 217.774 755.294 217.672 cv
755.236 217.774 755.18 217.875 755.122 217.977 cv
cp
f
760.027 209.486 mo
760.027 209.487 li
759.98 209.566 759.931 209.65 759.884 209.73 cv
761.985 206.198 763.977 203.027 765.533 200.886 cv
763.73 200.23 759.31 198.265 753.669 195.522 cv
753.202 200.002 752.722 204.913 752.475 208.375 cv
752.497 208.06 752.524 207.721 752.55 207.384 cv
760.027 209.486 li
cp
f
770.77 223.032 mo
761.417 218.366 li
757.469 226.173 755.657 232.286 755.657 232.286 cv
770.77 223.032 li
cp
f
786.465 196.1 mo
785.677 189.78 li
782.878 191.817 780.246 193.944 777.823 196.1 cv
770.401 202.704 765.021 211.24 761.417 218.366 cv
770.77 223.032 li
770.77 223.032 li
792.89 209.486 li
790.439 198.663 li
789.441 197.655 786.465 196.1 786.465 196.1 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
783.779 191.197 mo
784.402 190.722 785.032 190.249 785.673 189.783 cv
785.032 190.25 784.402 190.722 783.779 191.197 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
786.465 196.1 mo
786.465 196.1 789.441 197.655 790.439 198.663 cv
790.719 199.902 li
788.048 188.109 li
788.588 187.738 789.142 187.377 789.693 187.014 cv
789.691 187.004 li
788.32 187.907 786.979 188.833 785.677 189.78 cv
786.465 196.1 li
cp
f
791.542 185.812 mo
796.323 207.384 li
796.323 207.384 li
827.288 188.422 li
818.783 183.026 li
818.783 174.449 li
809.249 176.354 799.867 180.578 791.542 185.812 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
817.899 174.639 mo
818.051 174.606 818.202 174.572 818.354 174.541 cv
818.202 174.572 818.051 174.606 817.899 174.639 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
818.783 174.457 mo
818.783 183.026 li
827.288 188.422 li
837.356 182.258 li
837.356 182.258 838.892 176.497 839.084 174.384 cv
832.461 172.906 825.584 173.095 818.783 174.457 cv
cp
f
726.226 190.756 mo
726.226 190.755 li
726.226 190.755 713.299 199.925 708.818 196.1 cv
704.345 192.28 693.844 199.467 693.811 199.49 cv
694.407 200.001 695.04 200.529 695.728 201.078 cv
698.483 203.275 701.476 205.287 704.578 207.064 cv
709.967 203.3 720.477 200.05 726.55 202.23 cv
725.834 197.715 725.847 193.904 726.226 190.756 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
821.186 174.029 mo
820.384 174.156 819.583 174.296 818.783 174.457 cv
827.288 188.422 li
829.299 187.191 li
821.186 174.029 li
cp
.858457 .739651 .439277 .415595 cmyk
f
721.365 184.819 mo
721.365 184.819 717.332 186.74 717.332 189.78 cv
717.332 192.82 721.365 189.171 721.365 189.171 cv
721.365 184.819 li
cp
.57882 .474006 .199954 .0242008 cmyk
f
710.035 168.432 mo
701.426 176.286 688.783 188.895 683.775 193.924 cv
686.414 195.522 li
711.9 170.306 li
711.21 169.666 710.583 169.039 710.035 168.432 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
792.89 209.486 mo
798.591 205.995 li
793.152 184.819 li
791.405 185.873 789.702 186.974 788.048 188.109 cv
792.89 209.486 li
cp
.858457 .739651 .439277 .415595 cmyk
f
737.418 220.207 mo
738.182 220.699 738.928 221.218 739.655 221.763 cv
744.984 219.991 749.073 224.396 750.526 226.278 cv
750.932 225.533 751.359 224.754 751.804 223.944 cv
747.606 217.193 740.629 218.366 737.418 220.207 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
729.269 186.124 mo
729.269 186.124 736.329 188.228 742.909 193.993 cv
743.519 195.213 742.544 196.17 741.935 196.29 cv
741.325 196.409 730.253 190.19 729.269 188.875 cv
728.286 187.559 728.586 185.896 729.269 186.124 cv
cp
.278386 .193088 .0924697 0 cmyk
f
789.633 223.459 mo
791.734 222.335 794.037 221.072 796.498 219.627 cv
797.819 218.852 797.891 220.779 796.931 221.644 cv
795.97 222.508 791.169 225.292 790.017 225.581 cv
788.864 225.868 788.77 223.921 789.633 223.459 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
830.437 197.237 mo
832.478 196.007 834.714 194.629 837.098 193.061 cv
838.378 192.219 838.547 194.141 837.632 195.053 cv
836.717 195.965 832.064 198.99 830.928 199.336 cv
829.791 199.682 829.598 197.743 830.437 197.237 cv
cp
f
759.009 228.438 mo
759.009 228.438 758.674 221.569 763.865 221.994 cv
769.057 222.417 772.994 227.506 773.281 228.851 cv
773.569 230.195 771.842 231.443 769.825 231.54 cv
767.809 231.635 761.25 230.617 759.009 228.438 cv
cp
.278386 .193088 .0924697 0 cmyk
f
759.272 225.848 mo
758.954 227.222 759.009 228.438 759.009 228.438 cv
761.25 230.617 767.809 231.635 769.825 231.54 cv
771.842 231.443 773.569 230.195 773.281 228.851 cv
768.056 229.711 762.328 227.38 759.272 225.848 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
324.456 182.615 mo
304.023 191.003 305.313 216.383 305.313 216.383 cv
305.313 216.383 304.139 217.049 302.053 218.232 cv
306.965 220.404 315.051 222.11 315.051 222.11 cv
335.276 199.479 li
336.859 199.176 li
339.296 188.279 333.489 178.959 324.456 182.615 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
331.681 210.802 mo
336.867 201.819 336.455 191.873 330.761 188.585 cv
325.067 185.298 316.247 189.914 311.061 198.896 cv
305.875 207.879 306.287 217.826 311.981 221.113 cv
317.675 224.401 326.495 219.784 331.681 210.802 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
184.652 263.486 mo
169.381 274.886 170.887 292.952 170.887 292.952 cv
170.887 292.952 168.512 293.716 165.361 294.656 cv
171.881 298.188 179.904 298.881 179.904 298.881 cv
201.089 275.316 li
202.504 275.316 li
204.655 267.788 199.923 252.087 184.652 263.486 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
328.48 208.954 mo
332.056 202.76 331.771 195.902 327.845 193.635 cv
323.919 191.369 317.838 194.552 314.262 200.745 cv
310.686 206.938 310.97 213.797 314.896 216.063 cv
318.823 218.33 324.904 215.147 328.48 208.954 cv
cp
.278386 .193088 .0924697 0 cmyk
f
197.455 287.729 mo
202.641 278.747 202.229 268.8 196.535 265.512 cv
190.841 262.225 182.021 266.841 176.834 275.824 cv
171.648 284.807 172.061 294.753 177.755 298.04 cv
183.449 301.328 192.269 296.712 197.455 287.729 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
194.254 285.881 mo
197.83 279.688 197.545 272.829 193.619 270.563 cv
189.693 268.295 183.612 271.479 180.036 277.672 cv
176.46 283.865 176.744 290.724 180.67 292.99 cv
184.597 295.257 190.678 292.074 194.254 285.881 cv
cp
.278386 .193088 .0924697 0 cmyk
f
332.844 159.171 mo
329.403 161.107 213.903 228.212 211.322 229.288 cv
208.741 230.363 207.405 226.367 211.322 218.319 cv
215.701 209.323 223.582 191.864 238.638 179.174 cv
253.694 166.484 327.467 125.403 332.414 122.822 cv
337.361 120.241 336.931 125.833 337.361 128.845 cv
337.791 131.855 339.512 148.417 339.512 152.073 cv
339.512 155.73 336.285 157.235 332.844 159.171 cv
cp
195.406 224.126 mo
189.599 226.707 168.736 220.47 152.39 210.146 cv
136.043 199.822 127.655 191.801 129.376 187.315 cv
131.097 182.83 150.239 152.719 152.605 149.922 cv
154.971 147.126 156.29 148.361 157.552 149.922 cv
160.445 153.502 175.404 171.792 215.624 182.903 cv
219.065 183.906 220.141 186.917 218.205 189.928 cv
216.27 192.939 201.213 221.545 195.406 224.126 cv
cp
356.933 176.234 mo
356.933 169.639 353.492 113.144 349.19 107.121 cv
344.889 101.099 287.103 65.252 277.353 69.5532 cv
267.603 73.855 167.23 130.924 159.488 137.233 cv
151.745 143.542 122.278 190.143 122.278 190.143 cv
114.965 196.596 97.5439 211.006 92.1665 217.458 cv
86.7896 223.911 87.4351 231.654 87.4351 231.654 cv
87.4351 231.654 84.4238 235.095 83.9937 238.751 cv
83.5635 242.408 83.5635 256.604 85.7144 260.905 cv
87.8652 265.207 97.7588 274.24 110.879 280.908 cv
110.879 280.908 136.904 298.76 159.272 296.394 cv
164.865 294.889 170.887 292.952 170.887 292.952 cv
170.887 292.952 169.381 274.886 184.652 263.486 cv
199.923 252.087 204.655 267.788 202.504 275.316 cv
211.968 269.293 305.313 216.383 305.313 216.383 cv
305.313 216.383 304.023 191.003 324.456 182.615 cv
333.489 178.959 339.296 188.279 336.859 199.176 cv
342.021 196.022 359.228 185.841 359.228 185.841 cv
359.228 179.246 li
359.228 179.246 359.801 177.381 356.933 176.234 cv
cp
.120577 .0731517 .0434577 0 cmyk
f
332.844 159.171 mo
329.403 161.107 213.903 228.212 211.322 229.288 cv
208.741 230.363 207.405 226.367 211.322 218.319 cv
215.701 209.323 223.582 191.864 238.638 179.174 cv
253.694 166.484 327.467 125.403 332.414 122.822 cv
337.361 120.241 336.931 125.833 337.361 128.845 cv
337.791 131.855 339.512 148.417 339.512 152.073 cv
339.512 155.73 336.285 157.235 332.844 159.171 cv
cp
359.228 185.841 mo
359.228 179.246 li
359.228 179.246 359.801 177.381 356.933 176.234 cv
356.933 170.63 354.449 129.015 351.064 112.928 cv
351.064 112.928 li
351.064 112.928 347.47 110.132 342.243 112.928 cv
337.017 115.725 245.951 166.484 231.97 180.249 cv
217.99 194.015 206.161 219.179 201.429 225.632 cv
196.697 232.084 170.242 254.453 170.242 254.453 cv
170.242 254.453 170.026 257.034 166.155 263.917 cv
162.284 270.799 152.39 271.014 140.345 270.584 cv
128.301 270.154 113.89 263.917 100.985 252.947 cv
88.0801 241.978 87.4351 231.654 87.4351 231.654 cv
87.4351 231.654 84.4238 235.095 83.9937 238.751 cv
83.5635 242.408 83.5635 256.604 85.7144 260.905 cv
87.8652 265.207 97.7588 274.24 110.879 280.908 cv
110.879 280.908 136.904 298.76 159.272 296.394 cv
164.865 294.889 170.887 292.952 170.887 292.952 cv
170.887 292.952 169.381 274.886 184.652 263.486 cv
199.923 252.087 204.655 267.788 202.504 275.316 cv
211.968 269.293 305.313 216.383 305.313 216.383 cv
305.313 216.383 304.023 191.003 324.456 182.615 cv
333.489 178.959 339.296 188.279 336.859 199.176 cv
342.021 196.022 359.228 185.841 359.228 185.841 cv
cp
.278386 .193088 .0924697 0 cmyk
f
85.7144 260.905 mo
87.8652 265.207 97.7588 274.24 110.879 280.908 cv
110.879 280.908 136.904 298.76 159.272 296.394 cv
164.865 294.889 170.887 292.952 170.887 292.952 cv
170.887 292.952 170.037 282.715 176.129 272.79 cv
173.973 272.17 170.439 271.378 168.306 272.089 cv
165.08 273.165 158.627 277.896 141.206 277.466 cv
123.784 277.036 103.351 263.056 93.8872 253.808 cv
84.4238 244.559 83.9937 238.751 83.9937 238.751 cv
83.5635 242.408 83.5635 256.604 85.7144 260.905 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
356.933 176.234 mo
356.933 173.766 356.451 164.305 355.622 153.117 cv
333.147 166.157 213.879 235.337 195.191 245.85 cv
174.543 257.464 168.306 272.089 168.306 272.089 cv
170.439 271.378 173.973 272.17 176.129 272.79 cv
178.13 269.53 180.877 266.304 184.652 263.486 cv
199.923 252.087 204.655 267.788 202.504 275.316 cv
211.968 269.293 305.313 216.383 305.313 216.383 cv
305.313 216.383 304.023 191.003 324.456 182.615 cv
333.489 178.959 339.296 188.279 336.859 199.176 cv
342.021 196.022 359.228 185.841 359.228 185.841 cv
359.228 179.246 li
359.228 179.246 359.801 177.381 356.933 176.234 cv
cp
.390814 .279911 .131106 .00198367 cmyk
f
202.619 267.887 mo
203.167 270.489 203.103 273.219 202.504 275.316 cv
211.968 269.293 305.313 216.383 305.313 216.383 cv
305.313 216.383 305.152 213.108 305.883 208.53 cv
202.619 267.887 li
cp
.821683 .7084 .379187 .253361 cmyk
f
165.361 294.656 mo
168.512 293.716 170.887 292.952 170.887 292.952 cv
170.887 292.952 170.037 282.715 176.129 272.79 cv
173.973 272.17 170.439 271.378 168.306 272.089 cv
168.306 272.089 164.64 281.734 165.361 294.656 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
141.206 277.466 mo
123.784 277.036 103.351 263.056 93.8872 253.808 cv
84.4238 244.559 83.9937 238.751 83.9937 238.751 cv
83.8457 240.011 83.7485 242.52 83.7725 245.444 cv
88.2412 253.889 95.1987 260.369 107.438 268.648 cv
122.063 278.542 136.689 283.059 150.669 283.232 cv
164.649 283.406 168.306 272.089 168.306 272.089 cv
165.08 273.165 158.627 277.896 141.206 277.466 cv
cp
f
129.937 279.784 mo
122.496 277.399 114.967 273.742 107.438 268.648 cv
104.729 266.815 102.292 265.074 100.07 263.376 cv
100.063 263.374 100.056 263.371 100.05 263.368 cv
95.4736 261.536 91.5317 267.635 91.5049 267.677 cv
96.082 271.895 102.874 276.84 110.879 280.908 cv
110.879 280.908 120.164 287.273 132.406 291.898 cv
132.406 291.867 132.598 283.053 129.949 279.797 cv
129.946 279.793 129.94 279.788 129.937 279.784 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
195.406 224.126 mo
189.599 226.707 168.736 220.47 152.39 210.146 cv
136.043 199.822 127.655 191.801 129.376 187.315 cv
125.361 192.087 100.125 210.074 97.2568 217.53 cv
94.3892 224.986 98.9775 235.884 115.324 245.348 cv
131.67 254.811 150.311 257.679 162.068 252.517 cv
173.827 247.355 195.406 224.126 195.406 224.126 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
140.345 270.584 mo
152.39 271.014 162.284 270.799 166.155 263.917 cv
170.026 257.034 170.242 254.453 170.242 254.453 cv
170.242 254.453 160.061 262.586 144.719 260.993 cv
140.863 260.979 135.181 266.475 133.74 269.805 cv
136 270.24 138.211 270.508 140.345 270.584 cv
cp
f
94.5327 231.726 mo
92.9556 226.707 91.3784 220.535 94.5322 214.875 cv
93.603 215.828 92.7988 216.7 92.1665 217.458 cv
86.7896 223.911 87.4351 231.654 87.4351 231.654 cv
87.4351 231.654 87.9258 239.411 96.458 248.621 cv
96.457 248.592 96.1079 236.738 94.5327 231.726 cv
cp
f
87.4351 231.654 mo
87.4351 231.654 87.4136 231.679 87.3828 231.715 cv
87.4126 231.68 87.4351 231.654 87.4351 231.654 cv
cp
f
96.458 248.621 mo
95.6948 247.797 95.0171 246.991 94.3774 246.195 cv
94.3809 246.22 li
96.1162 248.375 98.2778 250.646 100.985 252.947 cv
111.604 261.973 123.239 267.786 133.74 269.805 cv
135.181 266.475 140.863 260.979 144.719 260.993 cv
144.719 260.993 129.52 259.543 113.316 249.506 cv
97.2485 239.552 93.7886 229.167 93.7319 228.994 cv
93.9824 229.933 94.2568 230.848 94.5327 231.726 cv
96.1079 236.738 96.457 248.592 96.458 248.621 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
224.442 175.518 mo
233.046 167.344 238.208 163.903 252.833 155.515 cv
267.459 147.126 327.682 112.928 334.35 109.057 cv
341.017 105.186 346.609 105.186 349.19 107.121 cv
344.889 101.099 287.103 65.252 277.353 69.5532 cv
267.603 73.855 167.23 130.924 159.488 137.233 cv
159.488 137.233 171.532 158.741 224.442 175.518 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
207.666 251.657 mo
300.797 198.101 li
300.797 201.542 li
207.666 255.385 li
207.666 251.657 li
cp
.707393 .60531 .27628 .0864881 cmyk
f
337.28 191.974 mo
337.542 194.194 337.426 196.641 336.859 199.176 cv
342.021 196.022 359.228 185.841 359.228 185.841 cv
359.228 179.246 li
337.28 191.974 li
337.28 191.974 li
cp
.821683 .7084 .379187 .253361 cmyk
f
356.933 176.234 mo
356.933 178.242 li
336.859 189.686 li
336.858 189.687 li
337.047 190.415 337.186 191.181 337.28 191.973 cv
359.228 179.246 li
359.228 179.246 359.801 177.381 356.933 176.234 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
166.155 263.917 mo
170.026 257.034 170.242 254.453 170.242 254.453 cv
166.37 261.55 156.046 265.207 148.303 264.777 cv
140.56 264.347 133.74 269.805 133.74 269.805 cv
136 270.24 138.211 270.508 140.345 270.584 cv
152.39 271.014 162.284 270.799 166.155 263.917 cv
cp
f
87.4351 231.654 mo
87.4351 231.654 87.9258 239.411 96.458 248.621 cv
96.458 248.621 91.7021 234.853 91.0742 231.748 cv
90.4463 228.643 88.7251 223.69 94.5322 214.875 cv
93.603 215.828 92.7988 216.7 92.1665 217.458 cv
86.7896 223.911 87.4351 231.654 87.4351 231.654 cv
cp
f
113.688 254.667 mo
125.413 261.17 135.421 263.838 137.98 264.454 cv
138.46 264.024 138.957 263.617 139.465 263.24 cv
139.344 263.083 139.177 262.96 138.968 262.917 cv
138.858 262.894 127.829 260.543 114.522 253.163 cv
101.78 246.095 96.4888 237.736 96.437 237.653 cv
96.2549 237.36 95.9243 237.219 95.6021 237.258 cv
95.7124 238.119 95.8096 239 95.8945 239.872 cv
97.9126 242.569 103.398 248.96 113.688 254.667 cv
cp
f
109.539 256.673 mo
118.241 262.508 129.545 266.496 134.962 267.748 cv
135.297 267.289 135.677 266.82 136.089 266.353 cv
135.984 266.264 135.866 266.191 135.723 266.159 cv
130.593 265.039 119.208 261.085 110.498 255.244 cv
101.59 249.271 96.9448 243.504 96.8989 243.446 cv
96.7158 243.217 96.4399 243.122 96.168 243.14 cv
96.2261 243.956 96.2734 244.721 96.312 245.408 cv
97.9717 247.282 102.365 251.861 109.539 256.673 cv
cp
f
195.406 224.126 mo
197.144 223.354 199.709 220.246 202.503 216.198 cv
190.242 208.916 138.147 180.249 138.147 180.249 cv
135.4 181.341 132.902 182.69 130.889 184.325 cv
130.137 185.682 129.603 186.725 129.376 187.315 cv
127.655 191.801 136.043 199.822 152.39 210.146 cv
168.736 220.47 189.599 226.707 195.406 224.126 cv
cp
f
130.889 184.325 mo
132.902 182.69 135.4 181.341 138.147 180.249 cv
140.681 174.657 157.552 149.922 157.552 149.922 cv
156.29 148.361 154.971 147.126 152.605 149.922 cv
150.473 152.442 134.721 177.138 130.369 185.278 cv
130.528 184.981 130.702 184.663 130.889 184.325 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
129.376 187.315 mo
129.432 187.17 129.507 186.996 129.599 186.797 cv
129.508 186.995 129.432 187.17 129.376 187.315 cv
cp
f
129.648 186.697 mo
129.731 186.519 129.823 186.33 129.931 186.116 cv
129.823 186.329 129.731 186.52 129.648 186.697 cv
cp
f
129.966 186.048 mo
130.087 185.811 130.219 185.559 130.367 185.282 cv
130.22 185.558 130.086 185.812 129.966 186.048 cv
cp
f
183.577 185.665 mo
183.577 170.332 li
178.025 167.338 173.502 164.35 169.872 161.602 cv
138.147 180.249 li
138.147 180.249 146.743 184.979 157.772 191.084 cv
171.917 184.561 183.577 185.665 183.577 185.665 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
183.577 205.436 mo
192.826 198.36 209.602 198.101 209.602 198.101 cv
183.577 185.665 li
183.577 185.665 171.917 184.561 157.772 191.084 cv
165.875 195.569 175.29 200.796 183.577 205.436 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
209.602 181.121 mo
199.115 177.834 190.534 174.083 183.577 170.332 cv
183.577 170.332 li
183.577 185.665 li
209.602 198.101 li
209.602 181.121 li
cp
.707393 .60531 .27628 .0864881 cmyk
f
215.624 182.903 mo
213.544 182.329 211.548 181.73 209.602 181.121 cv
209.602 198.101 li
209.602 198.101 192.826 198.36 183.577 205.436 cv
193.146 210.819 li
209.602 204.934 li
213.772 197.881 217.33 191.289 218.205 189.928 cv
220.141 186.917 219.065 183.906 215.624 182.903 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
193.146 210.819 mo
193.146 210.819 li
197.127 213.072 200.4 214.95 202.502 216.198 cv
204.826 212.832 207.306 208.817 209.602 204.935 cv
209.602 204.934 li
193.146 210.819 li
cp
.821683 .7084 .379187 .253361 cmyk
f
157.772 191.084 mo
171.917 184.561 183.577 185.665 183.577 185.665 cv
183.577 172.789 li
182.146 173.66 165.613 183.713 163.144 184.216 cv
160.563 184.742 159.272 178.959 156.907 180.249 cv
154.541 181.54 147.97 185.665 147.97 185.665 cv
147.97 185.665 li
150.836 187.248 154.172 189.092 157.772 191.084 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
142.963 182.903 mo
174.2 164.687 li
172.636 163.634 171.193 162.602 169.872 161.602 cv
138.147 180.249 li
138.147 180.249 139.952 181.243 142.963 182.903 cv
142.963 182.903 li
cp
f
149.379 204.148 mo
128.946 191.697 130.889 184.325 130.889 184.325 cv
130.889 184.325 li
130.137 185.682 129.603 186.725 129.376 187.315 cv
127.655 191.801 136.043 199.822 152.39 210.146 cv
168.736 220.47 189.599 226.707 195.406 224.126 cv
196.357 223.703 197.56 222.573 198.909 220.98 cv
186.066 222.136 169.812 216.598 149.379 204.148 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
211.322 218.319 mo
207.405 226.367 208.741 230.363 211.322 229.288 cv
212.125 228.954 223.855 222.229 239.736 213.067 cv
233.435 209.21 219.569 202.486 219.556 202.479 cv
215.906 208.655 213.268 214.323 211.322 218.319 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
243.619 175.402 mo
241.596 176.833 239.905 178.106 238.638 179.174 cv
230.271 186.227 224.122 194.751 219.556 202.479 cv
219.556 202.479 li
219.569 202.486 233.435 209.21 239.736 213.067 cv
238.622 213.71 237.535 214.336 236.464 214.954 cv
242.386 211.54 248.999 207.72 255.919 203.718 cv
256.679 199.194 258.682 187.075 258.855 184.104 cv
255.345 180.9 247.458 177.134 243.619 175.402 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
252.69 188.319 mo
251.265 191.688 249.338 202.905 248.509 208.001 cv
250.927 206.605 253.402 205.174 255.919 203.718 cv
256.679 199.194 258.682 187.075 258.855 184.104 cv
258.855 184.104 254.554 183.915 252.69 188.319 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
287.772 185.278 mo
255.508 167.537 li
250.89 170.459 246.83 173.132 243.619 175.402 cv
243.619 175.402 li
247.458 177.134 255.345 180.9 258.855 184.104 cv
258.682 187.075 256.679 199.194 255.919 203.718 cv
266.305 197.713 277.365 191.309 287.772 185.278 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
288.604 147.622 mo
277.003 154.375 265.073 161.484 255.508 167.537 cv
255.508 167.537 li
287.772 185.278 li
287.772 185.278 li
287.772 185.278 299.291 155.667 300.797 153.117 cv
298.169 151.919 293.168 149.67 288.604 147.622 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
300.797 153.117 mo
299.291 155.667 287.772 185.278 287.772 185.278 cv
305.883 174.783 li
305.883 174.783 309.185 158.167 310.045 155.156 cv
300.797 153.117 li
cp
.821683 .7084 .379187 .253361 cmyk
f
300.797 153.117 mo
310.045 155.156 li
290.238 146.672 li
289.694 146.988 289.15 147.305 288.604 147.622 cv
300.797 153.117 li
cp
f
339.512 152.073 mo
339.512 150.401 339.151 146.028 338.72 141.488 cv
318.04 130.792 li
310.388 135.093 300.495 140.715 290.238 146.672 cv
310.045 155.156 li
309.196 158.743 li
321.646 165.647 li
328.071 161.924 332.232 159.515 332.844 159.171 cv
336.285 157.235 339.512 155.73 339.512 152.073 cv
cp
f
309.196 158.743 mo
309.196 158.743 306.31 171.18 305.883 174.783 cv
309.185 172.937 321.646 165.647 321.646 165.647 cv
309.196 158.743 li
cp
.858457 .739651 .439277 .415595 cmyk
f
318.04 130.792 mo
338.72 141.488 li
338.72 141.488 li
338.55 139.709 338.371 137.908 338.197 136.229 cv
322.458 128.316 li
321.089 129.08 319.614 129.907 318.04 130.792 cv
cp
f
258.06 165.933 mo
262.471 199.929 li
265.19 198.355 267.934 196.767 270.684 195.176 cv
264.25 162.106 li
262.114 163.413 260.047 164.69 258.06 165.933 cv
cp
f
300.797 140.581 mo
305.883 174.783 li
305.883 174.783 li
308.662 173.172 311.294 171.646 313.759 170.217 cv
307.281 136.878 li
305.186 138.07 303.02 139.307 300.797 140.581 cv
cp
f
180.591 203.766 mo
182.08 201.548 185.033 199.167 189.104 200.467 cv
195.406 202.479 196.049 209.187 196.235 212.573 cv
197.434 213.256 198.534 213.887 199.526 214.46 cv
199.99 210.529 198.627 200.944 189.842 198.101 cv
183.254 195.97 179.592 200.74 178.604 202.656 cv
179.271 203.028 179.934 203.398 180.591 203.766 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
311.874 179.927 mo
311.874 182.903 li
341.663 165.647 li
341.663 162.72 li
311.874 179.927 li
cp
.707393 .60531 .27628 .0864881 cmyk
f
211.322 218.319 mo
214.764 219.717 li
214.764 219.717 214.417 213.985 219.161 214.001 cv
223.905 214.017 225.829 219.03 226.265 220.825 cv
226.701 222.621 227.346 227.675 223.367 228.535 cv
219.388 229.396 213.258 225.829 211.86 225.031 cv
210.462 224.233 210.57 220.254 211.322 218.319 cv
cp
f
225.195 214.524 mo
222.184 212.88 219.161 214.001 219.161 214.001 cv
223.905 214.017 225.829 219.03 226.265 220.825 cv
226.701 222.621 227.346 227.675 223.367 228.535 cv
231.97 226.814 228.207 216.168 225.195 214.524 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
133.506 172.789 mo
133.506 172.789 132.531 162.469 128.372 160.749 cv
124.214 159.028 123.784 161.752 123.784 163.616 cv
123.784 165.48 123.927 170.786 125.648 173.367 cv
127.369 175.948 130.369 177.576 130.369 177.576 cv
133.506 172.789 li
cp
.707393 .60531 .27628 .0864881 cmyk
f
128.373 160.749 mo
132.53 162.469 133.506 172.786 133.506 172.789 cv
134.428 171.39 135.379 169.952 136.351 168.493 cv
135.859 165.672 134.512 162.132 132.674 160.662 cv
128.946 157.707 125.187 160.375 125.187 160.375 cv
125.871 160.091 126.878 160.13 128.373 160.749 cv
cp
.821683 .7084 .379187 .253361 cmyk
f
180.919 290.639 mo
180.919 290.639 183.039 286.393 182.609 283.812 cv
181.749 283.273 178.984 285.8 178.984 285.8 cv
178.984 285.8 178.984 288.596 180.919 290.639 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
180.404 280.639 mo
180.404 280.639 181.785 276.678 184.079 274.957 cv
184.407 276.104 184.643 278.112 184.581 279.187 cv
184.505 280.493 180.404 280.639 180.404 280.639 cv
cp
f
188.201 271.809 mo
188.201 271.809 191.266 271.122 193.202 272.627 cv
192.396 273.81 189.976 276.068 189.008 276.391 cv
188.04 276.714 188.201 271.809 188.201 271.809 cv
cp
f
187.642 282.063 mo
188.184 281.123 188.141 280.083 187.545 279.739 cv
186.95 279.395 186.027 279.878 185.484 280.818 cv
184.942 281.758 184.985 282.798 185.581 283.142 cv
186.176 283.486 187.099 283.003 187.642 282.063 cv
cp
f
185.405 291.77 mo
185.405 291.77 184.975 284.779 186.266 284.672 cv
187.556 284.564 190.245 288.06 190.245 288.06 cv
190.245 288.06 188.954 290.802 185.405 291.77 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
189.545 279.94 mo
189.702 278.843 194.224 277.198 194.654 277.198 cv
195.084 277.198 194.761 281.041 193.202 283.501 cv
192.234 283.489 189.438 280.693 189.545 279.94 cv
cp
f
188.788 286.377 mo
187.944 285.499 186.924 284.617 186.266 284.672 cv
185.607 284.727 185.397 286.57 185.349 288.365 cv
186.497 288.114 187.701 287.421 188.788 286.377 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
189.545 279.94 mo
189.49 280.326 190.198 281.247 191.032 282.057 cv
191.032 282.057 li
191.032 282.057 191.953 280.991 192.497 277.938 cv
191.138 278.514 189.635 279.315 189.545 279.94 cv
cp
f
193.202 272.627 mo
191.266 271.122 188.201 271.809 188.201 271.809 cv
190.146 272.422 192.171 273.825 192.183 273.833 cv
192.604 273.391 192.972 272.964 193.202 272.627 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
315.146 213.712 mo
315.146 213.712 317.265 209.465 316.835 206.884 cv
315.975 206.347 313.21 208.873 313.21 208.873 cv
313.21 208.873 313.21 211.669 315.146 213.712 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
314.63 203.712 mo
314.63 203.712 316.011 199.751 318.305 198.03 cv
318.633 199.176 318.869 201.185 318.807 202.26 cv
318.731 203.566 314.63 203.712 314.63 203.712 cv
cp
f
322.427 194.882 mo
322.427 194.882 325.492 194.194 327.428 195.7 cv
326.621 196.883 324.202 199.142 323.234 199.464 cv
322.266 199.787 322.427 194.882 322.427 194.882 cv
cp
f
321.868 205.136 mo
322.41 204.196 322.367 203.156 321.771 202.812 cv
321.176 202.468 320.253 202.951 319.71 203.891 cv
319.168 204.831 319.211 205.871 319.807 206.215 cv
320.402 206.559 321.325 206.076 321.868 205.136 cv
cp
f
319.631 214.842 mo
319.631 214.842 319.201 207.852 320.492 207.745 cv
321.782 207.637 324.471 211.132 324.471 211.132 cv
324.471 211.132 323.18 213.875 319.631 214.842 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
323.771 203.013 mo
323.928 201.916 328.45 200.271 328.88 200.271 cv
329.31 200.271 328.987 204.113 327.428 206.574 cv
326.46 206.562 323.664 203.766 323.771 203.013 cv
cp
f
323.014 209.45 mo
322.17 208.572 321.15 207.69 320.492 207.745 cv
319.833 207.799 319.624 209.643 319.575 211.438 cv
320.723 211.187 321.927 210.494 323.014 209.45 cv
cp
.858457 .739651 .439277 .415595 cmyk
f
323.771 203.013 mo
323.716 203.398 324.424 204.32 325.258 205.129 cv
325.258 205.129 li
325.258 205.129 326.179 204.064 326.723 201.012 cv
325.364 201.586 323.861 202.388 323.771 203.013 cv
cp
f
327.428 195.7 mo
325.492 194.194 322.427 194.882 322.427 194.882 cv
324.372 195.495 326.397 196.897 326.409 196.906 cv
326.831 196.464 327.198 196.038 327.428 195.7 cv
cp
.707393 .60531 .27628 .0864881 cmyk
f
337.361 128.845 mo
336.931 125.833 337.361 120.241 332.414 122.822 cv
331.44 123.33 327.792 125.334 322.458 128.316 cv
338.197 136.229 li
337.844 132.825 337.517 129.939 337.361 128.845 cv
cp
.657984 .551446 .269413 .0538033 cmyk
f
202.847 245.05 mo
205.903 243.282 li
206.207 243.106 206.394 242.782 206.394 242.431 cv
206.394 241.155 li
206.394 240.4 205.577 239.927 204.922 240.302 cv
201.864 242.054 li
201.558 242.229 201.369 242.555 201.37 242.908 cv
201.372 244.2 li
201.373 244.957 202.192 245.429 202.847 245.05 cv
cp
.0208438 .691371 .53521 .00747692 cmyk
f
347.557 111.723 mo
349.043 121.718 352.107 155.156 352.107 155.156 cv
355.622 153.117 li
354.569 138.914 352.958 121.927 351.064 112.928 cv
351.064 112.928 349.747 111.915 347.557 111.723 cv
cp
f
264.277 206.154 mo
264.277 206.154 264.276 207.547 263.18 208.331 cv
262.171 209.051 258.945 211.148 258.085 211.435 cv
257.719 211.557 255.502 211.195 255.502 211.195 cv
255.502 212.929 li
255.502 212.929 257.478 213.578 258.625 213.164 cv
259.771 212.75 263.999 210.225 264.466 209.571 cv
264.747 209.176 264.642 207.669 264.277 206.154 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
258.085 211.435 mo
258.945 211.148 262.171 209.051 263.18 208.331 cv
263.847 207.854 264.106 207.155 264.208 206.678 cv
264.277 206.154 li
255.502 211.195 li
255.502 211.195 257.719 211.557 258.085 211.435 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
282.366 195.905 mo
282.366 195.905 282.364 197.299 281.268 198.082 cv
280.26 198.802 277.034 200.899 276.173 201.186 cv
275.807 201.308 273.591 200.946 273.591 200.946 cv
273.591 202.681 li
273.591 202.681 275.565 203.33 276.713 202.916 cv
277.86 202.501 282.087 199.976 282.554 199.322 cv
282.835 198.928 282.73 197.42 282.366 195.905 cv
cp
.57882 .474006 .199954 .0242008 cmyk
f
276.173 201.186 mo
277.034 200.899 280.26 198.802 281.268 198.082 cv
281.935 197.605 282.194 196.906 282.297 196.429 cv
282.366 195.905 li
273.591 200.946 li
273.591 200.946 275.807 201.308 276.173 201.186 cv
cp
.048188 .0296941 .0172122 0 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 21.1.0%%For: (Roman) ()%%Title: (Transport isometric_01.eps)%%CreationDate: 16.04.2019 21:55%%Canvassize: 16383%AI9_DataStream%Gb"-6q*G`to0<00!;@$p;&"i"07ZYq76qIr[o!Q*"-J\`/C+%gn[nM(5#nME:=:<Q\<-3>1I-!WXL2-#3i<c1Z]/k9;QZR&)um(;%<_^J'XkKqIEXXV/Wd>,3MpJF#6$m(CI&#K1%-jCs<hgYAgUTeUd;#k]Eo0O_e5#7eSs3.AJm,;H:F]R!PqNmg1L'QmZ!%NmNRh[?%PB,(ib04@5qRTC<W&[%7nQ*>.lW/U#C)g3]0'R?p&):[oHk:B\1d)aSVoe"ChS"_?A1aXS?-B]O%j*XSd4P4Q=J"p5oYE=@hpG@q%+81>nC:hqEFfLGta8=@`B$6>4*!FNLPg`/[#lV5#%o`;^[+)4#A>6&P/c+,1T;!Bm;nGa<[(2<_d^ZDSJ)rojVL-".n@qsDs7`RR%I_o_BAYq""AoB>`+UiYaBIV-%VhV4TO6M-#P@UW$)U6H'l_5DX?IUqC/t97H-X[S6D*;a6<Xmr_5LD-a0&]f$`NTg9b;T$B?[ZYq%^/]f8el'hG;C,u_;.Nk$KBiIBqn?pDCtk<)rGF3#]rkEuK&b(@0::F,<.^PgijQg0$$6`4(B9[-LS`R)cln9ae@NH=>0>=DUR0f[%mF(a%eK82.):T097m+[hdrB(&AkGj7DFui-0BMt8LcHhoR1XhH*ml%2_erbse/hKQDQA(aXfptM6-\pOU#W&QC8F_GY*&;9(Jd6^%7=P1(7qP=#mW=&lR^I#QkB?_#BNf`F5R'21mp;U893"68&F2A+0Q*1i^7I!#8d#GfEsNHZVR#)@i%C#gR3mAE%Y":=Ick`[WG1@q%C#Z++ii-Y7dp`okV3U)6QK-nmj.M^uTU+UPMd`6lO#k"93^3L0CYqW6ha]8G_JdrHj\RIo6d&^E:NAJF.2MH\=EGOi/f*ui=Hk^!%A!sOE7n/`@BGiumc%SUa7P1\J^JPAS$<J_'YTj!7*NTO]Z0i/9dM?W8Dg]H[n/FLsS>9f!#f!W^r'`'cKJ<Y!1-TG]?20C?`?NGk%r*\Xg@tC@>$,<=5XB]?jF-jGZka6XOUTfLN6S5AM^X86Q:f]0o"Cq4b>$,-f@=a<C`VT'Chlo/X5CUf";1d](L%XE6?r<jji%!bs%`/k0Wo8nDfSB:[3lDQ"J$fN9[Qe>m21+sMHH4KHk28XjAK@P[?M:J<-XBM3)IJAe*6Jkn;^dQo92sOdn$]?0>LV+jnP7`JZ6Q-GK%-)<HC>UW$S+lnOmVZM(1SNpK#'t@]7+\'>VakT`D**mlWp@;JfaioGpKpi2.!ZUBtaT$pBqqNf@()B8Tm;l;6V`sJUFbb(rVa%QV%dnn-MI4U.Mmc+=($6b8WI;":T%He[j/,`(5?.\inrea\)eN^s5-iLgNca)VYs0)?)=L;ool2R#uXt/E,J*!<ca`l&=a7e#t9LbWG%s2r)m<ke>.b.iYLHsTGAJ)t%2+Q*'Gje(-$-h87e_f*AlHk4!6?Ws(1jXe$20*7_"^U$tGR.9r!mhY,j:Ob/u7V^*34mgcLRNlB`%5C&D83UVt.?1BlB'LmG**LhL5StF8=MKtcTD4@tJGW(sHDE^+ec1L?<n/o'bWO>RZo<r);7Y-"N_r]4o(A07Dg"8&D`hO+R)'(kU%4Ep$aIMN^::]05c8K"*b3Np&^8&jS77:p?a/7@hF@7FapC)$orhBuE=H%La$1,ZLDj1o%$D#49Rh2JL,i8GG*2NNJ.)>r"!)U"M-%D.kiY.:_,0S'RKZV_"DYh>f+dIP<Emh1H!:B65]ZQZ;lp$k96<'PQX/(!jr8B^j.O[],paAVr2NDtjQB&q348_/X`X6HOL)UThuS%@uN1m#bu[hd*2rI@j&a55WOQqM_"G/YXh_#cHC"'/heFn`8K%dn:/q$X\pQ)j*R(g\\NUjO./'jJt_Ai6OqYQZ6%5K+DKO<c*4pV%"iWKP*V`@V*_Ce(!jeeeh&bp2eEX.L[2!3Y/j<kIaC3nt/X\]1+b]4cBbB<#C(JV8.%V"6Rc.$a$R*4ehOmE6<0up=14PT2H-HqY%<O8S<1:?a###e!`^L[Pa]USXHL4dM\B`^'[r5)844FGo0'NKL]"4YG6@]7G1JgAns<6^Zmo'D`A0m=M-+Bo+Q6-oI"+$Ml^"_KBp%'i+[G<ks6eJZ519n6!C[SbX*/eA;bHL91b7"U+phAg&d[O+^OJ[P>4&F)MZe#>GKs/%QkF-?G&844H3C6[P!NK?O@$=;H3LZQU[2%4UdZD8=-^O6:_t;`-P=X0=dc0nmO2a*mC9*\jW[!+;uV\J?4Ri:&P'DJ0Fn*bV>Y)'lEc(P6q?piFh*tL4G3]Qn(;X$4lh:;ZshX%C4m'@oYESm8*+'LdicsSV]g5XP+WAOJ!c#<IE3SY=D4hVn3b;dF0Gm`)DI"=;h;6B;*7<X$]"J$7+T8g@e\tnYGEDU.:$BgIL4W'%i)cS0fb&YTMA3`2<=782e-q)1B6\h7@EIem]mq2>BrN0/5&NW$WkBeP6n@J@M6'0[bVo=e@#CdE_U_$e+W%F*1A]e#B#AT7)'>W>%7ttXp8q#Y:i>*`M<3JW6=Gpje31Xp`&P6g4B;,;?ct6_6Z]lg+'P%FE&1e\^:4U96FHM$F`rnab]9(kP2P]g_'T/$L2l=!7U,5g2%(i%"5GY?*ol)8]\([;WlaW+5i3As./rE_f`!S"tKBdu_(KY>_P$_\in\^.3tPTPIeP+k:8O:&]e'(d"*2M(EA<!VqVJ<ujNOk-h0%\?W:KR5lBDcrR*&jYG:XTa+SL!UpQALfWVmoVB!KXW=7k1]?u8i@FU?pQoIfNEC%GprRHC!F)KH6\JVI[A)(ObS,MtU?DY_6S(re%TpCPBm>Y1HQ:.mSXK=HT/;.3&SM0APO9JL1W58<G"T&gj?)>:Di-elESZO0OTkI_k,e?6_Wkns^BL0JC+HVE-F$pfHSh0IBGV3GM%ZWpFL+I!rOOj#"d=IOo7Ni-]MhC='EONVH)lsD::@3sRjd3?n7i#hMKccBX2lRJH6L,@5D;jJMHN!1%P<V_`6+[(VO34-Dm+*@[6%MM)c$.5WS5710H%%+aX9r>\G*T%2E`Ys^VSrh3j@P.J)HLnXRqrs>e1)Cknn"5cKt%o_-oIOMal?#PI$<$\./5Sc949YGl_+^B`$%BoIFQ?&2c6p6'B3kZNSm?E?8CkDZLJ#CDcJi&/sl/PY=M$*Q$/#rc&]0MdLpE4ru=KhUl\k^#P:Ep1.dI12fWN6QSY]>b:C2tHW!%iT\\o<Ko?0,Lf'Ob_@$HdYNE:>6LBcLN(Jr+9&GTHMkFA+jCX&\+4p",B@D[m>!__c9m5\a]&g<f`r$)at%UErE=c6iIXu)rd[Pg%X8Q\YQ:rg?RX*aH6FmYDpHeg+[!.3G7A=9K[W7Xt(*>4+Q_dqQX>=VOLN5cG`mf]?6Rsdr&S0-1R@-8B.t&pPq0c^\M]V3;[*b.n%0N+49>#-eD<@ilP_AY=N'F/71L"K9]\I$H:j_-r-J&RI(Y<pRY2gaDW0,C1;PN;U)"7Rn.3k*<+C^XTA("T):EQh,=htqDY2eN1.%i=&kt(S[(]fBQ#$;9rFI>ic"^4o4j\:Kbe'gS\k_&(6qL>^0utqK*eOT%UG)P[%*@PgCcY1ba(YWIC<X`L*@t*7A"tiepSHHHMqP%.<Ooh's*9B?<1Uilh0<kk3.^V#lh)hZ\WEN-tna=$U*T8`5>]<^abS?io;HA-gKI];@5!"1K4!N:I=\9Br/)%gBpgD6LYh,"2Ub>%(43!X:Y>CI^"JJk6Oq,)PVspD[S64,>bql<,q4VGMmB4FNQaM$L,Pd3n#RRY%7Q.@c8SjsX%5hWP8Cf1SfGWnPa,^qKs8PO6Al5=%mDk*=X\)`;(f=j,Z<miD0T9%co+k,"EMFC@cZ5GfQ*9Dr(GD*EQPD#qcpR)$bC)TTEF21E*o'hejj-f5cuKlSkk;)j>qE-`7Ud;L%1$87=hT1NnNf=[+;&G%5.-\[I$a$<-$IjF0U:e<=1=OlfT;r\R!84+!HD/;/'VIR:'cg_p`<?._RZsouF4<"WpjGg<#5_K@@a>Ps%r\g"CB^4P[)+QTX-5$H'aD8+^$pg\B+7X*)d&LO!Xt(UO&#mj]V/KbPDc]P1;Xb[[+N!r+GMu$U>O5,8LT137]GYJG67DZ?9nDW:%*uDrr!'A_l.52Q2NV^^(%:bCW+c$ZYP;\d196T140Z(*8mF"CPS"A7]MhQH\GlmOcf=43M7m"p;fP<?ZNAGk2qohhGJkid(q%3K&%pgo(m=6iCR=Eqq`]]6\/QQA;,27h&7qIsGJ.8srN"KA/hghF-qrsL<Uh30MajaLs$o6jMlX\tQJT^TQTku+p7s2sbe[8JMGa[9gb%?c0XB>N^Xf7dIA;>Y5CsDaCMQN-$TC-MOuN/(I:p'USR*gTH"#-RAgi^I(s/3c>]((pr!k!XJJ9<JGh7U-dqgjFOb?ooT`oXOQP5%dqE%Z#2H6/\suXJBVeAH$,%Bb"J,,ZE5/FFkBd,VH.&WkgR#V9d?6ZX]3;?@#N+:,+9CI3b"0$VV6[4@q`K#RB[ln7%Qs#b:_e%#%l;,G;Heb:.>Gi"pE?hFi_]r_r*GI=+A+eQoNC+4hAW0ln<i_h"9$QsB3Gt4OkIpD[c[H9s[%^`#YI&YoaObmm&5c>k)"":hV+Q\-%7OVPFkMVsFZ2]"?jN>k(n'c$b6>UYgX`f:[N#J$WjK>?ic:cE4R6@Wsd-K%B-ES$59<5*p.kFti7gDO[Mq&`jIc4`(@qol>iS0pj%Q]4UfO83N.H%r0HpT#@:Vj@=qXOZR_.RBh04m@+k_SF=2_b@+2)QHXuYLY2*TT82)lJWNCMV^/el?pWE<sT%8a-g-&]QC74:H^h5%DX1qf28>Dk?)_#0N2]].?#gAm+*CW`oGSXLpETLS':3a^B])k;a_Mfnr5TVO/P]Qq\Fi>BnF(JEr;5QCJ%p`+lWSnNT*NoQo?QD#%K_;3`(&q5`Sb's]:t8SZ9QaMa>Gp4:RCN/qd-fHt+>Ktla,t%/>XH,N\QeKd^'+g2=g[UhQNq6LT"(5Q;EH;8K!4"'?;;U`L8t:D%2:WWNSLPL!'A(dsC,kjI!)3Q\s7i%u3*e;rb/)"r8Xi;p$%)Zte((XhmR1%s*)9[5J#ZScq@=h0T[@VAK;W1L:H$J_#u%]%2:0e(%M=p&gBEmgt:L6?%k-a\H!\B:oecTS>Y)sOQf4hSc1Q`E$`rt%ZSiHG]HuPNXT5o_/RQF2aLM?01boN[l_\BHVCNGjiMrbgsQmN("%k5Nf:qb*ih&s5`PAY[tNHVALAC$m_#4f5d12!?Z*K5X'Ci4N$'r%lM89rl;#3Z!Y85-=7,FX,\",ceGcmY0k;Nh+CsG+S&+ZoaP#%n?'i74=.7;UUC-sE_^B*EOt7E>eXuOePAioG.UqXB?.2j)@b<?1f[,?;_$Cm<"_kfJP)nHLJCE/qGSo")Q0M#TQ::1cQN,QnsX0H%EGI6RO:#%N)[-1$+7CLDou$N-Jd?n,p;[JTnd^)[gH$pOK7e1nd5hJHcait/Argcoh<m7gR%^2>A=jB*mFFn3>bg0DPj/Pj1YUh,%2@L5%X71&6;%J+d?2YPFAEC#c2.mT=o"W:cptp3Ra``ih:TK8S-N\]o+9.e2JA"F[hUtZbb5\&`>B$5PE*K=9)6uer.ZC@WGW-rF%rF<[(j?`8aV5KaO0n(C:5:oPl=eoD`Z`bRG8"D*9q^rN.rl'#AIKHI/Mge'lDG;M.blgs(Y>&o[r$H<\<UH;`#+Ym4QjIo$god#J%<E?/DprrA8Qi/&2VaV'o5fbal>du-1m0'Pt!3hq91F+[Wh'hLe^'W$T8cBqXB"!_@NCGMS$A/:PNjhf$1<GMN_I'\eB/Y^7,Y_d?%..]N%U&U`[PgRsD&,iq/Q"i7/'F=#!GlVYQh7-&lD_o!C0&0to9`6SQ!_Q(dm'"V)Cp]Yo\GC$I!gt+Qs$d9i\JUbB0m!LmQmF`C%0Gd*k`A!qCCr=qk4suQ'';hC5J*!AfCZ=$8992aJoVj/5";]=j'E-ukc5AYL4W,@5PL/VSpa#M(nc.)hN0ufI4YAH4_@Hqdc`\kZ%r+9`X.Gj#JR7o\@YHnnD@;7a.p*]>(jN^EkH;H[/C4%7UJdnB8(4U^7RE:pa5J4)F(>#E0o$qoi<[n?!<PqS23CBf5983DB7R$)>%+"(NZ5:&"e_Ko-0(T(669TIk$]j/9&;-/s*kbm14rKT;W?B_b=iM>S\<QLOs8X0GLe&o?1Npb0AN<bZB,#^.R'!1%n1@hek;$&fE%"/%U@94%*5=:A40j!\aJCkPMh<i&^5qj.qsW)rR/6<j*c.k-gsQea/M2PY&EeG\tXa0gChhoFE)"&bmmC*aN4;K3%4q.ZmLR38o!%CL':3Im#2S:Aul4C?;!UK&kcZbs*;>T1i(H"IIb3V((2&kVNp>_2W5t\i(Gq-c&puCJ7a?L*1i;]][aYXd1A.\9;`OI&UGc9HsLd%;\o@k?5L$7c-mf<@HuqnO9UhT%9">LR(5&0,X@u*U;$_C&.'uRR@ua!q(&i7M%ET4!N'17b[_p9A1MT@'-V8'hOELmM"2!GKLi>%%Gp:0h&Rq=;&XNcshqUVU,][=.[E:TD@QJ>ZGp:1L`Br^D&CZdJ;8*'f&.-oAoo/gLFs1HFO!=t^&ds8+_V-PIi0>R)BFacD&,0FV%o=tcbrV'%ERKgM=2l>^4%Z04Q)-*(FNKYJ+2XT+_glRG6J*U)]f-MDdj>)_*J@\oL3WCH1eDsWU"k6dBbluU>$E-:L$K_QB>WuGo%HjW,mF7D(':\!FYDEc=adp,#[`RE=nVs$%ZnXnWeSJEXOmWZ^t`Wk"a6]uDEqgXbr-Eha@+obV(`7@i[jSUl<k^J[/[Req5T1ZY:%]N>%jW9r,-hiE9KTr^JkN^*CNS(SBaeTrN$Xk(P-Rk:(>dgSj>I$2D(OfEp17*>_QRbtb4^Nnj@YNG!&][:WVnqr8SR>IspoE85D%9_$pRZ[W!D/%BDSPsbTE!f0'86n*Q?cr.GL^U4dSXOChY]1rl7^YtEo[93FMn$eZ"]B)Mp[Hi$`OafE/1W^SSV`n*Bd45.A,\p1%%n>DPDa%ku62\`-:Me@@^(PaXb:\%-Qs')[*s3o!S7.=QBM_7F`O#g3aSE_:!"'f(9r?m-l\@nKte?.tgqRBe&kg[jkQTA'GbY#!P%kPR+!,gZNIUstQR$o=U*I`FlqZ`MVf-g^hB=Ic"p8i2+pNobZ/EbNMa=5F6Ahm&[Y@\)sic?ChC@kmQqbN[fe]LeIWcZ^qjr9$/-%5AAANcdL1kP?E)#?-9.&3D=-0BYI,"hkck3;DrtP2I3;RSp&jSY#-RQW1JO$7N+s/^g2cp+PC>O"-ro]@_N)T>2u63/#lUqc9(ZG%[>[`c-SK5Erh%g0P@\aCF\4i!67`SsSl.!qXbp!Gm-H6dU^O_i-[BT93%9tdS&^cU0r86jRX%S@.Uu)Wr<C;f9PGDS8n(T"T='9D%^.q^5YYKMNHIc3u<c-?<c?_">X>a=ZqUeNpH*HQ-h^pTDckk3q9<os?V!=Qg=l/59Pl=atlupC^M^te?_i!%]jiCNVVr*57G$PCe%GqniuQ#/KJA5/f[k5"QDgl\3Q8&!dfb%*?<ISZ:)+5]GU9Nl2Eahs=;/Z+\Be1;"-2T`6#O`g>$b[VI\fYosr0ooVa@i+ah`B8<`%'4Mb-;B`:Q(!,;E`]SE!23uHKFtkFhE?0edlmJ/o6g3Vsq%tn)Hhe8oG\XqhRrp31jps0FhI+MaadH9oP+UZcos>d^:N3IbIO+qS%VEV+Pno)UGof)83IcA;PkuDB(C1j_L*?/dcl`t4::"-,ck1@f#YF#&J&neAeVU20-!ED%m<b>C9Pt@"Pq3<^l-?)\3ci01bRB>M%%o2;FTchsUOA(NQD=0UJ9A'L4@#+?WLSf\C?0dKGAEEZqD%#H;]r-JnFP@3[>?Rs3?VN^YM<Xpu^:YS/?K\d%ca^j\\Yjj?LmJhq.%r?(NRUQ"\V_8G^Kp!3UFk'kYkqa'hS-klGCIs>t6]"L(C4UJ3ulS.$*brpX2FraVQDJGBuINBcWh!3Geo;f).XQ#je,tYP;W]#n@%r9<:kGpHdD?&0AX"F.6l#tQcCGpHci4NNq!j*;p.s,J$Z/U3XQ!e/#ik)k1dL]hfl8TJ/"EI\q]%k[h(I#C3PpW7ESRrIIX]mI:o%mZbF33P?<4qr`#Me!'723%;7f@Oq6-%I3$XVYF!\5JEq>j.K?<PfH3XU2Dlh*EHrIYV]2PO0@fT<?`'T]kgX]Up!Fl8IGn&Sj!0/%^\;jdmS6=t($8Sqbcae;eZ65@=/R=k]r/!PAHGerCL':3pW^8GA]Cp&8PaeP8uIfe-tlkDYl,$?^0F=\,l(._^Em?0fPR1$CS[#(%.;Y<g+IlJNG(/&\=DSi+`e6R"$tgVEN$F/&eo>&a*031M30,4hD_=n=>`^DZ,YBc^C!@mNDF>OCP#^;m4JE>-[b6^/:X5JtTeNi3%O$h5Y*4drJ_t^E4k\II<B@:9^,e`>(e(eT)qb5W)1JLn_F.[171X1?F\^*,,RJu+o-D*Al+eNK>@cf;l[C],I0m.-s1sMSg\^NBZ%RV(;gHIHP,c<@%I,X1siY33b"m.sD4k!#nRPC4[gVBi4P\R*_o\I!_jV_LEB5+SaAqKF:2k_]34h0\`,pHNI@reV<_f<V:,(ILE:%A&+^s/(M^ZOr"q<S^^9nMtN;K24C@^[I\eu8URbuq4?emmo&Q!*u7NA>3;gIO^uY&H57r]]Olse&qYO8[Dbjsq>I5g8Z)3`'fT!F%\,"1fgs(pYZhQ_`aVR":=-r"eFah5E!qUfL_4Qed,\2jdE[chS1/Re-0BSnu,Y,=ZlCGPf=/he4RYL/.q,<?</];PmZr@MJ,&+:T%gcbS/fdD22iRI1W`:$jAJJUI/2s8`^k%*^1/$G9=Z^6^M(;"/shCY?9`h("JbKokU>^ucs2sRldC4>HLpMd[bI?Mtnf9!q?G[6#Q%RuMa`,O=X(Qs2+_Mrj+QQFXj&/*:fD3-,9UQ61Isn!'ijRhEX<?$WJL9N*`gfDEf$pg/o[&ck/\r:shMPGb"&r\(F,r"DbPgm35-%lIL&PIG?D;dA`Ve-9Gj("gZXXG0Van,WDaLKM"lWUn(h7(;>9IY03tHQR*2;e#LS(W8Y9>]+1c8X"I$rETV"P$=0+2.[r:q2EOdc%q-1A+!tW.46I,Z(J):B@#k^.9mB@6W=.#gI`#J?CV"k1Zo@m<K71IK%D(Bp);uagblBP&]&:[;;FCDjs(=uKcEh61Xp(dBh1Sf"C%9@VMQgG`_rnbG;ec;b7@7aAa\7bA0^mbh]kj*O6K%To:\Rfc\=gV?a7Fhho&c2?O#m/Dk%LY'Jk1Nrsd\`#BQoQ4"E[/L/79_!!#%@cpk:iU=<uGF!FUVAU%GbN4&%2iZ+I72n\=ms(W*gnam5V?]C`Dbl!dZ.f$p@?B0qa#$\XKD(ka8M)no(n)DBr5\?MUYh#T:pF4X%n'@(p8@p<&25d:MV5:)r6qdA]/57iJAZmUQJR&U&\NF\nlL!%'Q_@1c:&g<s0subb9aMs?kUD4bNZH2MY0E9'7h6:d3.i\ZX8S[a%."77#kBV?f.PL77%/rV4**LL%l.U-N?Ko.K"@Y4@NaF^0Hdi5VT!Bibg#/r8O$6Zjfu+P"T'Y"=oQup3[BZs#WAIA%<4:=oT;Qj)%p!R!i9's&:1qBZZV;u'f<3'$F7,"]1LQ+dj+oUhpcXS"\]Uqg>A8(Z=;u+C*)Da1<qREN\8%st#nGers5EYtpl+DFiP%f%KE$]IM%iSf]@j.AA^+b!Yl5_q(UK_e4bnrh&pb]lstCt=3BMO)t%k[t%W^UGL=fO*"RY,<5MPG/SBBfH<FE*Q+YHnI-qhkCXMmqJX@oAOOu%Tq>fdp,d\J:*72Hd6@bre5#;H7kI`7ij\dm4DJHd+X[U1SOVhn#=SF3Rg>e&;D%*S!aa=3#o6tF[cq5CRcin%Z=A0gB@@+3e9iX6%imNU1C>\Hd3.son_X-1ZDdg/'@BVd#YGF1*SIn*`8[+Ja1Kl88r2S%_NsOD1o8\9+4<dtiNq]hB:kfPY&N\YnJ4,60"B/Ra^CW6D%-[p1,rUQa]6T>$P6u3;JNp0fn2;]g+0?FmLQTCss`T)a4GG9A1Ms=IAhH.Og&'*rmWZ#W\hquC+k^SNm>!0OA?<B<r\m'(pIk.q\%l][82Wf-F>mXB($m=B13$Cs4<]EnR:CQpK(8U&,B/Adi+f=S2LC)q6=R[=d]<J`[FK$I"q`8pS[C]>UNs!/km1;O`e'<T$,#Z;;P%T8;$#@e@'HM-1j!YF2,i]Q1L;Bj=uJ,l<"3\CN:K\:`'O(/%8[^R["f-DhCRaf4%u/o@6[1WA)CRb=?>X-RC((9d#+jeZgbSB-K_%6)f#2NYCCG\qTUQjVqpie_Ng?R?Xnt1\cFTbL(I%gaq9f-7pUm$R'd6rDu<lkJBne1Xj'J:L%"bG=;!QH>eYQ<d^_bAfH^[Q?1L<%OBo(2S9B'[e[()u:S,X@RjkQB=SPI8QX>8im7%)TWp?7nA^Dl+a<pc:H2'TaO4tBaKLeF8Oif*"6AE_8JtR/:BHHh.*dkC,3>-UP%LJOPn)CMB8IaIH4g+#lPQ4827'703\Qftl&Ilu1tPO\8hpc^NJB$4!;G!!rd-ad;rGCilgIiL"4m0E#JXkW(L2:,e[BV/)!hZm%k%9@m+U#S,O,h.EZh,PDK05qB@p$>=%N^.5/,$;kg1[S-;"DWr]Cm5:?gk)agQW$ulCla_kD>Mk$3j'0lF,0\R)/L;AZ>//&B=oB,#%4,m9uJ6h/uLoNo1&ER*'R4:.'[f;h3"_Y4=FrXO+Ag0bd7[rXq[@=!bV'jI:1b6gcH>'/BAtq.=Zcc8D6Ae,)PoI-^:o.'lg,B^%%>H(<*e*,aFB!$A/UuPF>cs,c<.AA*u/P'Hn[S=@=:-V`nF\WjO<[G_O\>OGK*\MbJeQ*MGYmnnG`n*$kSa'^c-1%WjBOoeFW`a'L%G2(QjDQVD9Bd;&'#<<FA;@COi;eN4IKkgW@kt99*5u></g)'EOq4^/KH.H`KdCClW"6r&Yrp?KgPq'%a[8uZC#1jmE1OF0K\L:OZ%Ik.o;H8D)tT#aU-83Or+@..1Q&k5T4#N(-ee_ELWWE&7MWnhAH/p_8TfP2L)ZNie`=fFd;VkJao<kcgSitQO;k'!M)W^3.ClUEBE%669T8-.m>j:$,hOWaB;FMVVGf"PQ`"K#FL`UW[^&b:D+)eJ&%Ze4p4&%O#_WMKRtSJ9Y:YX#;FNR_54OfqZYG8O?Fl"](!?NZhO4%s)uCqROfC<;0=Y.-e:E-Y1?IVgh9]>asa,b%pq4U"-:R&m]-WaHq:n4D3ZSNOE7C-;*&2X9<aX"CpXZ(A6RE;M0lb[i(/0oY]oTS%6V4<]A,V'=1:2L_^$<?uNBhq2PWM5I&*g"R)_tEFI&lm8:U6!EhJ%A4VoR%[kI`s\%UM%J\VkWML.T@(?jp?V!$:hCieINR?G:Y(%$DFS*XioI8N><cONKG_K735Gr7X+7pNY8AM^-7LFaA.?jk'="I)<;b:e0U27K$*l^#24tA"<g_4m'Rb0"=o:i]`oA88q`R5%$.b(%;A937pkn@XnaFfq7CB:?OFH:0&%X-!.2<fpc9@JUdRgl'@3F>HEY-dh@tF-\*Umqd[HQ#b<>/86i%Ul4'<E41-:?e^]R+p%03)eF%4=2W^+=:iU,jkbNbj6ZIjX\E_$8o.gC0_fK^!Eqp@l^)qeA$itLltEWUl-0_:=p;<?:jqidqE#PN"=[fE<E6>m-f@Dq<IhPTM=4_%2GD'+^1'Nn#1:t+4c41h_#_4+Eu<>[I2*/#>LcA3qFr5W@bHs4][&K?QR$i4-Y2".-9B.F/B@E`a^D_K50hT3SY/mJ?:Gu`]K[02%;4aKEiqW/NEYS[)3fDqsrCVkT$CZVL0q![c6PQdomW#.N=q+[8KfSl(">US2&KiOG<67^AN;AB^dkG?9M%i`JH4hXP9Y!TpI:p1a%SYX>VJ^7c"R:MFI9JF-%,R>DfOHTj*Wk;=bPDLt=<>#jNXNrSTjKCJIYL\pHS3^0N@n7/04.5LY8#-_1F]]P.MU>ZdDOcEF</_5_%cArfC#9>S%aeKjH:?"b-77s`LeRC,\.!+dt2@UNOc/s\:rAA1[XnH:%mY:8-a]2nHebV]9CPksc-9+#c#6-+=Ed1=\Jp_U5iq"9m%ObBhNOW=ksG3Y^kTUonb@*t1'PCa6m+3g#nSc[ZC8o6\SCe,J@(L]k4aP'"roXiAm#.jcikbaeZIA_nD!jUs7'%5rGWEN(tleF$+%Z2Ia%1i0@DSX,l41sf#Y86%b$,#q7c9&/bpJfB@]&dC\GD<,3TCq&\?JlL(]rOufI)3&=-9/CIUp1I<@Vn2O/A59#Ble^!s.CZ>%%R$d#<e0S-Y_U'P9-6nsq37pC3J\n[5Le<uT[<p'S8jeq5s&T**0tCn0V6r[K-\Cbc,XF9tmc?p?(6f&@ch5d#FXsmrY4m<_*lF+s%%"I%WEX_!+fkT`QAe&ic>FqB5O0sQJfgY5KmbJDs)fHeR>;*ZqH#DKp?-R8qSmJ"lS^hXA0A]l8\sKI`dd9-AlXpCap=eZpViQ&'%-YqIdhqQh#Fj"[-@-i,r\n0^K[!)FArbP$8Zap&arEs\VV:j^A^G$]]/8hV/heIk1Sp.JQcX(I,DHO_@Y57@%3M0((3u]&P]CM!%%F7[Ai2>@'u:B&GWXS%$b-$.blDJ-Bf3p4\IS_Mt0hR`;*qk\K)c,*rh<-s',gY!V!5BW#nIJ>mFQqJN\+#I/>mGm?K7IfF#>!%/C%S6oFc(71Un:)=Z`=N/U^iq'&ihmh@nB'o!>C%f3'4*TTJ"5rs%2db.F^M[pO\bASiTddHlT?]VXkgS@kq5qfjXmE(^j\FrGolaX'%n?u<\/hHj+QBo^JZMeMeGA\G)De'X.]?Alo/"`.eF8&uWF$]Q:j.keHce$A%dKMg7QOB_Gk;'?G4Y4.GlCH7:ePFLAg"PGLH`O:1%^Uop$K=bJFs8/;Ocd0ji7;)S_j(>/p^3@-cBP7:;HhmE2Wp;ibT:20KGtVMY=OVU[QLiGW7g(aE?JrOP[E;Z1pTR'\eTW&dXf_f[%R_*bm.sSP:\=)+*\G`;/inJ=ebLQp]p1$&5pp@\R<;Eb1SD=+bh*.tpdXiN%%rMIq+.P:8X#f223.#Z&=]M8C<8#jpO10?(%ndjc%Mmo#0[kN\l#G8LBY-P:1Sc#m,n`T#S`=;KSj%\Kd<6qZ\5"fP.4(F1>pT:n%pi0`]a?M\3V##B.BOeaHjlIl0A8f?7heq"GUJRfR%oA0U6p*ZLd4k`E&^u@-H<]5HOTI)Di`,a]r?cneSr0QOCl,+<E$`2:b4'Cb-odbN1na5YdDD&Pf5<Yroh>I+hm;-2cCV;el(1=k#%.dmbcqXRM7HCNS>k.ePhc;hV=&(aT1(XIuLdg%o7nF:/Ch6/[3j*:l:04/75[i`72k3lAX#])gm$geW$43dDujX3QpYHjhAN`Xq>%5OA<53IK]JN\5/SZ4T'LLj7[c'm=^bS?n^N/1_Rn<u0,@cPo[N>4M&UP=]0Bo0tH1eF?pX3SX$f%HD17Z;JPpL_.^SEo-4>P\;XG%3'H/JRQ5i"1W=/]2qL81QVLn`1YTk-HfP*r:E)'O6#\g>I6T,4h/2#pSNH]bL#q]DYtq@;!:Lhf0F*:=.!1Z?lLHPZmIpM6fm0:Y%Y*WMaBAE7$Rpd<'4f]S4o_mCj_Wo:#+,:L/,']5S=NhcQ<0g+m4SJC"m<9@dZfRX<H;EG/Vo1Cq6Sk<;4/8%hfdkq:X0!30p3U<F%n^Ggb$]Ft+dAk?e`BrF)Zd.k(&IY,9rp4<P#L,L2gjG4^d]$J`C\=Glk4&<9*U;Y'Ej(+-@AWMB.,J6P5@jI`cgO`;O*@qUo(KUb%bPV+aHd<\#D<"ls@,^>:ZVZ>(!&$MWR`3OX7rKR/5NbhDo/E)hMrjY?]t9^2_[eWn95Sg(-!FXfcm\kUNT]"bp0t"(/T*]$QQia6%rVhFI'IKVK,/RO8::c.U7pk0G29jKHU?&/2HUcHl%S!%:T9n0=g8?4$bI?l?hQ;4I*.34,;c!A9kKT!!\MR=^Hpgk?qefGah`]7)%F:YMQ;m&f7N!_0r>NN9)JupGN5('j0A2dS6pJ9,$oTN(S1ZmLtG7(#-SGk@S]noOG[HC?Y7p9l;p-`7jb!#!S4mod]=R=Z#;LH_U%']unKIru70NE:B$86UcNjA;/-c8$?>7Ftkjmi0=9RfudEi6(h`?WcYh08iFUqu+Sa(iQX:c/.M'pKFY>(!L9NVpnpgL*s:2aNKeO%@oDaOZ^jIJX`J.R;7MNm&;=%(*gFG5qE%NKoNH=*FZehu4R%K]X7PrdMY4=K=$7*70Ka]WC^d"tYWmrB(tANi6k#bTN?W3>XFB'>%%#34R3$.UiqHpe>hT/K&k-,`8QH,1d,#dW"]cLb3_660@,l,Im``TN3jmCp)qP4`3/:KjK4:8/[Z<$+X&0-c-CI[FA31pb$C(GiU%"CaaAA=0G-G4B*^2S%\c6IS;SEofL:&LI1V21X5tIB)DoJ4(`=<RuLQh!57W+]<c^Gb;VHEDU":0+;lU,580P/5?39dX&"j@q6u9%l1'j+9:k1Xj6?;^q3-=NbM^M&fD@k_mm6+*kXE1pGqV-&9E3Lt.L\O?-XD#+?2VA,DQS0L6(5.tf&_V>Ie=1R0):FM2n*.djf4r5%2[e`*YBNF#7Ec(MZT$a3M4,I.DqLU(?Yn)_iJH^C<pr6bdr00jrni,E2rJOe[l9B9/busKmf*+]M\fa,d04*BK?Sd-^Und\WHCNC%Ci/cA*unj[I>>4s>4$QEolIAmr:JrTpHO`QHIOL1<t6<aSJ>Wli]$/UPI#Z+T^]%$>JX3`hY$br;-)?,hJU8SM]*2gR_lQ,CW4;m%QtIWa]X=]kC?+9urneU;M_$0[f'W2rj.%B69jfFKUiV^72,RC]O$ZpQ1i\ogI,@^9I1O;tV-D7[%ULep./W5qo.6B9I5po3\lkU.%449fep$D/FMl^u\#.T/GIC8n062&jg`t"TV&/B'kS>*_'PPo"S7683V`@^c!7\0b`Vneq(5BDm#gP;3Qf.Vs8M*$DNq\'k1<!YT.%43iI""$FiZS?i`Br@]_qmJkRj#.s]/(Q/=!f;f>`29PQ*V=V(if88rLY?NXb]A4OgUhng"$1fup:to6Pen8@_o)=hYA+T@F?[8Z,%%fug`Kf-^22r7oscCOu`CQ0ZgHlQVqA"&^Q-Jm'Tln">FZ?L'V(h=)9_5HXRn`X$R6''[+[E<&T".GelprH4=\5E#_h<W$3Ierit%G-Om4&m$!0rhV!,[;tHh#L=u?5L7'tgE^Y+mdd3CB_U=lk1.Y-,P^!OK/[.2"lmU.c+W>4ltP5!FR<dh2eWY[XLN:alsDpH_IAQO%Mjpj"q.jb_kKOY]?sS,brYaQu:-8,i>EQXDS(VFWX..Z3Q.PD-"$$)F.H@VH=RA72[(`E<)>;#V/"<ZUSj+_h\A)L8\9^OAbt=g-%g1e<(4MH=2*%Nm*2blQe2rD8O^:SR&Hr)-NkC6o$O%AGr!62@qr:AKlcU)-:'Q^>E=DIR)GG)9QghSm;];u#FLRH)qAj>L(2>9Qe%!q%@9Y]6,4[]9n4$EG9B[HE7I\Y1&XGkmJ>?elpN*HJ>Tk0&Z$='="c>@d=An%[WCA6upt.tYc204%]MPtQTQ,eg+iaA7;[j`Aac%M_\IQgj5KV5_)8KhE8*qK$SWC"fH![&$r\9^.t4?eCj1j=HjD)^@j`+N^#+ETZNh^gAIE<[+*Q,k<6C$WU&>B,Y7]7coG`mPDAV-%K/O-2ljrHp.t,*Z7[B57AuBo.W4Sn']3uJ,_Pc4RA$Sh[+`L3F(WsqTh\g4OImrAcN@2/b)W&-?\aebRh>Gi8og@:oHCN3mHE_UZ%ffr^gcf43KduSD?6EdbjVMZdd7h>2q+1<9,f\#@:,b6k(i[4+7hS!u,4MH7<?2g)HQ*#=U<q=S'mOthbe)Pkb,gI/YLaN&7ekb`S%SAu%QOV6Jg(R?.&Vc!*k>W%SKT/MbuF?7*t[gC#d\"(`eEM"Z45"r-i4M#`0g\UD]6Zpf*Y8j7lq/Uem<k\6BLJ5:E9JQS8fn6f2%%Fh_N(DbUe2Eq%e<McGqm`Y1tmSK2Ai7%W4Nh`_i4Bo!)<Z:FLP)Qi@3O"D`T3c[^gdAb.TnF;WU>'P5,s1:!a?4J!50^db*Bb:7%%CLQ1](LWuk-+Z8jNXk?lVM`#V$XeQRL>%d!>:$;2"B`:a*CY^qJ7B`gU?uKYX7?IgUHaO#G2sGl<eaO,&D$R;h)I1Lnc-O"[oiS%-o_*qdt`6]GHL@DF$89:>2F"+)bZ[&<PJp0]U<b(<aOoarQbu^mt8pA+aEij>5&LumsfYMBq4WU+G^I>9@$l&YCH9o:Qp+1'qpf2%NuTs95l?O6i@s<gqeS/3k>,Hm8L'.l:pYRn]9pch4=fPPch=!eH),@ir.c)VpaV[:?T*rT[n=W!Hm^ZgP/Oj0g0At<S8ESsehP2k%7n4_XmK)@*W+bW^kt8q=)sh.rBl3$Rq6Bhh)<mKkn(6Ii&7q#t/@6"dImqlWjmM9Yl!ZO!pLEB32kSs1XDY2Sr,NB(cKWrSo2i2g%;d1n<G5[k\pR8c@m5G%EHaSXl_5GU&VunOWNb>u[r3K2dG(/PK=P1-5BCRk,ik)DIbMC54.)!:iMq$@tHWWo+q@^n1CQV;u_h\':%_\P7Zg?E1%"1Qu+5<iF)hKlH[])AUl5AddU0a-g+ei^R*]q)XOh!#KYcT]L$JT9Tl&1]).n]olB<R%a$cLXgR0*Yrrpl<:#b=D$U%]l)G[93[Z?E%_0FN-Lg&2EnrWkUuTM^i5X\I'@_MZWla6a=;N4-*sXb9ldS4>\n:?DVgEE@V>tnVolm_'XdYWHfsp7X,sSf?bCu`%cppUb8j(Ks7H6(&-iI'#Xr#6(SOQp[hi@fh]o7<B;^<?qgWME/Vb?QT&EI2Cj18>:lUa0BgK?F+P9/SoQ&&?DaBn?kNpqD3GHF5+%Hs"^.`foC4,-&smU&;')k;T"j^P8"T)DL@p+f)%)2J]sFW2tp=8'g'WO$JK-cGsbGh7UY.K\FLhYdr[UkX&VBYH=C6[!F6^L*1Z2%h:Js?>4_?I"5g#]LtY$AS7il9U)(E,d?+[%=t.7i`,0>ABUSh=Fsk&1qm@&?8f-=?XJ>WG8%DhPs5eVR:Zb]Y=Rc$V%3$6nTC$R'%UV)&%H1rr%m9cBt/JM[qm#].<U`%iBaqZhRqO>@mm_*05i2>,+l93uI2LKM"7P:Ru7UB3`NW!I1UK5#L[D@V[3uH:f@,\<"QNdCF%/!T/9mIu':30LYeOrc3g])N6]b0,RjgM7bNTFECdO)#7HP*&LVdsZRDaEUM8*Gg/-(71Vr*p*%GQgOHRmHu:&H2i>8jMtU\fntGV%ISpX[V.DUGSM\Y:.Y.ckqcBV,AEu+[p![g*)A^#G#Pj.;(;5]9-CTWWkH""mOM-'=/8h$kOWSZU/!K5L@AfIN!'akHaQJOKp;k6K%k$Vban8e5q*Z]rkZV^)hFe%u&dso1VFG@kpe58BM=r3H]F7f=hOlnpM4j0CGW;Hf0l`\Qm=6?FYM\d=^oeq_`Ruoj7/DVmoY((gn%AuGN@=Yj*mQ:]66^EB(og<Ap8lo,#5\FasNIK/\Aq%q@O,5^-JAt2*qGO>.]]8+G_qSFH,bWX+@g!3qD/)@t@cJu)=$KM@RpfcH$%Q5):NjASi2Kec6AZ*n[&p?jOtg3!A;F7'$&jC?IuW&-ER)K4L.[+Z%.Y#Qt5__n4]?nY_geIS:dIK-`NGj/c9d6+E!o$^1>q"\Fo%*8),%fJd!9Y8g`)La]Pd>b37o3.8=5L(OB2.8rGkC\MAo5`_Or9@eZV*/fAcO2uSEe0P+/>9pKIWnW"Q2"i8;pt@mt_p6$Lr3B$I%^O.gKZ36CV^EF?BeCkdWj(1"Z'4kQ_mqj',+&j>J2ceeKaC`)M/bF7r8o%jAm28=P+<Mdt=a1**VR#=-mYb`1/j4Od3#D`rHM&('%LZ$'rktU1GH*7_d?P\P'^JQS1H@,X["O?;ER-L<7f=N-=-jd4cr-N8;`VZ5!7\T2(\$J0jmoS?AeuNA,iks1-=/>S7MYDpsn%:<T%^@TXUef/ZfK)Ou4Q*\\C^AYkCqP*WC&c'F>jBQQcKB)WNH16Xbj^dc<;>t(uh<bKAp%i++Soi9>\1Z!,\b"(gC4<4LHS_Jg2<36E%[u3m4Z6%t9n,5j'ZMoD7\C6WM<VW20iT.4NpEek8aR<Os4KEG:3fK05pGo)P+5,-nK/&_#6L"*.Pt_.uXhE`WV2khJiU?^9>GkYS%H=>^OT@UJpTC"^UDdT-`>(WJ(&W,#%[!8aE&ba>j]2&P,*KAT2CUZMT8hI@Ij5n/'Z;4`7]L"`&fIiC15GPAfheh6??Pbo]n^$'R%O%_?VL:DX-;s*S^gqb!1hrF3.Y&:&,2bm8_S>k.9jn\EC^k&ZI$oo<s;Q$U$[t"$lW2"fVo27dr<)W87?Q(:$WHNdLjRuslUFG*A%9cc>1f.>IiPFu?dm8CQ[;.iP2njDTV_Lm?$g\gP3%Y&&bLVG/U[-4(D]Acrgi2KG@IE'*r$k<J1%m0ILn<A)r(AVAlMgY(h\D^HN%gP6$UiJ^3#S[$h.T!?Y;B9MS?r]t_'d['cS3"LX?J8k`Ts20s`,*4XB?)lGlA&;<Cj.e[+5>.OtNu+HmfNYCU5FYccM$n"o'upd>%^8NqcBYdd2?)(RR^r`^O_=uV0>'f9%4<MEE15J;Z9Uk=>.39`m+<uWpoHF(g*P/+U!g:R*l(m%D/0Prmrq_@_p#arh7J[-i_i<-o%oLU=S3;2\@=2.-Yn8S%[W"!q,D$OLtrfm_Eg7=\J3b\1>e/5\&2ef./m$sNH[*#-c?O9Y-Q(#rJcLF<gac+7R)[;V_lR"2iC@qeF%!_U_[AYTmfqI$W-fE6=74*$CCmCM=m<H094h2::+HWO:NohT?sW7_L+dQPbj=#5/Zd[6d`c$$[H?6X:#l6m3D.ec`kN'G!KokOG0%$PJPKkGm>6ds<Ctm[geh3!$f.X*5KT/#3umWRRB=dmd+E,a_a#l>m<\l"0<MJME@h#A5@8'T#7JACu,njm"+V3n7!mMQt>i5@:C0%`Ve't`.'XjE+*jCgt-g=^&R`)PGm7]EA1@>KL$6P4%]dBlLoL6SA]%(_5H?@/aK%mZJs1+Q!9M1>6QbUn-fh3O4m'u4k3^Y<mjP[%gbs3W@SlZ2dcr@0[V2Qh3hlkcbKX5ZLg[k8OD:UqOT(QMhY@mr?DbWPJf:3OL_u3AYL,B=H]&+]R54/OWEp,(kZK+s73ko*SU=5p%>JsmN0kq+F*l,oX1?]CPVs.7jhNLO/LNlBIVcp'f^5<#eotF^k^d\]5EKmUi+Xj9<f0b,"`&@ctbGj:B],)o=Cil2]#K@r-F+s)q%IG1kCCDO;!C4`#,X"q867V[1^[!f@UWTe!.&7U$`J"(.W9MgU(#_sma>f\:#'@<UCNc>dYSuCE*Y/2C)`TDH@otRR']#(B<8u&;o%i[*T;3p"pm.TWS-T]Si7T]XmQXiT&m&XssS_Q?5WEd?;,)*;pZfB?#/'@_"2d1u-N$9H_k7-YmG>tJ[dI/4)A@kV;bMShBE`RSZZ%b?#Z%j9k9G4]K"L>j7r*ICU1bfMnR#D6h:X%pnF<'brGN%tHlF4C(]YC*F5#p$tLN&2jC+$l/'"o&]V(`(&Y7Q3GcY048b9YGJa$%As$3sl.22<EF>Z3_U7TiI?$HK:<5C6k,<MV,ndUMk+H(P$#<!ml\O"@;3#(gH17+Ve4:9\)3";0%,EfqeDk4EBQVbVY5X&H?`d\b%g)]24DZ=#q).fjtOi$uPio:LRV/O0[\Y`A1G%N"+e!mFeeJ2*_M\8t"-#gfN3fVubE?hNF*B$is*<^?.6\\ee?$lU20nV.Z=N%g=%&6Fh'H\ATF=O>S[>i]`S>0?M:]&BIogSQV^9".S3QFLg)^Rs5_0CYNPSX=2e?Z5$4+&_j#l3`?TA#fJgN*"F1Nu,/;?B+RMT7nm,%T4uFeGg`bR3-\/WA(V"#hSmu,f:Y.#Fj8EP/hpY'=PC,ubsu?gZjkoU2teMEf8aFsBg]Abe>d)B;rbD`lB2MI[-bId$Cs"rBr3H)%8mAH.UW?6s3_dRKII_tH;eg$\je^*-Q>*0Q_r@P*>'!u-lC$.WO!.1YmG"'q78DPk%4X+1[&6d1eC)4WCco']$sF=Hg;9-,[dHtS%m\P?TVTs!6mCKHU>'enH$l;WT5HSW8b,hr\q\:EcDtk05VP+YI@occ>3/pGdd]/VA%Fb%LM"\o%1M%c*rC59F%8fZ@97)E]Gc&,X%#VY0l?!m?]'RW?u`1)J/L?ZnIHOS["28$ZD,j:Da+I&:SS(:78o5b2gVWAI<9ZJJ&C&j-,VEK^7eu6qglTd9A)JR6c:K6QCBgZq^%Bl;Bl\`QGT2-Mf\d!&_87-&TImI<Sle$UlFh01[`e7?(XmI:FB^s%ID4.]qkZG;FeHA:@LY\8W)5V/33Jfst(!X[7RjSKFE%#9XB%F/[/+%/RPC:c%K<D?7-(R#WD&/g6X^b9Y"4;E`@3ii+8b\;!Q$*^cqC#fm1/d$,NjFD5VNXl!/*(70t21e/)k:An<J2-lPV8mQd#%/1ltQ9iuR5"/tnc2!I=c7:8\K\djVlE>>tG:m%>-4WE>M2-Mh67<sHG6OfD44?)YsVOoW#j=M67"2LikgIo/=$UD3;er5?DOnNl1%%>e<ubqr@r$d*Dg)McC/UX;f&^oNrT.S\"5I3-k48XbTXLJU=eRR3-P0Yh@ESnk%/_.EU$[NdEO&:;n4bGK00N&AJdm6U<>6+%KC%fSf_/-XQ7!=<pHDcT6sh&hI37oN\+++WH%FaeW\8-K%RN@5sRrE_s5>?YW`XB.-@rU1,=?:.u[-%]Wo[1]]3]1.cF?,#';!CS&jH%D%]f+qD15PeKOe.<Ur?F]E+60fg=ug1`2)U[j5Qfl4LXB9Wc5D,^E4IBLN+OltTc\][F(3+20XUWDm/-/(@*Y\"c\S9"1kYJqNYm%1K[k.<iT596)u(Q+7@-D]=-TQ4X5BXXbAaZeB^Sc<<F!1WWCs'eutqi,f9Cdhgrpg@cD:C]cD49gkbSmU>&=&G!G%Mcla,I'`V36%2$m,J./"BUh[LGXK2qD-Vgk_?;kk!mr@nC=$V#cQ!u890<Oht1\g?]corYbJ,jgk#V9=&[;rp%<-]McKT'88:1e@1_r2McpEgcks%C[p`_d]W"iF6J5YQ5'!XHHELHkY7+\#OqiIQ&1nG8$SN#b0,Gt@YThQTbpgg@E;Qj-+5_!YOECtcXS\*X-+Z)NkT0X7k=mC/Yl3G%AW^TR4BiZGoJMu)HD^/Pm!P:UjmYU14"qu:dkNkB"J\aRNn-uEau*>]C;e"RX#h+q*fW$=D*"Q=Wm*J>bQP+\+?bis%Hr^-TTS5H%X\6QY-;+nba\pJ@FeWf?eC;6F&:Dk>P2B,jSn[G*XO3J"R@N;&pn.mZQ&7[0E7W[;D)GP\VPL."[e!&EGWHtA'/A`^O<(Sh89t=0%FHZW6etjpM;!kN\V,*s_IL!5DW=_YYA<Y7Cj:Gtf50GmR4:)V"Vdh3XKP48Z\-P)O9iCl&!8Sc?Ml$KU.EF6l(kC1-2MWT,OoBR8%aRFFWkhZo-:a+LX,!ZUTQ'PCD$[&uu+d!q(Bf#%JUG3rD#>JnC;qD<95`qo]68k]9jS4`lVO+`5$h+ERg$Jsl[mKU[[)(ZjOU'oU%'kH7fA645TH@VOMb47^=Oa<>!S4LB+7-QOa:O'0f.FV^O>+2$pG%@.Q(dup3(/X5YU/c#@?>Dq@U-W0ZqreLTYS;+k*?IoY7BXnA%UE[s,(tJP]&12l/jrASX_,<.daO##X+sYJO1Z-YDAgT"7fK>oaiXMHZ&H`n[&JB;t>X['&>-MBtVF/Qq@mcjqI@)<_KC,UPSkB3>%\Y1RU`eE/H#igbE*JGd;;Lk;#ZXlQo7-XsmO`8d7'11gb$m2)I9X?u43mi`-9hEeOlnmr0=4m<o'kgQ9"EBH[TjT\0=K>n+O)0-J%R:phb9o*k4n-1&`V5\-EWeHF07$`BQbXnZL'*YHfQd%I`9AQF5P0$:=$WFZT_3JIC9_06X)\URAG5)Y[db,gPIG!W!WPm$)ejQk*%&6Kd#N(,!`e?cD^'(dM5/tL7)qW-9_/]fEkAGp%8RQr'59,\6QTL**!N@\M*\=1TqIBU_Elc5buI59W0=`B6.^Osd/hh>4uq8>D2%QV4DNZ@O]&neTYA3C>'I80l!6EZNMe9gotFOi.6FLqG>^Art-KK+2<P2##\$V5K'ndY'=5Yhqu?Nhn7ROVd8goI'FgN;l_/Zb#Xo%YVcuSCSYDbI@8nEg\'4`+sU@A7":Amj-R4n7!R(I4`>neD;^9,GJ6P6oTJ<sVm4;j>S:,c`-#ZA98l?0cip!GqV_`O>I#>R^69Zq%#"89Ca;7q$+\u,ENJ*/5O=$%>(4G84nCn@b!LA%?&N(lC-HYLBl[cn2&$E4.LQdU.[bt5B6gq5p)!0P?U@0W=4?,j2&<>\I^c2s(%A%>4_BXXcg.E*JPK$.fs1EtatUOk0p?@E^jRMaXH.)=5<#&$\kC`dq_`J,!eJTtWbR`jXkKkVZS'`=:*EG14qjs\[$Z,@5)kXj4f%N(l8Q&9"X/1b7&p*jZj<ZWLJ[(^@V]lAam,lV_J*O3u-*qE%0ia'&R"<^Vg_0ku?"YuO79r9dX*-I(-MXUN+Pfs6;AG!&h+@0-7%%,d,.5JV8a_l]`A-+p9O7lBE#NG(slbpXA`!p@K6$Q9i`.#hk(OmEfk7BYY.G*Zca7gJbE625tN"k\3WDR&.G*!DVQKB4c::9\3iE%7Y9#rVM=\<<jq3aQRrOL,/OReTcm]sfoUs81mjL3e;P(be4@YC@VaJ63K.Ue\fj2O(SF>:;8O=SZ&$p0*!uZP]2/R+:U2'>3UdsB%(+)Z#\d=Rh<3O3N,1P>OdQLV=`9<'jSPnSMKP,7;'8"S]"LGp4i)2hkJ>pXMJImRq,Kt1$#6?35f3eU[eC)_i>dt,_\fAke,(dOi%,5/*#'fsks?l";4gEYqjl7`Y9#-8#1#JM`5*Olr`Mt!,b^(V*@@pfG+A<&&-3FB8+)BmH1V>$ZV[L6en*W0RN7P<!r0f77":MX>A%^5h,iO5X6\Rn<kr9pl%m*J+E'aj^kU6P6SkSVk8I0@@A\X_0ZBWrliLFJ:!0mL,S15'oqU.)Sr96AiZ#7joYMFD4@e#=j&qV[_B[%K];6^'Y,:>m?"67B<q%nZJ,Z05S&%mG,2?<"-Fdr-YkpbeUtHl,#T7YWkU14'MmmtbZ_I^K&*&#D#Jh9p!?i*Z=;cABs;Xf7_QWI%"@Zi3RphEk(--2b5nfV4(D=tRMNDY4E=Xu#c2UC+<]hCrd,HV`'GAuNhDdQH&fVXaO+K#$Zh/*p"d%_a`*+@>2'j"<V4b)#U9P]d%;^0m`+;&.,f,;@V@L&J^6lN:bi6dT`bI`HF\e5W"3>L+eCmQ*1)XkJ782I)u1kmML/ts^;p,pYt@aBTm`\t5n1;]uYrl`8%2L0No%5W3mDSs"*%,8?h;US>g`*(=3E3?<V`K&rT'\Aa4$_Z:cF(KNF[0JUY"+F1Z9qeDB"-ae%\p%FC!Z2:^3LkVqM0c^A$G15At!*ZPG%L(\0ir#g0GCk3t].a]e(25.lrmg?F:)itP["_h\Z!(!<E*Tt;Rq_KiUnX2f7a?Ut1WO!i7po[f&l]V7'!<BuIRbGQA*E`Bbj7n3L%QFe`s"%J9IZ27%F,^9VF4sVWm'5U;H<!G;/KTr_F"RPFMcpG%/"CX_3kW="OC:]#/%\#IjfPb6ZRq1(NViI`rT[P/bM.Ii58m!T%%J+/LXIrt022LfgHNZnk9M8^&Od[Ri4Zf+3(/gC?.7%L)aTEOAO].g_R/>/ss1>rOQ-MuX8p)BqblBqj'.G/+7%?"^lnBG2r19jhF%U^NVIA;:Iq[2pb`:o5gK+Z?-V(`p?[l`)*jR&hE[;j[GG#V<J2_r,+N3=9i\%j`t98>4=V=JLO:_Bp3.6j#WR0o%^aT\f1S7sKB^%c-O"bQJ/MsIAP%;[\5s("sPa[(PDJ3%5]s/0X;h^VS`aQa[CO#\khYtU5#p=#u=-2c"7%XBP++eju"18).QL1Cid-Z'He*I<KR>Z%]<l+]\Zd+d`3t$IZj%_%<2A1eP(YpA/W$%c0UP@TG*L^&2+MNO>7`$\2VEOi^=$-P,7NV3&lPR+-+OA_V<:H&c'%ICP=1DtZ1`>a%rj^$9jM/onL#[M0k%/%DLPl_n'2N!,Ukg"P0P]i3Whl\bBVKJ_\2(iH@6hVIfjmACaHR<AG,*`pOJjJ(g>becJd.KB#[a5qo9AS.%5j([2;`B(&\6(MT_/'D3a5\A%7V%VjUW+&3SdX41j$MLdHA3B)J.f@[KH88[,A]r3JLZ?O`q=H.$hk]:_dd&uP:[2p8iU%:Af);f%?iqh1mAV:#7[ENRn%o(G&Fn2u(>Zete%$C=D-'>WNsPi<%B5"4Bo,%lfMqCX6Aq`L.;=O!#S1n[:l0Fd9KADR8_g.Gg(s-:+@aIn%'r5P(()Q4-EFK%+;(ZoZI4hUHY!jC.=N^er1?H^9Pm8f/Q'<KGA4e"8@o;<c@#CkX6@>_!9D]>JJSaioJ##.'E3ImO8.QGt*G.p+%%07tR29SkiaHuClSqLKK7"S3l%)Z"4[Q#NnI<8cFe3bP`MKI<F4)d53(MFO-=f%0Mf6]&LF[V3h[Z.+6q(X94O''aA7=1P:iW*m.%Zt+E#`WWY.gJ?leQn4.Ip^aGh@4N5$ECe=4L)pu\Lrrur*DP4c^;ZRd:ee%@FMo[@!JWUL16k_!%sKSFBe5F)K#!I`MI<j2Ur#<c%%S[QhCEX&("G-X4GQ9L(631n4oqU!\.6m)^>Do9R4dT&[EVKus0SI!Xe\c^c4T$Q!Cr6_j>sEf<k]@t[^Yn\/lkdH(i&sm.%&44u%fTrFmHtZMj7?Oq$7:^[WY0OWs%Qjkm$;!0b^VkoGZ=R"ai8'ocIC3>NI5Sr;4EcgjSa+8`WuNkhD"r6(%V4<^G&5SOe&/Gdd.2E_%L,Zeg<M\$R\]?\*`.ZlC?;T12?8Xf%d[:dYN`fC=nWdpBpLEH&._]Eh@A+k)16nd^9kF5^L>!]DlFNEWCqWAXFt.*'Sd^R#RA79d%DJ6jJG3F&m#UDj4Ms5dL\B$Q"?BN-S8:8*aDe:J2<1+/(RV(1h7fR%%BL`E=Y:Oc#$;[)/*7%JDrk>Ohr97rs85,JijM`'?Wl,Ik%FNq&2j&pC?8^+E-/e%%q4j/7FbFpZ6C+?qEb)n`l"na9#9I0a&bEF!h@PYeE;\_;U%>=I>b@IQCgT0M7<,Z3%C,e2M:a*qOag6Nf%mOK@qR22CJi[&c&/*LA^`f_NA[nS="_Lt_:?or/"Ss:5Y9i&`e)T%2Eb7GV3AHXWoW!=$"kiB/(FpJ48KF:pb@8k*L">7-"H+eO4%e2+deDe:J2<1+/(%'%hM%$0S'>QR8%m)#JaOeION\h'MQ`,`^e8CT%@82\.`a9!ERl!CPL-T*qs3"sJV'J^[gJhe(0WZi8"A"4d\%V@(2NfoDL>q$sj%Li$iqYF:_S?(&C/A.:mnL,8@9:%_&sWhF#KgUnqUAQUTr(KMq`i%(i4[Zp6ZM,5dPYaXaDr_QCCj'<8[EG5jl%1q,i2AkNEZo1b^<T?&&8(hf;m/(%j[5e2Qc4e+[4>QbSA]i9\tY70r%aAC]9_itn/M.>a144i-J_Ns:BcG=V,mEO<4*b6?:+Ju.D%C#N0gpIs8#6Ri?JURVT?92Oe]pN3LnZQ[9;*hA-ENgOC6JbQK"Z+^IpKq3Q'Yb82CnN0g<pd[6J<tMJ(*5m4bW5(m9cT>3sD!7&h%i5#`8\e,S9'EjFQo$/!#;ai%'&;ck?P4jSM&XT8XLp]jBb=:bS1RJuuLL<1fi#f92:AjBq.bfd;BtURK)5&6Zk+^%hWCNR$&S+Fo%.5"%AHS?l="a^HJd_,U7#0^Rsqep9c1ZLK3Mj'EaE1G%e,Ff'cpKVCc]g>XdJlp\;N*WBoQppq1h3FAW(1@U"[oN>mdnM/Nhdh4.%@oda)aKo];()cY2_b"iGW/$'t$Y!UB>S;_&&EQb`=g>=(jd*+_C_]7FOZLZTT#hI(ZFk_RG>XX&EMAK04Gt3a2G>un]sGsHl<Y;5%[uksWK8>!<=H-n3jn8sbJ+?Q)A;Q+K3`[)'QAe+G#O*ue8L!.g%#kuTLBDgC`C4)Ve!t1dB?NK0Xiq%%+?jm`$.dk$VaEloa,,'(%KIE412BoAc-\\pRD]E.p&29'@,@6!M:74[JM0!0mqMi%G+frmib@MEH31"N@p-<(4a%K\dBGL(.@$5qBJ@k-(`=EW683Rb?Z3cJ]%c:p/@Pi'2,JI^`dfM54/,+KO=$IW<QH@4o:$qJ9^&A^g?pumsWrJItF=@eAta_WVhahA]gd>Q91)p.l5aU=&%Y8Mo:G!bC4ooEY]%pMC`PW?IY=`uEdA3fYA^(:O>T01caq[BU6V5`.P6JZ29o>+VK%h[G.**pFC"S"t#K_NhJSW,,!%=MnSa)#WRLCed#D[MJW<"h(Y>%on1IHK8hKbQ]*#*Vr=mITSK\n[OoZqM]q+1F-a-<F`u-"4cii.]$gDBJ@IB9\qOOVX!]n@5cA.aH[[="-hZ#'.d/1Z"NQ^j;8hKT%["BqXAicGue(K#brfNlU5dnu/8.+%&k!IsiH<StNL>7eL4=<j/b>qIecXJ78)&auIeWaQ@7!0[iWQ=``V'J2O[,68%[6##q3J7KK%T`RBPkG`-gQ@uKH:$N#aOs]:FfE"K-%#0]aBs8M9s*:+dCET;5Lck/X=):?3%WPo.&##GS"POinE>^Z)%p7j2L,,nP2.+-?G1J'R%hSjB]P*iT;bb:$H=R<^ED9V1&(DuIopnC=2,WJ:DaRgaH84G3Jl%k(8E"8O!=Q34%M(G0Ho>3(s)k/RDEt0tqfg2JZ(FalG%TlU^%WW%XH*2\q<1Yt*G&4Z:[b[,+K3JKR.k?8jJ^kk(ABgIk+65WF:/i[IBj^/V]()=VK!N.?hd6J8'89,\0EBHlgSLN7/-CsJ@"_;1%%NhK34dd/QW\Rr*A[ZFb=psA!539%uG3$OLFGcYDt)+g@=KIc%iRuH<VZ]X/tbel6(dO`8<c]/XTZ'qlAgMf&XFBQ]RKtA3OK(8%b%4Ui5DlI^%rJd;Sl7Y-fa:_U2eO)$P:8F.'QOeHCi:k8L$4`p+:LJCb3M6*(*1^SM[fmI.*S'>n.^hLBM0#a\D-PR^XCre%e$^n>K%%akR%H]b&kEaDZ?2e49uB"DI:Bk/L1M(6D5(gOs-AeK#ua7s((JKMI&^=[jKLHlJj3B[NCElhe@a4:B+q2J&!Le6nL:&g;b-mNFM%1!(]Gk9`[D=2^WGLe7*]/W:b:fG<XQ"\u#C;lRj@g6U:=\RFP[]+QS\Oki)YU.eCKrZTi>rHR=8R'8YLLnH4#&-1u<#pBMmK!kW+%+Du9ZQX!(V=9:e3ZXo"ne)IH5:@R358D)+Om<eUT](\"[oTI*(k3/Jb'<$4tTT4p]?QJnZ!TC4A?&m_bbN(5sfN"g-W2&jR`cBde%'52`?Pf+7hc@laNABW$aGVd^!89NuA$)r-rX"LFkP8QVa)9k?'Fo64t=i9BrThGud<=O:0[]5)o=j2P?5=H*ET!$"T@-Cf-(T+aq%(,MA:CDfgN/'-32`IgER%(jgi@g\lJ"TU0<;@NdX)t79shm/K9iB,BdnNI*h7T`Quf]C)LQbutu[a_X.%qp(!\R,p`MRNd%E7<=q%FN9N>10lYoJ0a"DiO*pQU8*:X(dt'5KnY87B<XX*Ao8c>.V63;#,fXWWa%.Zc?PraP_/ceGXp6l&%`KpMN[QjCXdAffom%[87L'\%f2&k,JXFA/i.POrP-#XT_pBIMjr9>T5><=o*k(tTeek:F(4!,tH*K=3a3u>SA6>?/!7EPp->*jF_aY4N[=&N"Hd$C\(YK#=%-6D=%$=P#OY1a<;Nl/hZhsLEr-l#W5CulRn`Zf0(/N.9V9pWm?N>ch3$n:amUX?mq"BV_\ep&j#Z(a7YSq\a?:uk4mRE(cPjee@+.F4CU%8eecE%Y)+CO`8u2i62EYd61^H"^c<bMT(''q'HSI3n#)*gh"J[A4R1AN%FQipta$-\f#BE;C:1%oX^G"psK`7"PLrVdNtsJVb_9.%9\U$$+Dcps4Q.J2>&9^BHib5.)jY$dOoK+\#]Lqu_r77Mq22oRl=4]SM7KTRmP=m-p$OVE`PY<[G97+V-S[8F)VQgeFAK>]R9,J<%_lDO((D"s;2ake3WoY[lB&QQ1"u%=g"rEuK<Zd&lq59E?fg"S@n_F=!Z?ZDiotu_>Cm`'4GN@tCaeobG:<M'kNkXO=V'W,-n<$Bl%FCoo%Xp\)eN@*OK_q@FdmZihr^G'l\OH`dN5Ci.QD9b@',qBl]G<A&,LQkD*\T]s(O,Q:;$O+a8_WH*Ia[q&TCFW,NN%'sChulS<%g_Rr:j]i=T:.I=r^?J;eUPMj<;sJHgJr2*D>O<R/TT2R#'d$7l39?OIf>[Kg?oQ1F"WL3t,9T6d1,.ZHiV'1-6`,7r=55drprEnA%-9P88,>&`-c,Z>Fo;Q7A%i`PD==sP&(!!ep8=HE4A4Y0M'P$AIaInsT0Tgo?1@<S;O<t<!dl,*9Nl="ES8@?1IP*B$*P$X9OgmBR%6Lktr35T.)<U76'6n4YD&`B$lP$kA*]U&f=0g%Jhm(-UWfAS;$XMHf?LRkEiPKR\\EC[5Zc,Y'!=$"rS;g%3Gbj)a25Jr87&].YB%KAb!#M_0jp)tFbiT+6/"\u.lCVE.a9.*'Ip.E;X)_Ju4,6D!$l-_gAc"/YnD@S#Zm=ZHp[EWE#8/f/Vb'c3LjeB((N2:\Xe6^fu?%77ON_2-T&&VPU?b<I?]X$?>-(/euk1=FdGe%Lj[R/a+D[&b@r0ae,i2b>CSi"V*L(\DRq)6H8Bo]K")'n<$a:DHg:"Tl%k>QP\Sr%^Lbm6@1dCTFH8)rZ'8%;9-D<#7lIBHli?B@k8("G>cHb?+3Z)G[],@,r(4#JP/%fo,GQI@o)Ntmk'q!p;)`G]*G7>3&<[m.l^VC;%@%$+$5tU\0=t`W%5q_LcWW[MS$#9h$)$hDZX'pM*Za#'ui]*M;Pm2k5#8g,[F`?n8Foi[(Gq]iPi<p`Qf,p:Y5mA81XtKn0YWE7K%'+*&+$,^mT*l;4f!SZK00;KWQ#Se3GZ$af[ds='X?S]Pg=1eLN`5FoqX6ouG4a[X"%3dSnf+Zt+-4[H5bqRdGRSMK0mQL_CRH1jk%cp:UZTW`1.r('EDe.BG[]k;"eZbsSE^$DVu%9sHYO=%:[2N4EfaQ''RnNBYV+sM(=OUqVWE(a-fJFRHkRra!b_-:P8B+V<kp*F@L%8R3/eL#qBiMmF/:-AIS&dZu2LjWaIl1\3V"'g1]q5UPb`4WX<)jcC-rQ&fSY,\S?ADh9kZ683A[MRS^B-sU"\@_cUF3+`IVdc<)@%>^XL&Etip=0SR2^NmaE$*YC-VO[FrL$5u0r1naC@\;?9sXQ#[7%0B&_*B;]=E!@l1<D%I[Rg$JcI#eX$%3='ME>0)Ik2Uiqc<4[o%]\n`*Ctj.A3f\a6WBFd&TULnRM(f=Ra'GE#W8<hb,q"hj\0I1XP>fuhi^s_%!Gl*g39/8W+r>5?[0:-2I%49Ym1YrTXRgUlRF3Z4%Q?^PHd]q8p47$Ptil,Rpk</"upg"@j5noL8%j8stVS4Bi@:CNXXCN63?_[\#*%.%AV:Rfg/&_4->:>0F2D^i_ERYVVl5VLIceD:]%i.RfG*E/IdD*"BG`a/tC8ot_<l&Nd(7fcBT-4t@>A6Ahe5Ck=,TMWA-0XKi'*?AQmKV<L`]ZJ-)30EF&@`0D$BI$f=!ReR)j7'lp%4s@&gLcb(I+Pc.;ZmWUVD8>Y#WB/sLM1r#SGlu&K.*n*9,JGQ0FDPDVKS)#u,%*6Ch;jc-/1#6g)WtQAJ("rKO@"s8mOsAnO[R5\%)t]P\EL7I4CZ(_O3^Eg=5qk9-`T,'[&KU*l+9N79^78FS9*#j^`N1,2H1:[n%07#sbBqp*N!?LUb"2.IB2D)XbMnnYMmHFo0+f'I%%f;ba<H+C0)MEIY3;lI:f=:po_[):^-n's8M%HUOUEr*an12d^AV`>ZC8*"n4P[as://*N>2mad<C>]j@'95h]=uTnF!\(L/>AF9%?qZYhYF`uO_2jPJgO,!LKIL/m"a?c$A-9,5,:,m(-*[#7OQGYO//ES$TIWq$]#C=P+lJ3\!LiWAi#6(-3&sYaEGj(^*Cq-`,)K>@%8SeSENm/)Kp,_A3Wf9Ff-iRe^`0[&@)<1"qVkG0[BK[6L`,Z1!f]uJJp"6nK+?dOH/DLdP^t/#f$XR2cYLp@)OCbL:!G7h-/Z),+%\nh[-D;\GW'1CTMG7TIa**biE/HfFD0+m:RJB`16U[1o[-bKBDQ4G./fTU==@r'T#fs'RT81,r6I%`r'!_A0MMHg;chIdj1b@![b%g=>,;*:CW1KC,_JVT#el.J0^Gcq6ldj7Q$],2;N#H"nh6ogV"^(m@_sr-n7ia0?i&`!5`WT9UFh2Ih*%1NS[2bX\6aZDbrI&m;:S%?h8m+p]P]WdR2/!BgUCT(*>\+Q49enMbQUb(0+Fed,7kVZl8a`%ldBrGiS"aTl_QY'a?Hh<VT/iRBUE75'+R'r1M)l8^b'\9LO3F%/-Yo3Ed^%<I+`?!q4+blhSl?N"T+"^hi?:q_pn^'iG']r@AT(Ii`U>eL#:-,Vo4l7prU!3Tu]<I_S[i0%>D=2L5Y-R58UlA'PW;2%:;c#mhl<8,>gKeLiSFc/Q-%quK;QX7U=+<B<9RLd=D4.^F5:h^7?4O.ZsF=d\/JF%g7+@b)>/kc4[61f!)]L7_3ZgB0mk5d)$Z^N%8T>^U/h>#f1dVCWoTPcDj*1uZ]1=Qk#rnY*pfo;sUa%gja:a2Iec:C`r$X9,6]O%X]\e"@Bf_[3V_Xn=>kr%HEg]D%Etj83m9bsV%!'iV8GW_E8N_?hOjUE!HLP%npk26i,pZ?ams$MT`_J?4b\A4DmN,+-V4$%a,Dp2b#J&-,fR'A:(a"hU>NGQIaAdppG'46R]1Lr/\%iT!T1fYX83aA4,4`Aj'Js4s(gNJBSM*F9ei)1_4o%1=/Sj7<^@?X&JV#apRo/kGJ"4YWGP-FV2)"a#cg\/JRp3&gs!$)TnLAXW*?%,am)dFmK:S4d``5:kr27Uh.Y[%#ZC`@nW7WYMQ3"qX2+FiA"KQ#jb*rRL,V.?kn5MCRe\JH(^N0Eo(mk'VdWr9(ThfMQZ*]`t+rq%clLm6\5#PeAE(<iU(]<DE3Tm##4h(1>V736LBC4pCIJM$>EYK:.M%%L^7M2Se^+j4Nt4tD(/d*(/jmN^lb$-Q<_Lt_W,HeJ\R3.Q%!50c7p;ls83K%"[*K?6.C;V=hX;G>>!bibI-6.BSU>o1K5WAhd^:NjfKKst+0gO30e9blM#r,=4Z[;ESc8b@4?&ff^_BmP$rdXXu%B#fpA8_/<AH3]HLi't_9`0`]hknTjGJMUaE>CbT0`b4F:.TRnLg8\U@O,gFlgoe&"A]BddLV(*b?5e3sNj^8ed^Z'aGQ[gGhr#Z)%3\T6g-je1/jq(&9@3lZ?gF'apC\d\6Ng&`+!(825oT/G+!.CIu0Ce;/[nDoplfE)V+p6bTSI?+r@SW?KR(f&(^+P1J]O;8LAAc:+%&kfj/CV*U.%=fD!TF3Ag'hm/r(SZK"?#_f=EdhJh(-KRU*XomfMuhUh2,-7C:o3``FMEQDc^;ueM-!9\N"03<lJCb)9$S'u6j!$,%8Y9\^luYuC.?[%F;cUO>2aRIs=cnG:0AFD[Vn4r7:+XH1WO3RO/\DBC64Q7pk6I.g2&,ML$gQ2n00gaYNWNAK8(Yk=/g0`0[!jCD%I<4W^hqrQ:G4RT#M@=s*mW;s4X)>e@_Sr_YCP<.Q6)efhSrJu-)XI(J\kqpDX+JY[oH6c>M2;[OkKs$<QmX[T=*86!"cgmr\B+c$%qXZ^T30Y,hd*02dG/s+(0n,2?cPQ?:"=`BTE?WOYYeZLE[6+I`XQ>E/XmD,R[7fnb6t\)#2O/L,GqW8ADX+p-mOH,8:8DN$,Zcd=%ih5,],#Jh*VY;P7S*9,UKA@mRDaKX\pi;^;B.CBk$'2e"JeJR+[tl<J:WRQmQ>[p.>LclQ7)Yc<RX/B[V<]u5eD%UgQd"hJTV(6+%]dK$>hU;q.=cbT2858LCrA.1(;7lEuS[J67=+5YsL62P*#p<#,O@4-!":*M<`+cGM&d$8()NegrmV=kXO8PXm65^]:WM-IP=-aK+%;QUQ&8;Ukf'6%-oAI`/hhP'kCQqlIePZ1m?o?>NX!i1If(I*6+BIp_4JbMF%?_1rMSpC.mrPRaiqY`*Ea>T@qS`Y&3BV9N_(Wn,0%]@/\$ZVe1Ok^;4&"1\ZigVpFjZm5h>UiEn,n@Jgd,V745_#ZVdEQL%:7n\P<OXc"sM'l<`Jmfe,[k*HTOaQ42Q*d?kIKp*M26m1J%Hf^AN)VWj/U^q?n6@&Bj!kFJ'@3.ZcnIs@s<T7F3FnkR<NWD=.>fU58k[94fmN<Lk.f(1RVC4-_pi/a!i9i<bmhA=d$)-Me*Xt3g%c*TIbG4FMJnFSZBLd`V_=gT1!Ge=n>V3Og&?Z)5$c'j-0\8r6@No]2<4pcZPAE\l+2EBtnc3kr+);ZE9B;GIf@-@*@:WhHDF,b.P%k.>1#g,PEOBDKeD&+B]B1(OMlPhu)X]N1EX<WNdlRs`D2O0C-U*CNZ2;(rc)E6Q,GAGWtn[5h$cnkp^q/Y\jnB;RN7Qn,IfUFKir%&UYicRjC?XCtYHGn6,QcVWO-M$&;TRX*qn%rL\k7U[^pqjQ6gUea]&l./H%4XV(b:R+t^lU+5O=j[.!Z>)N>8d-%4P/S%lZ,\+N4%'S<X68q%1Y0;gOi=Re8>-LH"N.Hj*5^m>P"8l&b$`A--ASeO6T\T1oeN=9-&qVG+)j:=k]@02aXO<1Pr\3-%H%dL/Yk`J#05aR3<%K_.hWcD^#mg#I;[N(M3&AL:eH.8N$MDd@(]m4B7".KNPh'?r!m#?1k/UG&6VEA<lD\F40?,:q+Ym&AS.l?B2keQ:e=hLf5b%HYS2%][k_5:\IR_BD7oc>jT7TJ:Mf\GSF<7Cf.B?=j271X5HSm`0s$D!T__0"mB`LGk$^h1T@?EbjD/I,=;C*bg@Or;.<XLkhSAfHa!P,%@-O8ih=oGa8?k8GJ4rb7$b68:\:frBXmXu@7S*r"ms(:r%bF[dBpNq@Z>Wan/qjo[]Qmc?qXP11l0f_+_;0ORKBHN*I$@!9Y^WeG%J9RqX*t3)4o#%l(P%-$p+r=1(N`n,m"gEQ)j$\1&+=VOG(PI$BH0Q%p'7<f%n]bQI3/j8cU5Y9sOI(d'D"M>VfW3#`#+ZXO$CQ'<%f4^(Kjc")mc*VnFn-%@L#^tbij">%6)%WkuR$QA2Mr73l05eUsF>"V2Z'c.[AMk-ek=];;.WZ+l.EW#E"&E87n`+gk)K4q'Uu/eQ%@#W`2I&,b(+-$[=Nh;rWiapi)'.*_=f=2p05=&Ej"l0"e5^'(@(+E]6dFg1/n9$QIWGWOMA_%oVHqhQn?;,H/b"%^*q9h=tkADE\%T5Th22h9u&n#s7SrNgYq+/Cnbb:Z#jpKA$97aW]4oa7>J,T.o$<pT-a_3\-\0^tFdLIEI["Pnp>0`@^bbTT(ec>e2k/s'.'p[%_%%rVkaDeelVCGaRbt`MY\+'DnsV@@gBleUs7RqJa3aa5M;h`hu'$N(:8=MOekS)&&CDjMt:&9W?Yc7qL"!@9']N:*5al<qaI+VeB?e%"_&R:DP))%$ClL]m%JbZ.*a$+I%?7(ce0_mZS??0j4ALc6IQ[QfGJiVKTq.)\tqfUjt(qp!9Fb30HJrjA/hFD>p2cB_E"i?M^'K]%(5rtACWk4u0h@0fcrl8mnQ".GE/F_O6't+"-1J\d!Vs9aSPf&KGgRKhK'TA-Fi!+ZOh*/5&]BGLM@/\g?/0:5@0:lLW9`s\80JGp%Xm$T-"cGsB\l7@8W>5@_V\PF?2oGIUI@<e;JiH2W\=pFH>tk`iLek>%^gt4ro_*>e4R/iM8FBr;a=7K9!<]="1#_Dt0fZbOgP>5l%OC+M1Nt66kP`,&H(usb(IoD^J4c=5O)JA=qX[g/&@OduQ,n%OhiI9(RL<KE+eY,8)f2gc'f#eYME1jija;P\#CPgN8M19lP#Gaja%O7MZ0/XVIK$s'T!1^3WKTfD=4mbAU30D`.k=gTNrIG<[ekum(<"s>o)9[=o1AOo\2:X>c<$f>X4r-=bIhkAd6&s476m>[-2[U=`s%0$#?<]oo%e<Z;'Q$FWOf0Z1i^G1OT'ZtR"bMK7K<eeX.@6[([sQ3=p$e!&RVW%K?iK"DMZ,Ua>"QB[q8BnjhPR<6IZ0nLUQe*$^5%I\c-,[N@jc)bD'MU8md(s)@S,Iu?IWOJ;bE\*[PZK8"mTF*fSS=1lj#bgHChJ(5V<0=j!8Hh]7,g.97gBL4`o6@V:HQ;p*S>>hff%ftoFrJ6qkiXPfgDh.6V-"7?[#p.%hMRZQ7:E(f:A9/1F@G^#AP_K[o$4R2Y)cV9V6_W7Jh&`Q&oh*0XL6=%b2ffV5mJQlnMaK?FT%+\M*hkmB#Befr/FNYDbU@k+/Yh>\)28dC5>D#3S^)=_20&M9GA;*G"QUsu8brNH\i],i_2c>6u6\XC!h6CHaEj&>G^4@U29.>c+A%oo+82;o=+QDj,S7iIQ$79H]ql8>EmQP3j6i#L[0R7im4n5-Z`2gTpm-N$D.8)13Uf3H]fP_-)Mm1Xn2(c*`2r,S^Go\pLAHnUXUc%=>srfBWcDWUm1#!R?je0^ZkA7.jEG=`O'g_T4qD@O<L1,]TSB8MQ.=[JOhUF'LjB_b'YMdMApkAHJRo?Ut!n=KqAiA2gaY`a=*I:%!`VfFL0ir<29dPWZsq<Q&\=hIn`jY0Su$flk*NXSjE@u$oZhqUMW_0]>'(mZRF!p/T/<%n4T>NC9*NnLHCa(pLCt!=BX4cEK=8.n%.YX3/j/l@Jqbre9QM5bmH:qnKThH+,Gl$$b7uWX62/=E@!5rQAWtRiXZn*5+7E!u7fStqATH'gre,g4-k*_E%=hU3abF+6-=Vqc]%=oR3^hDHXgP>&r$Em!2`4Wge,MX&FrYJ^q_YA,/Qf"%[@!s@diI(Ljf62`Kl3J$lalo:FGScDWK*2n_I;@q,R$9XA&NEtB+*Z/(-%9<>!i].]dRQ.?\X%Y[C*>2pX_lOru_jk^!KR(5"8C<o&tUg\2riG+S/!@\u"Bd_UQ#9j7//+$X-mejS!i^DD!\iXh4>T!b-/8DUY%5".TD+*X9qE21QF`a\U0)Yi$RhcdaIQ`"j!3,8BIP<5f/X>@"O#@"5hQ>a4W&P:tkLr1CTjCeV[`.g2D]V:Ufi^5DVDTL'c,S`%f%dO3X%n@&=Y5*'AIg4#s?EjMnnE%E'[[QN,eG2,Zec!e/r%`l5ki?FX@62@5Nkhk%)+P(g!N+i7/M";NBD#',ZZ]>\UZP)GY8sPci%4VK4?J16Tn$):Cg/&utZ_*?OVQ*W2J!R2'UrI`_`\MS'PjBblF9B#p@(>Pi$2oDGHa9Ru4K$@br@8lAt"W]/Yn2h^P"c$JI".81^%'ArNbb@u=';,8R6>"0eVZ/Uj=1K"4rLf./Rp>W7kdr@0GA(oGg_ub^f<B9_#"pp+bZ_]YG[D^bb<N*'KdTN4LrpK$?$P)u'd?r=&%2>Sg5;jiNb6&(4&p!r#.'ffjpPu`JVJTt)\V`,bE+ttb&IOKcR,3fMp9Q:R--g9ts7Jk&kIm#UF3_CUuIXAVYLH'l.FD/F70s!:U%+1<`*ll&`9c.^nX"4`ddd[Z`Q1(%5<a]kZb;_iM<\MBEbCVO'h9u`E,WRJH?cWLm"d&qX`F+sl.e>EC4TL<>e&9OPp%k#Y!Y8KPq%3l*2ts*_mjB]Yc2I>2roDT:L8VR+o]f<ad&-Zj^3R!;Wu1rjcB6Wg33;mMc54.+HUIs%S/j-t?_Y16P#k95=<1#H.B0=cb+,IFE"%S+;6OdC"d\QUBCQ&Xm7\!n;utoL&1joPr;(Z+O$[)DrYtrD;N-Ku,Tfg(^\66P[U(JO35L+4&6ki35a*O='`egfp8,2^Jg.&A/S4%Xb"ft$u/)dh6L+H^:[`CY)7^7clV]dWcS+QRG34lI(4IL^I=1B^%6pSUo'j]\:;e*3Jo(Vk'urTDor_/S=Kfk5Yj[&aVIjbW'Cn*%)K"(L+pIR8G-e8JO^0i[b[oI#dZ5H2&G"f'/aC`*$a`KuMqLid5U8j\k\d#ji*ImpZdTC\6'eL;+\MIq3'#6A"a\QsZ]O04'%%>h%m4:gF1O'7)>0*/f]]n<_&&*7ZOJ4`rl1aGRlQ2RC[Jl@;Hs<0r93>!sRDK:Xj1pCO:6($f6d#-9:,d,-m(qZQ4bA[LTEmTGO(a#X%d)_#XD3X7Rb">gQKPd/_H4s"r+?#)PN'\f\KYM<JfLH7-p$C9+jkZCNo`c"ID!;sCTs#naL2rJEI.ej61<nR.P]d]"#b/J0A;"d6%iYf$C^&lADB.b?S8/dRmPYrEh]XoCDJRjOoT?`O0l.-gedY)=K`P+!(_A`h;>VIfK^fZl2fs,UD1#A7"H-R-SOf+]f*)'@<1"f^$%o"k[?7s4eXd5"31<&Z\0?&Q+:$tL6pDiEO""VJ=j/Csl):8o0,FgNRlNoW9Z\6'GMAq4+\l7)P@n@04_32YA(=k0n5q:4Q\64jcP%kpNdAfF/,r.uK;0U`e%%To`<qJPgG9$KQ#D3m23Cm"XLGor760ONVH#->`uoj4Q3jg*'$d@icF\EQlb711$-fMF(JRs%B!c7['T@%^M5WX5K<UV2a8oraM8SWCM*,V,2^eZR?m1ckO$2'a]FZ=mI:cjdDk)KA'gOM(CALQ9%WJ%rh,NIFaQks"8N=gNtt<8H4-l8NgnDO%n-'S(P6*@\dmu]<A@mr!3k$R,4_g&E=$AXC],L=Kn=oH`VjQPgYpuMeV\i'C_rf]O<n2]PjNL=F="Z7AVQ\PhkifVM.'/MPj?Ueg%4q29u0KBB>^T@$0cH_CIFESY8r+O=hi1ck1F0&-,e:h00&9\u&@MKC^?`INS<D+tEbE?4#+S<#qhpXa$$)/<6Zkcf5^k/c'$8pSg%N3+iFmOXE&6$CMW@,l[CVPa$]S%[\'14,'M+b*NE!YEt$pS0hoYG\NKN"WAA!d$(O/!,?Z(sT$)j,A]WQ8_K9/+A#TqNMT\Jds$0%r&IfamagI-I50hkCEc"$dAHg(Z5=N;W(aF:,NUTnbJnA41AZ!Zr2qfVfh5DphjD!u0j-oQ4naZ!C9)529&[&);TdslNaX5X%Mj\R%m'Mrli+Ou5RiS#aetbBQeLdR4;19e`).$M[muK,]33M4/RB6YPF,pr)<^2WkPN58l9L3oR@q85X[)0mRia6#/atq]f8TKcFq<*<i%6bDV`),!?Q&(eek*bdt+<<dkgDcB2d'kh?U0QGe`XXFQQMQ+oA?>TYt'rOqf1OBU'*k(%-8%<"cP\[`8@*FOb\`U6,l\o><;NhSI%dQ@DL6mEbKe/$Lk>O1g[j06H63,-03SFPaq@&$g%C3Dsi1l"&S[7"OeCs6$rLN4H21;Pq=e!L`VqPqm?"YYs4i#IRuGts"Rj@ZGe%3qB8:3fgNii_&BfCd@L1O(O<64qIJTH26u%_BfF+WLBT=m0R9HceiHdUTG;/lB,p4Zc.m+2E\FoROMAPk2Ej<A%'BkMs329Gk7G<%FL+GQS/m2WJ'8<L8C@.o3)2o<XB@Z81rp=dq:XcRopT?84?pkYkDDRO.b6pikCcIT:.KG3SRj9+"]Wa,j*<tdHO)!mAHZ:n%r-#e%^,bM8'qR"cLTuh;NICF)=]9<fp0tsIc-1[0-Ie3gYdN7aMjWSc=`R(Z*u?hlhelREXu$?t^$IH?J/)`e]J:f2rbs0hqdS!iH;`Qi%2E48lA;(HgUA58H\s((b>#M_JlJ^j=T2!qhI@#ti>:t*[)7!-=8=AjBr"<knF.@*o,#c8@HN"EAqA\Z$SgUh6aW0M35l<,H-Mn9k%TXm$]$\!PN'>^!GU2ck/!#;C*E/tP1hL4hlDQ\_g%[e'icM^)B>:TX?.UFWCFen+b-uZ]Gl$l[R!b)=]3iJ%(2=:u(Ch[LJ\,$,m%`QdYoT(\A-+L-;ra@C;=2m$F0ef34W2<?@p%*_4mW(9"0#6El03!$e?XZp1SJ@W/p;T@aX48JRu%7#[aRQQ+FFLR<B,i\k,o)`i"%+>DmQ3NCf,crkhs(qsWSLa0r[!#%$P)Dh'U\W`NJmgh(2#eb/Cr+-iA%3_;[c6I@Q8?\6qT+dJ&%u:.X+)VW?mViS!OMV`j2?h8X%lV3[0PG?p&l7g7T<`uNgF0!t[&bJnu]8k\02`5MY#E"qrGa>PQo/c*%\bW<e9La8JD-u3<OVgeCJcUk)?6\R=6T%HFkN:#1+)WFh%nM6/qoU!&^m="Kmf-W3G\$_Xd="]=NZKg#f/=rprmXr\QZq`G+m(_?S`@p]=42KYDaIu.?^`]gCO#)h"?4:XB:JntH6[c-PDUKC_%B3"I;Q/B)$,m`X^(Q9nL?md&Y+hDNE#MLu9&hWq-UO9R8g[FTOaeP6G,!r[f':nSnY0"er@a:YoLt,A&9`(3P!3PD`g4R%fh`h9q%U"Wi'CQ?%Ddu.kHN$>VlNO&;4(oR@<`&N7$Hq4[7$HMhM0(Ro04q,2TFXcl:_!fcP19rV`DJ4d5nEJ6nGjVD'J$P]TJ%M=2lHW?i%M,a`&F<Ul\N($V[)NOfeniPX3drKEUd;:D<f(FlLI?Vb:+++*WZtVN<(.Rks!0uq[SqQOm6O()%$/FHom%X[aT*k$JP[)poUkk3_%ULi%%7D[(V&HeNtK/Kqo629:KM$FW-n;APZ>F8#>[#tM2B90==-Z>H4Ihs(WGD3m&%$(&?qOYI8#Mj'jVt3U;FL(i6cLO@aI!B/:%BhWb,?B'X"'FpJ(?B''g1">H%nE2e&k(G?Gn+Z/83-`*UMt(828/^ZX`jgV81g0M)BqEh"F+&sBmieAW.\*=S1FVAPho(+%U-6n7%IVITn."8k?;*9_$CEC;A?%E21-m-jcQI3DA`I[lakIkB:=&1lZMNdiF`JJn'`I9pUV<.aR`*X0Hr7<$26[tNE'QuQD47*4[CSiut%3fB>AAC^u/\baN"01#R@!G.D!l"NTK:ja=3/D>>.B""6c/L?>!FT5)10;hR?1uSfce+++MOt*2Z^"^)Im'!ig$k!Ofn0,DGVfJIp%7526d=r&^Nr5SqFI")RT>dqnC'R5T_:mK,Z)nhhX[JpMTi(tL=)OH/3qbbRlc0#="O8MYQ]L#PsY8-aT^5^kD0]SSb=84\uN+k_3%/*ZNd"uK)TOJ@!6nMj4;TR^ld_"M6!5/p-kj,o9\pX-[aKoh^5,?P)Sp18LS*RW!$4APj$UG[2?17&;F$XNQArH(923DoZI49U=!%B$9>nUfo&4G6B*"R&lNo5DjEZ)s58:AEcXNB<@h=mo_Q1D2rR:i0F#FQREB>EOG,Z+W9H0an`K.5d#8)!0&>VfP`=8&9h"P&*7`V%aEu,2fN12i7jnT.\_58,`QsULFX1n^F'q&l;"Nmn'KSEu_"XMI5,r@+*ue@]&gWh'*0Xc!O&j2>W:-@ra:5>ki^Yd'QL";;:%OaN%E4:<G=%pg/!SmU^LF/.Z3'A(.HdjAOI6'o/m1F9ZL+3lMNen$pMhj+N#OGps+nieaf.mj#dI4h,\R:K^a03'"5mjd)Rni2McmV%\%C3Zs&l<^5eGAt^mI&(0oA1.a33X)dLPC9:X=X_Cs@c;hk_Rq;ZB,qU=]:DC#&Ch.Qd`ieo%k)fd]9md0=m&AEZEIAWKKm?'4%,2[%=`O,)Z+uM9$f%5?@el)-W6-cu6\m`d2H$2g,S\K3*[Y!U<!.hiY,6Q"_:"cJ#aeH%U3Ua#Y>W=<k&h573TaKq[MsT`BX92tN>W9g%ockd0Lhk+7E(*;I'<W.d\d(\EcRB,IfF[F(a5r3aBq1/G8pIqIZ='B@)rnodI;ET\e;0!fkgR&8VW5=$qsOEFFGBTsOGR[hAH?lK%iFH\6*pGHoD%M(*e#MCo,",77"YCk<[cSC:An[Z!>O"#8(I'HV!T(6;2CMF7oo:kAY84q.laV]#d=8i8B^bBI,BY05b8$\c!`Zug%Bog+79QO:#-N*JoW!3T2i.Q4!ksD'Dp3t7HIjn;B7)d]S"cU"">CM$N]#D1TW^<UtXn7qu_uK$DiM7A%+3I&r>h8B#,Y`*`>"\Zh%nO"D1(j[B)SooCC=AFeI0T3NjD=$@@;@p5"q/]!:$Oj0S-@r6NL=E*.]F_YREJMDs)9UWX8((8HJEj0",WR%aDPG;>PGFCae:Ekd%8S+I;o:4*FfI643/6&7`TGR5O<I>=)Rm`1n@K`EC=So&hD<0pf1\=7ZHqhqXi14<tP.[;[Thl*W@en.'DC29F6kMVJ]C!>O"AhPn%R"%m,InogS_^YW38bPArP5Pq-X"7Du85*ZRc;+u&2>6fa]+Vk^Xfkg5)fK%9qq%<)jPCU#LM'V(]Wef?*)g4sgFkbp+Jqc2rqc,g%I9j>MN]pfenFY\b$f$&d.>n.=7[t[I'a]uVk]@Bg73+i<W?F^4dk\?VH7cF?XYN=4L@gUEEA%R[JcLoMPM(A[O`gF8Z@8@1SOs8C%-Lo^/[+7q@eWS^%Jhh[*n[X$NqYAB`IL*0k^Y'%,TV"9aj0iqq>A-kT@]G,dN`S>qkDq)j^n_l/#'WGX[*i_gIib>t5H@S@$oh.^%g4O"SObLU14or1Zb7!!jUSg-6)BX$q+[)Bb.^`nZGA`9d5qhNs=_O2K[lW=>%&kNL<`6UH$q%>+SRYWYbJL368L>J@C8?m]aoWYe%gA.JnW(Lm#DO%3A&%$Z^VGfb>SrsA^N%o8_YRSoOFTW1M6@s0cLSQ><URaKGND4,gp>"WO=qm"D>*[:J(46hu/$3(W.b$OEU0hm3%318t%KhHI2kA9O8Ym53-`Q-0daT6A6WUEAC`$mAlpbNS_Q7P6Cot\p*4+p%e%&nt_q/BU;hG/Dt"AR:fh:$ncK840NoiZW^4SRQD%HIW+7[ON+(*F[>_AfVHDM)jD1:n0n<9:TQ8)&;O\K%uV:G0-CO;;RGf9,d#28tl5eJ2VebH.0Ms=2VX+&G<I+Mgpb<BNg8ST?a/i%<3JJPlt4$Z9G-bcYQl,@<Og(C'C86QDj-G,=(lZ6(,@ETN09b#E=tKW=@dk)PH(46TFDP3O*$3g2q/MYW@aZWb[IolhCNKb(6".U%THYje+$7WX.@<:;"ej95,<_YqU:L&c,3KqN(JRnil^Rl*p>EP=&.S/pQTs#'":H'SidX"IhUG]h%*]&%Tt*Q]s3[(/m=k)*RZ:0E%&b14+X0@B=l7t2Ze$8,.-#IELqE^c]+t0NbQOJnh'%(5qCRdK=GuD*:Rf6Pd-a/S=\jQDdaW%`5$Lq7*V8KpVPJeX4"#=mpaVZ6L%L:J32*\!h&cjeO,@YjAkYCPNJ$C1r)-rU.]6.Dh/C6kHr/s97!5VrdFI9ec8C+s9uo"i$%#YpV53".1]n:afGI!2o33hc8fLgOcV%CbNXg*FjdV$Et+l,3sjZD#>\:nRqhH?&-Ma-uju5`$:m3hoWXieNQedh_*AFg!0*`.'`H/5@kSeYi/uWVr4uq'4[Hl8b8lP(t.!(%1#3s"r(SJ7[4DeR-MY5n0H(`[\jT&kZu[9fa65PrcHrs*8DV8Z(o02[E%8$<_,nQH,]#9C<o#MlcFu'^L*<'U+O$%U)!4C;1e/E<%CFdpXgF*-)Fe(nkX!,5Oc&_0C@UNCpTAD?lrKDH4)_]hp9?esqD6)jpjJA.ec0/DP!Rc!'"icAaKZIuucItRkhLi0]l&(59Qo!<s%@;7&9j$\V`5gW!VXIW*srjs#0(re\_-ptD>A/PQ=)X$t\SsEp#6t4g^PC,AoAZW0"MF=PXEgnF,PmCj1g)n0:jX'V4AhSZ@/3M@s%O3.u$[Rkg3j@!hN@TFSZ^R1Yc/16RR8_+.car+BiXH]6FNZ0f_Br>h2nYNKl;klQl[(?(.=FBE4+;J.uMcJT.#)JiloLGm\nH*21%q@A[MUMIRmBfemZ+-Q)&#_Mdg]FmTaAmp6`A/O#KG2f]+g3YXnnRlnQcCn:WJ#>4F.EFP"U"#j'gfc)i:g5.@O`?ub6sUY#+[;&`%P8sVi!]Iq&rNSPKFLehk.]!5[7m=-ECUh5I=igE&mYH`lJl;L\&$Gu*D![9;amM4d.(MKR(;L`M;=*RF58Wr8'V)U&Dt3f31mhTe%A">mY][V>+_km*T\o%.XQhEf<@Sf:G<i%r>[3os=n/K9hoC.[*F6J;if<q%P*\`C->>\I*?@n:^lLH7,ZumEQ26-c9Kb8#+D^AtZ%beQTdCk"@GP8%_f`lF"c6a5Td0>Obmaua\]I8ks07$=XR3b/,JqSInOpaM]>)ecpaiPeF-0B,Do@8'*m&PZ)toX`2hm+*9c(+RNg%!.g\N>nuI*phE"0'D8bLC-hd8d5"AmC3J$i&4p-E*:YCjd*bZ-'KA`^$OIgkV%0uSU((CnH'mbD.MEBp,p&sNq<Hp;T=tW<6fVI:%@2CE"`5<%<6UGr;OhEl7nLbAA=pLCQlCjhPjB_>W+b)@(5J4a%K@GP=-<p*H>FoK1eLg>S>3&LOgbN'7oUI,AX&o9?b:*AFJTQ\g%gB`Bc+1LHuortga+t(ACCEYd,jgP-37l?pV\.[R`D&U@2F/5HOb)0PNI^A-q(/I6]Bq5WDAI0Yrl^P9oBS)%#'g!IdQt4<Nfs]@S%T$ME%HW"C2kr@Zj=UH$h>?gVq6=9OYM^;6>aqOmBkc;?7n#rYNJ!>P`p@C0Q=KDlM?.IW)9(5*qF]"CUMu(B+6IH@be<.6('@[;D%,7ZE;L`:Bo7M)fprCm$>HKjLA&IY:aJm?>[e5)VfZLRFrkB.P=BL&QhqPED..@*nIqmtf/19h_b(_'?lIVOf^Ph)ujpUA4:]R+O8%8j]WX.Fo[;9%/,!,QBus)QYe-RXc\rQ$a&cW@eCS@<!B$"aG`qTA3/$=iBB@2C3R0J09jfG](#XkU,bLp_#iE;E3Lg:&r_I@::j?%B_L>FO]0CPPMek%?guKjq`ln[%nU],3@HAfHOEP*V\\L/E<727r-"^a\,0Cr\p)I):70MG@f<iCf8b'uaT"Jo%0YF(CrfaMIpsYh%AcL0_*dX?HGt/OO!>Y6?c)\h.lX5?KCfkhnjRM"o:>AcjhQ8t/4`j\&A"j^9J0HkGl;;Tg5ld]?.#[0P<-)h9\"Fk#4WH/e!g)26%&oMAE#!a<b[rLA$e7htikt`Vi!n@OIB$&LA<lD,=&Y-.1D((0@LH3G_cO\)65[9^A<s7W3q,E6C[_SOuGYDQO,6i<NctS1`KYb@7%*8epjS;BI<X[`k^djXTInH.O(#H+\_;]-#'S7;d0F@E^#i_W^ViX3PJr@Y%.@kt0oQP90rNRsd4i"(?sjq&7^;NO^#IR_SQ4oB#o%:sI@%ggXHb70^`h@P/*n/t`;L-PrY7U?`+`3L<EH<\))2O(_*j+EpY#HKM?Ne?pfcg;h=fk\(?+rQ>(\]DEe5SpOcuAc'!iSiBZT%aY>>I2b!PB>;6RVLAa26Voi'CI$o^2a<3=6V*NaQ7B'V$i/H;4\XIGJOcqmf"0*(Le\MqOM&DOEiT_Hd4HM//4#2`&=`i1\NQYI<%8K;m00(#bUVeY<#;[l)G+m.Y;r;OcNSd[f5KTsZZq1Ku--1#QKlRYIA3^'1',I5m!65a!bK=&bd,ZG0F?beG>C%9Ite.C2&Z.8dY%'F_Y=]4cF1kuMNDDBE>,WI>,R#K'<.j9Uq?B5.W(qX_cGCG*%K)Hhor(Ud_AIM>=sXKY_"PgL+ZH6K^G2lFOVT'K5n/t\MHAM?Pq%7S4XaQG($b6CXe597u-:S2*a",1X!HG/K5q-KMIohM!.ei-go@GtemXn7(Vf)QpJLLraQ//'_6`7hu%\2X;&eP7,giSu79rG/$4>%/A6unU9K'lbVKgJD+cet.>oC<e8kZFGQd\72D'(engo$W<`M2\C9*jUC<1"*91WhEWX%:>ZXAjX6Z>MS`LhI\5$=Vil<p!&Y_1BC%,E$fWQ7]#HJ%EM4@^5(\DD0RHZ%/Q.CmY170hZbtU9+/4-8YXYnd<@l*Xd)eE\4TZ65]-,5<P5ocgtUdL1tJ@#%\A8,V?!0FTBu,%A*@J^COD-Zg?UAg?^LcXJp<&=*?'8pO9Zh,X<9rjjY':ImT++X,`Y84m=rlF)@]qeol6.U,A`@0>LA]-fI:KmYmjnFZG"t>$a5A4%"K@PdW;0cd9\dJtaK\i1$%aj^1W9as9`@[nPinVg2D7&mpemSaSQOK1',SX9g-P';r:DrZ4^0[]K4._o&Q:([WRWtB&Wo;qpXOQ7%TqKBrj;mF>VV0Tm<sE'Gi_]/FcMp*>mct2SiTW=V-/77^6V?s?[oLia)p^Ce:#/Ys/E$&YTU"l>QTfbuS:=07kdW$^1>rX\/%"](%(+s_%'X>]YiQ&Mrb'o4o6P`bKaD/^E3(f1&/+2nn/ksrqH?AS5JN[M2F6.I1X!ClEj:`N!TLoLNihi0hK>0"oC4Q![kO]cB/QaCh%N+JTFG$s,Lau1+O0/pg<<$]s,6_I*p^MeqoMrB(A$%J,jkH0roDDR%JNU)II8r+`,[H;t>alUqXF)@<?jhYdkj_V!Ndm65A,WhPU%:kYf4Vrm3h8b*m%n3&s8Kb)ap57VgXip>Wpfam2@<bc[*;HFN']?=75%V$ODBIGtM60[Kj5JO0$riR!sl(;"<Ip,/;=t@ZnI9UHs%&4:TO[ad>A<>>:tNRY>(X+s)i3;%PHXa7fhp68T-mZK=pY&>Z_Qep8S8b$3A$Q_\gb>]3ckXaccVV@u7hF`_e%]63KLna?J<]qnK%^ofSP8T@GI35j7)jjm6_F",JJb>Q]=r#ER:9+fe8>SD:1f")])/6PEna`)/61_8%R/B\[#g&c?>kWeAWeto;A0RZ;/metV+_QfRb%JJa>jihctIf/NDRrLYUjg0Km^*oa&fm\]=<[Q>!+g8972doQY7AY+YpluhkaB<,r+GK*?Am,J0g^dD(-'o!J9bpM0DQZi=V\YD\%%I9YmFiUCUQ!V?_cXC>;L"h9%A_0;,,q:/Z[qqI#[_QoGJFAM;=<,l>SKOhZ2-mYgX".WEXj-E@\18BY#Cp$W<)(HHjZ\K=4jXNt>%==.$&dl7"MQdk@Pp\QS.PDVp,]VI1@!A',.<lJHXP:#$SW5=-tQ)pp?$ItACh*KRB$DOE9a9q^RXO9>APtqakX>&Yr*R,_s"+#tk%6@NO4@LA3tC,cNQVM`A+Q/e!pi6XKP<$Qb<;Ln?80T^pjX-6L6Xtn6EaG+EFlrjD6N.LldN1&sheR:l5nJ!5]ARIi'fq<]=<Vc,B%k3h\R(0/L'G6.T#T;7j`/<L`gJJQl"2CP]MOj>7%l/jAlFYbLFaqZZXiD5Y\Nc8_;*@*-JB-0$X3I4DD/5a*RPK62V24Z)5jChq@%l-$pnA$)7e76D6^WJT=5V)>D<\=V:,&1a0h5?q:<Ac6G/Q*!&Uj_Cpq)n(/=CX5>!QI>TrC*)\%K3F#e;%1B$?>A@0s.5.7FQis3%7hX0?F%$'fpu?J`[XLhk(%h]9f$\3m;;VSF`C"N5hRl[L%[Q"*5c+ckD%sPY6[^_@.QV[F9+l\7U5NXu;]$LS,XomO<TKE)Uf39a%qRB6)OP>-e;(F^\PGWQto;q4aL*L>#>?@/#4b'\=B6T1%0YRtTD?dTs/%_&V`J2@hQGV/->Q7K#XXMARpT@\NX\&75VSC\O!q[!<%\N`ru!mFNU>Mo:$MH3Up\eji6+08UZP'.--Vb1!:,Hp]25n5!fj!S%_UVsPkr4kXdIQDfG50$sqO$uIe;i4cd%T+8LCX]-_RcOZ1%LTp>6fUVNd^Kar,^Uo6k*#6aBJkg,WcVOiXc`?u.4!1L[q9I_lERq(Olg2Mb4g];+HUV>CRofT]halbTIqR+353RH>rhYV(Q>i_q%O83N8.CYo+CEmubcMlES&sJR.T7^BfVWhu.b+,Ii5]m7_31l03Fb2M/?u<)IA+.og;1cT$hlaurL[$5;3D?4)6p;G>]jF"s0/RF]%N@Z711Wcf/Z.59QZ3n+AF5C$e"81EMJ6BIOe"LcI4MfdiD:D1=\/m:P"iB3`L/es#L$q[iqM&/K@>S$hh.Y,JB:0G`Pe2,ro-)P7%@\?)$1^PI,">pcIo28i<s61EfR`Oh$=X$$1LSkECj:Xc`:UX<1,ZQ!;Ks>i`;&jQb<KK3(V\]b5N\4?u-?r#:UT(NOKWW-*R8mt<%'M]FtKm7J&PKj@uY`^"/"WLu7M^$4-;ffu%.Ndn3=+`7Em0!ci.S:.4fHQ0T88CG`9,VE,Rl!J#iON8]ogH)98[q<c!4o1mePi[s%>u^]F@(Sc6TB&@(?c9DZqJWd/8MVc9]fb_\2l?+Ob_A0lV^GDgg#CU;\R1LtM;Pd?nI1UZ$8U_1&NKF<)SjUB.$4L.YUPsMip4bd%cF7A=WPpu]U.*KD;BLm&3i"f!^8S\[F?c\)nsAc`,0^^Bcf'SXA6cV2&;K4W\3@ZM6XB;*:Hr]f:24*]L'70o'<c@pk&+Pf1R9L5%3&J0_M(kB,:,Tc;.1EP]>^e`0<&?eCn#ITXFQl@k':Pu>K>:pWpFAT+(9q6ab(:%[*[#)'mKt<1nkUR9cdj9_5JG''`RZZ58Wmp9%SQ[b;QEIfQJ_VVF;[Z$qTIc7E?:ZYt7!mdsoEDgYYDE]ViSN#9V]6dN;l$bH,]hrT,'gT79bH.b"%#3^1E[)S.?f`<E=+`3AJt2q%/,pX\dI0>fHEFqE4lC"uI`#(@cDE(?&GHW^CAYJiH*FD8gI?R*Sedu&Y:TGUW)]+b/F&JQrgCu]o!78DjpHL*Y3#j&"mALSHGE73%>oq2MGLSds_,ZjPlfbjR0Kn1gWMLu/AU3#^0tZ+j.ofcDK1\oC1qg.MoI7;ii&&,W=DDZO(-LB;p896_O)@Sps3bRmeM\d(,^MbT%kgbu#@$%#r[*h[PIG[K]g2>$oaE#"_DI_'[E!5<2jEVg,`I%.ZT@/"*'FFPRXDg'tn_$/(/7m)94IP].ME3+T10njAl(CS";!E6O%i2K_8-+JT-;+Y)H^R9gC^3e/H4*J^r&#DXhf7]DJ[$Gp[O6Y@SCkGV/C1q@L0R[n(H!5N:COpG'2,!Lt^SfMS&4uM6&\LO!mO/[4%?\e[Q?2jPgqIgLu@hnbG_GTE6!.)%:3ke0*a=>0sP@gCeiMjep4362+<9S'EKgi\UZ?/Ijq8pb2.BJ2il@m$L6nkIt_%&$5^r=_m%cV)/InZ:A8$VPNmbmS=-$f)2k/Vd#dpJJ`K?aYJ$hsXVDPBE;8EEbpFf:R@W<*0ekMs*^Z^3_c?DXtT$naYT9FumB4cl'UHcX0OU%o_L\ZPOGL._1dN8*R#Y38,LZ--^5ZdS2sSs!qs%Ds1!=#];lc7H`Hl78YiE'Ug\;RcOcL+W4^'O\o2#rLMZ2$,[uk7Fe#AB0E";f%b<8GF6c&trV"DH:/-%)eD40nD,FLsW/uganW5%:^p<%%mie#f_O%!?c-lo@m7<5(9s5maYAp.,HiuFk;lpnQM;kgc1_lrMoapthp%^8n.[*d'>d[h/m]If(lI\@;^,?6TTSnnbfPbN)?ZGFKN4:hDcNV$4!Mm::YD3po(HAfs0&\At'dI!gtZiVSg++NG7!DBMke>B9@f%=GM/LT(r_R@Ggk%/aok.g6gC]^5PC?8KF&OP\I&[b^:\R9r7a)Qs9mUfD?/l>:;F'l5/%RpA;<98+DTk<:+;5qGL0fldhoI""V]?%;*Ea\m76,T9Cl#O(bL]^ppGbj5p5S%]a&PS0cXssJH"gmc8ajD]0o/b+ls]+3M*o$$_#G1i*V;q\5Amb7'Rfn%@=Da[Q6s87`5g5%07ZVFFZ:cUnTl0=h%/0*Y#/ut%'3RmmeLZ]D(XrP]%JihYc6+X/T2R/LecBr\\,\;Ue]n%>)fKBeKMA_IWi0Rk`+Cmb9)gnc4is,%'?Ht5:e[d_E%l/*A**MrI_Iq:/`X3cocS]Ia?EA36Q0eE&_&O1J^d'-0H:A!716qpE3M;^X9D1:Xm,KU\bu@cPI_a]ZBD;GH1S)o%%uT5TZ!L5kdl/WRI[OGhcdbMh[IS*?G2r,,ko'*!Xi/Q:_s*#sjj(!s'!_l6H#[3\M,k?!aN7mfar`TNP6hL<dfP;,7=*&Z<9/ZE%0\)e@4]:/<)n[J'Be>La8fIS;O[e5cY.m1#7s:iA*EJhKVoWA45TYL@*0k<6+*X9:X'kVk$BOXt#[GGmT>ZPTEtINCi[JBd7jh(!%3m,n(kadIm1I(,'aJhUXj]Eil+f09_j.^T"+6N([kE[Y()uQ:spP-T[L?\Ge&bm@jP3X(TYu-(j7Y"7n=U,ciO3$-E2%f\./.Ooi%JQjhF=AP^_/g%2m'O^V`*b)O\)PBb8+SZL%nJ![eQ9EkO2/h0h!e*Q5A@*>AOKOL"4`X/X+;e9U/5%d]JAdu-FfJpA9Q2O<enH"U%f;-IaJS?YRmC]ruGSfO)IE4%a>&,.cEugXIk&t`L#Pjokp@H0X4HmHG4=O,_4]cdLa%-!If'*Ii?1H<9<7)RaZ?P5[S3Rrel(0nI%Al0lu]jTXcSUr`K4_@8`f%4@.oPbi>a1FijN+hHm.p8CjeX)eWQkq+_RCh>Rq^P+?;d[5JT8K,-Y$BJ)^d>s<TV.<a'uf:X&*UA*%Bf:u2b1\WD.Rl!`q;%h@oMLfQK__&Y'G.B57FWhh6,KS^BQ,E*P53mHmJNJ"2u$lL-L$TM;Q`f9Hd]Q."E5[cIX7Xr:MeFQ#,e[s%*$s,=(_2IE\lrUdph>_%h(_b>C">\[)?[FoiFaB<gIKT\n]*1g90DDU`N"KU@r+1MLZAOPWZ.u..j=]tC&&4Gq%(=L'&=F6%'<dB%E$8m(?Yi`e6QD%o?MA&J'IX8OWs&H1jlu&B6,,]W>Qp/nrl-OCZJcYp>NupSbtd>(H)Ym/75$4=<e%]+WlOj)!5Jd"ejC]k%?uuC%Pq$m;jUX)4f+YkkHm'tILE,[i3Kf6EC:$5o*0MLin1qmpjt5f!\kf4:]P3*/_M^('%,td"N&!ZA0b"PSB+I[1,*[XC+ibY--T+t*%?B$a-\$"%$<U[Ieogs9P9J]l:aL\YFAQ#?/e*sb\.c4<DCdKUIir'aCS]\U^#3^Xb>TG\rhaIeg+7!k\M;$<nJ"3;A9OH,^]*&h@%>Ph[gh6Y_K]In+s*RS$Bl2T!BFc#De?X;sX*#\^pOF**4W5toBgWOo+)'uIEh=%DC[Kho!S][mdLu"<"F+C;<eo%E6csIHI;Cc(l%/=-CLZdgJ;^ThfF)6t@S:_:6$\`=UT5K*`;%B;FK`2!W2K(tl]=+3"b/2B-=e=*rNSd/:MAV)pjLe^e4^Kb+(nSOYHVV'\=)OGTh%fPYckH>U*H(,M`2mm-/>Y%:+Z1*!%XUdNRd@J,epjbh(u0h=l)I)=sPc5Oe9OJ\Z[CKPTeI^9)AULcEk,m3jBamIRk^2DrU$BA89%Rq?,`WNT[p4d=SV7:*[K0"X,o+*'>09D3*Z^J4\(qLgfrEVmIoj)Qr%QVmaXTh<33)bN;-8MsG?_Xg"ts7N5F$?@S1;f"(_YdENl%TFMh'XBPs+$)'Y*'k[QpM#'RD*1Z/d3KCPU5?jmX!5kLVMmbjn_AjiZDFN5u3:Ef\ratV7]KFatWS9i<Bo+[Xe2qT?r6p"o)LcDh%i#KKQTHDm7VZRgB?E-WE1aH*\#3g(EoD2#481^Y'0:`=tR5;XrR[4_M7)P2KgfOEa4C$t*0.Lm>UjXBP/Uc,S<@-l.<-,W7[0pFX%Q-\r0cb<`jko[BC:\skY-hh%s6o.FsMD%[>q:%!`,Vl;-9)&9p2UK\\QqKTk/@t'Yi>Q:",];R5O4/J;&sIn\_De6I&W*4@r_\=^%-.8)oOQENJg.Ha1MWI8dW$@If>s%`UVWp,(_)&-=;,cP1:oOX+Zk/<"l(FK]NP*a>JUM45A_OV0Sh!e!C$k1uWd-#HDSfBC]tu+I%n3EnM+HC?!,<Opih1Dje,Me?tCQ86KA/ZYGR*hHM1#^FhoRf5%?=IlV*tj5`L.[W/C++2=I_F(EmCfOVGu+Ijl<Us<!I/2nlKh<P%3!ID,Sn5T;6qd/ofTOmoZ&,.+0V2f;-b'T_&JZtY;unchcEL&/$E4LX!a,-6?/G%@TFtVhp.$7bn'V9@Z8La4eZ!S#YHgA7?>#(3%&kVL$UPig=QGl1\eA50+B[5]TRiB$nlDN`3[11jGpH0%KAB2umbItXSG7qT-oVbFIQfR0lN%@c)/[c6m`?KgdgJJ8]>^QVm5h(bT%OSVbN["5-TDeW?L]nGq`YRAiLi*fQNc3cd?b?9m%g>J0*O4E@pO7KnD-_gl/<`JCg:]/rd:K]3aF@R%Ua3&/DJXTtX`e;g@l:MT7%H0Xf*I$Q%4a)[L/m^'Q$!Q6=LSo"!L#NY1D1MeF%8iF7^esXg(J=3s2TQpD\W+aI`^?T$p\(uu(:NeBL_m.h.bkt@Z%!2nSo)R%q%lu.A2BV4.AcitoaQ-W2cVnqIN0Y8O"i)<.TaB]tnW<*TlnRe(q4C?Wd?")g/qc=7@?^&ZiZ2"0^IsWIEra0S?63WG)Q1%)A]G''b%4hsSQGocG1S7YYJGddP@_"&9I-uf\Dk=&]L./rg6rVjSKM`RA@G8(*`2>Q09kbZ^9!&e)9'/\D(KPmCIp[=sShWAN)&,u36+1rPZ%q@Q$gIV`(WMh-sc*.`OA9>KX=WUYaE;5+4G7HGkXGpe<f$1At2$Znl`po5JbO8O_I-rp\+NMI'O*?SRbjk#lcr4Qh?onOkfC%LE<%h4YGMILnpcn<Y%.A>CA4"6ESdD'h[=^k/go#UF'0_#(lYdT!eJA^6cgYR[u:1.03@$!GWAD<$q4ZUtWQIX)n*l3+p@4ujen5)Cru%IXA[FS7f`aH0R%IEfa02^jlLjk;[U2njQ-*IaVMqHiPjg`N<GPKQf,ULP^OT'EK9`Pn-W3UA-@8Z7LQn_D'A95")Z@;&R3*IX.Ro%GGp+biFjS&JWY"HUV%^8l3uOo1O`h-^1(u/oD7.@FMTW.7F7-ogC%]P@CcNr/E.Wb#%[<.Fh*Zo>$`^kNQkoO<&C*aXdoSNR>,?`%Y=t8`f;]6,"(Xb:8@EC<R6(ntma#&L#=rAW]`Mq%6ea2-q!DCDWRhC+iY$HOL=*&X%3pKPYM>36l@<;+b@rZ!4"Pnh+b."Ie,O\g%fh!Fe4#[mHIHCEpSEBpKVuJ2@fd+_8n+@e%4&(F'Rf"V%SG,M>Xo56-_J_K;^D\?$`0JGQ^D,Y5p3tkZPdIKkE<UA1iqC3^-]Zgf%>"<kW$n'RKp([4(<b[,gmd#5Q)j:)V50)3@"CsuZ6g&CMRa]cGPe/E*m!1"O\^KUPZ/mlD3n^qJ7&5^JR>-$j9'f+4gY;:#.gak0%gMDmk5[iU4:&c:3;6ZM^^ACbO+b+Ao:@LR<7'4bjV#MGnjR[Zm"u$`qY4rEY9Ke=03=f,F[HV)Xc%Ii-l<8coEG`a,JQ#8%oYm&;%c'?C59,LsKdbf\T2j8:tXW(KS^f&<+(BnleD2Ou_`p&I8$EE46M67"\"0aFWX7<1CRT6a-EGPDF.WsJ/e;255kcgkL-;.*$Ta]]K%Y[.F=-VCjV9O2!/XX5,U>6`sG3cO!3l0@Ni2sgB!kPM,jcGA\+ZOhgXdnCY/"13pe2OQrMSO)8f.21\4dtCOLVCi.@^,hH*RBDD_%7S'_>\;KLCF&m\&6Zt4;6E)bU]o+dG7V1`t9d/``c_^DAV::5KX6_C$!?YIeEQ><<+"LCCEg-\WXP>g$pnD]T+!j&gNQC`\J`cFN%os%EVbpcE9H#YWX5P6Rc:K]>98#B82ZfDjBp+'[RmU'MKWqXRoGZ>TH7XtCW]0iTHg@Dm>oUhcKeR#nH8uS(A[jGnk^UmScR#5(/%1IP?2hm0Lg)`su7IFT9uHF6u`=#3_PaY__^7KteY)/%R#]miuXO1\Qcb`D+=9;Te1F6Ojkd>1b=/q'neb)JuhQ(*p5WTT[+A;S.L%p&.I7CFpIASP3P^(E%o?bsH)__ne+F!5)#1Q'X0FE7B63QLJiu29&HdPa14u"\8O[rp*RV$MHr=FWO_)an4HCrC8:f+Mnj>M9\C6%e"AJ:?!PO?bH!aPM[j0eXWu*+]-#;d53Z/kcd(AT9APm'3Q[P$N4MfP=/5IfcS<,c0ltCXG1\<Y8$hgup-JGl7^Z!#SF#/b't(cm%`(;TM=ljo(l8`Yg;U+Qa2UfppmU!WsMnpT_M]O>nD"gR5E/Id^8-[6c4Th+"$tFm@6[qh@/55*fp=V-SQ<4VSl&;TmP\%Dec<m>C%4%;nl#ojk0V4oN\==JdZTtPGKohB)>l]M(le,35nFl?]e'b3<B.<P9Nl+MonJ\`#4@La=_7X\%K;4-XBaVP<B1aS(==Ag]a=rl&@%^cUea`<OG9+R2Jg4@:fTN+@T7;d2mH\hX<&P"Cp59S7AgB<1msQ:S'"T;SY/Z,Pmfl\-rWY6kWNN=lh5=mMTr(=?>fg0_!Un\sgF%qtVUcHJK\*!e4+LR@?@k?I>A,__h%0H;k-j<%YK_bLEREC/rdX4D<rcKaja4iiFCo]G+S3S,!;=:@V@WVXp$$V@"<,PrlRa5A+g1%9$3FG\Cu%Tg%YEPR/1BuM<D'hr\,fGi9gE!Y9&c_?O,X>T0N]H.qKmtE%3j.7AnWu3E;kbrPcd$1LaS$.-9G$+0,hVXW'bS6n0Z+%3o,qXI$STb(E!b2LWG:9PYC1$lj#Am1A16Pf/`-2QVSut.$.k?o/t#3U5urfESQf.>T\6SWq\9Qg%COAkDg)3*3R3LZVOqfNdAqN%.>9,eO5i2%928h,8&_<Z*#Whg_TO)2Oml41=YqbMFWi9@7&ZK%:>\2W3P^m0+ehb,a%29q[]6NCPJq2heX=UApAH%9+A!TKMGr??%N3T2MF.#BoWHlJ+MJtROq.;jD@u2pfesk7Eiq5s*Pq%+JEtO_TT49Y&:qJ.&]8k[m*',gcJf0bifG>A*mO;=qXr1_"hN@WTOd2;N%g<YXl;C581L)Xsn1r=Wm8KJBR,D7U'#b\'0T%AcOeh_SK3A=HQR#55Nd*jM-7JNNMK[.sW;HSiJ4H-F&#];E7eAhoWU?GhGo"8FC%-#'A09>cHC.T8Kc0a"u&PZ+AlMF8nsU\;$4k<eL;$9AIrWMd90LG),Z2.C<_bpnJHYb#JkF3c/Qcq+dZg/nmQB=3etpmfbD?1b5,%j>p'i3ul*;]HiHUV&""=iI"M#6X#fq&.58R?9TPPJj3W9Z9o&0\;S?%.PH.Eps<jV`ViQrHqee\(Vfh;HZJ(CKo=></S!lQ2hUh1%cSE&#)N-`?ps]AdVf!t2_iZ^9BLq=JSZAc*!2km(H>J/3a\a'ak94W8fof<8(;Al*M_h85*/;QiTqeSf8ATDVF/n:;`)j'8>#`1o%UU3bOMm=`74j,_2<ocP^Ppo4pJgl"0@7E97^9dgQ`9Y`*kB/2_TQO^t.i;P*rG(,:gbcd8k-!]0WBkKdc*M9q>V,]L*$ga`KF5N6%;!!jV3]O)2WFb<8Hh.uMCo7:iX1,)s2JD/*$!F+2Ei'Hei4M[PGDkKf\aEst+WXAk"h>fu;`]g@)Wqk,E?;%d_AAW;B:GW_9U@^:%HdmmC)8)RUkWGNf/`1,aI9@mH^iSA39Eab6s#R4O)llB1+C=Mh3tWRH&?lDmS\c^J@W`E#Ok^I@)0@6c/3n4gBjU`\/JusFkmjC+%K6W9,;qbY3!=_b[&=Y1K#=bHT^_7jfPfQ#'LuC$Zn.KZ@+j=3J^FD![@8ig_jK%PuB1%hV,R^ll.JA/VAiS2Sc=.F1@fIjq*hN-&%WrEHa]a-X2o.KEB/U]S'js<a,DetbAgD&icD$o_7Y:.tir!E)]lpq%rXNg2DYCHk'q#"L9Yd#K)/;Bn[J_1)"1?oM$Z;nu.eLJqt%<6o,9Q=Cc?eQK':S!f'G;fS*j]J_MWHtZk=i#)GCNF$?(<s=/p!O\dR&-;8d+s,n-Xp.5Q/49stGcNa`'Pm0ob2?C@e-cJ!LU!4Q%^ZXKa5=1c;mL_s=Gs@>XMUB2oNXJIVG6:ocbP8i%2nfO*,)Jc=(2KB`"N34!g/_U!@BdJuW"oGto1M01Mi&G(Pj2nr8[DC'$CF?n%ZJS8.8F"Oo`.eAO&_hbr1e'$0R$`j3jm3G3;04+k8$cd3=:M<eDh9Tc51Js+L_n=r98BFn_I,kIh'P6Ro*ZQ#)W1em-)LM#lO\[t%`n&%.i0Dn*M:G-=46"f**jtIn>kZh2q7i51g7O-'Q3[Uoe#XlT@ZZc&[;uoKFFe$Mb,)6S:hBi/Qs0E;@U/m3BkL-5cjk1q[+5?r%V]^i(MS#%i$EXjE8^T:U!CEsJ;CS[e0t%ICK0NFSR?[K1"O]niBIlYDd-E`t]BGV4?6#uDlUC]E.E9IT>E4iZ*`6It>o2P+oVq,F%fc"Ip\/DZGHAYkn\jb%+FGRbk,HUP/'cMS[Mi<"uj5p0PR-LVci^`S&B(P82pa@0_ZC2Fb2nEP8s+&<Rl<7,&$Q'mY-qn`H@%r!T%Uh;S8J[%aj0YVpWl,\SPSmVq)V<uPT(]!mW,:TOqKV[4.?)QRF(%ibp17b_HTqFJZ7h<F-BQZ_b4gf]Jo(0/YpU[sS\Y"2>HZ5Q2%7&`c*R_(pB_L\#UWJ\<HcEUiS;Lg2th<-MhBo<*PI%=*N%q?452oYs5:e]:H"l5`4=tKp1kKh&/=N.)q5Nfh^,:K'Hpt>Sqmd(b=%]Tg:P1.OK?q)E:f#O@.ZQ<j_jT`uZSe;6a>M[%Q=7+u#ur$/VkqUF\;ij4OV2rjU1cZ2+*)[eZZin]R1Rc\@bB?.>0\Z:Ns>I(I!%l5c&p=sm"]`D9?mfEi`kW.$N$>[dGAs63JeZ!["Cg81MG!*J%.MTtKgHY`ciLJ1\ZSgf>g>sm\_0ob7.VU-Q+&$J*e6\;E!Z=7Yc%11<ahpF@l,2(Qiu`KY+5/s>t*cR%Ume;rh<r+b/=oJF<7ED0'3f"&qa]&HK76sM+H<*GaS\kE;RA#$ZiT0'52PpSgkeJUGBV0[ms%c8`QgXt1$n#Y"F<b4+*;SbetA7Qi\31[85[g:b%#3T@5b;MR$Hk#FiuSH5+.&2\R(I\IKU>EISsioURV76JZHcT0#`/KUfc3q-aK%VOHOnMd-"pFl7`BM$CDO@ltAQ-caoJS@?t%jL=19i_2Ioh5`M1h*,q7M$cBmERTYhpQ-cdqq&@dX8Z90Edqq,6<m2Y+t>@iRoe!`%p=SM;jS3fFTGkn?X+EQ\NDu7"^&]*R9n[8=;])DI!S.i5PGZpj#]$%q4[.KpLRSnOaequ57_/fNRGUFs9J0aBm$(5Kqo-R_,*46R%Q]HbL<?+93CIiu/3bZV8M%m=i(?R[GSla%?I??71^b@NW1?B,q+Z0+r*)!#sBbFqqAh9Jn&T9U(B:3G%3GWi_[Pr=07+9H1HjDlj%;:HIEbf-Hp#`.eP*s7LB1FPKb/9[^P@VV_6JSbp4":PCL"qjG&79"NY_G4E^NoRcE[-?i/`nDZ+cFP^W4lD-OMZZ$B;j-@,5#m#\%g!`cdB;PtT`E8/[:o<62S(<C!(1c..d7@UZ;5[ofr2NG-7U.ICAUQ@)7!tfJ:Q$@!O%32sQ53OdRiF-!k).7po.klP\dmK@*'Y/D%8n[37K`6F`Yt:Fa8.V%-==AVidtBn8-j+I8=lSt=Nh_@Sg_]$BC+SH?A/`m7'2l6A0U;F\R?&4mc"0=]@UD@ueRWD'j<[p5R#^=]%Aj,%1X#P/Wc-mX5neaiF5_B-B*)ee@FdprEp\]%86[6dT_hUpbZRRb`:qAiWF6$n?+hno)T7&X#;ok)oTOCJLh;A?P*qZ3XKcCX[%P"X662IDWG/._04](`2;=Nqs*)h&@IYV7s^W5>'cT(/eK@QWnj0)oT.1G)@tlF[r1;pR`2]>UM2=<na0[.QVMZTUT(OcSF2OG@.+%mff3O(Yc^a4fd9(^=ZJ%jC\[mL`W?i_F.E'B&%k/M6=+1[2Y9M=;\@sU#bKbZ'XlVlX>#1,.C1FXB9G(TkUNWb8;0sd7;XJQ3=-s%)UkkEniS>")?$LfZ[1[E-[7,L9pZ]fVQ7bJ=@G5DZ=L`8Ll'utm:g'37)e?[&Z/al0P4!pqVuSmiQN'8FPH&.n`q"SGCVYs^I)9Z%7f[Oh&U?6S5AmLY%;"M&niZ\Jp,QE$Q"W?:`<W@VY*4D.M)E>P7mCJDeIZJ.g'h%h?r+Ygf2gnT*57JQ@s0u[N?a_0#M6?.g_Hdj%.<W(,&Z@Arl%\20ZR&69*au;G5ElN82PrQ4ni=jtSC<7_2uS*QM\r2cRce$/(BJ(F?:jj%\YsH]^)+k"TU#>&GIco`aPoFYG*G2g%k8R(*77=T4[[akM"nGBCN&9?&&Ys27Z&`FZOt]N6VL?!kd]3Qe=(!XYRT>n&M9R,-POrY8hhTi/n27up,*7IJA2`[o^h0kdmO%UL%!_F)V^gGp4J/FSl`hjBE;,V+;N#'htnmgR=p(9u>"0V]L"3rLmR[Ir+S8+lWXR)uHTBk61X!7mHCc:)eAD&dfG3G9MLo/n*5QLqj%M)8<L$G&u3cY=]'*)WP,9//k33Hcfb5<U8hk(s#NJ-s?oO<N/2i=h@+K,dONhC1CO_jT=1>Vog,l(IGHnObrVE*IJ;OHOiuD1^h=%oDg<dU1*;EPH*I-V5k#k;W`FIqFI\g>'EWm$,/A"pkgJUJ-U<Yfh7m_q%._II"8m\Rkgd2Tm_EOK^Gjl6liW>Q>*TqUR+8B(+u;l%BiV,oEbeZp=)9>4:[^dR:0Zho@BlPTUkl9XkSmKBrMAneMf6Oj$o[[]aZ"k=<_JltV5.A76?hYTp&g,`]"he\',RrG<BUkH-9hj1%IuGcQ10n9m$.VdV(1>90?OP9>W1n.(j%Oq2r3^e65TOueK8DZh_J\]_mVQcm,4]M%lKWiZ+<)qq^s?%O$hQc.<edFW?4]*DMBjcH%SkHnb,)8%"S@u8EPCuIpB>`O+e:f$dJo@LqUY!?.*,r)j*%pMA'g&e%<LcuX-HUKN&4S^e`Jh8`7C2nO;0rqN,^ic?]3H=<Q3C9,%BT>9E&Eu1O[5q,S%fXrdQ_\b5Y<]ole0fpZK@[TuS0FEa5o+E5Xph_,`<sHCI8@HEHQqP,%TVfJ0#g_+VYTFI$q54e1WL9\WaND,%@?9mB@,U"7DBd.+k$+?m-aVXXfc`u/88_`h2)'S48gSP3-9>s+CT*4q65T3U6kur/,mY?oS1mZ4U^^`.1t*lINQup.ff#8=Mb'%I%18I;j-(Wgj^HCEYVL0YY[Xcb;2&1aC`HRlnLRZ\!TJB2Z6M)Nd]:sSU@OW7do[8t_44u%P'bU:>rV6&:a2q6!Abcbu(jO*d;*+1L%;E/jkQh\S".B*t8UPGln5iNW1Xnl#&7EH?iS7YlgA=OlJCYI.AOW]>gl1tb"fmipLhnB-i<H?$I/c#%bQM`OC&n=[#UPQ5M0n:^0%W&7:(7J@>j^^?sd_4e[f'eL\Np#/4Fc"jmTM,tDU.DV:bWdf,H$"%,=\,h]/(!GDGW"X?$m<at/Acu`pK.]"eHk9pe7uN..fQ71*%+]VfHXl:qpmHK5N7aCK9W%'SK#FaaKHIHc%K%)$?+GKK`7+/5Z^^5KQc9rom5#1CAPr9J)=iU(?GnT'&76\5EdkkHtLY/)rcofCn%W?jemdpVQ25UoYVb&CfaR;qpY2CQVP'GA>cL4n9Y#;J4(r*nUB"Q4s!>c`8ep8@mMZiAi;q`Cm.Dpb&0a4T'^ZuDu(5KPGJXtrGE%8ifD<5^)h>q1G<>)@"6i\sR+r#3=`?SaVI2p[^f]>WTgrR-9.Fb$e+j;TZJ-#:2i9AH)I&Ef5chN"d5=WSHj9V:=/E06S&'lk3M=%f*2UMM)PWFD_uQkgXb&un-qoh=/ti6_C__kYm?:YOj=Sn'rHgB!Y@6I#%'N>3h@/Nk6D:9fD.i]O\rQI`&h:JO04SD0"E6*#P\F5%qfSi(HNT;A8:*po_c7%%Q"Z<1!Q6X,UPU8iUM_Mkhdk,(_qP9bph-B#'-+da8c2.-nW=fdP&R:b'0MUa:a*[:S@J)Ahf*+Ek5*Pe%.1XF?<g8V]Fkn`%I-e5T(Sq[IR)IZUOP;[I.LiWE)tN1W=.drKRpZ-%f0B+;;:!#TDVIC_V0st,7M:n."__W2?nCRm<7sj!$kQ>`%9Nccr=h#rjg&#jNq/[Y;O-Slm2F$!pk`:!LM*EFDTEs>[6Dtm6bH]Ga5\DCR*eSWU=#_lkb"EXCRqrD$*1uP(I859o56&%\iT=3k%d+bNUP+ccn4m6?Cca?)?:<Q)V?cam6'jqsP0UQh'03f5pnoFS/Hi=j8Va$K>s&f8>o:nP2jZ(5;cWC2G?2W/1`^^tp$WOqDi?m#-%e.'k=VRb!UC*Ua=qX_bYL\PB*->qPh+8p)mo[e:2R4>aS:eg!nT56?m5eqX>U+f.C=sg7M1<gS9hk!OojNlr>T=ao7?iTDP=fg4O%NOK"/@NpD?`V/XZM#-n)3L>2Y;q]cepi>M8F%6Tr,u#8`/q"ZJbScEd\1eo9EQD$D\V>^F+ldEQq'4HNc$rW4'N<uLFcLE2%\":i%TN=?'LaXnA]Rs0<Y"LDn9?k^P9n0<oossB1]DUfPfu%KXp9OoPJVA?3Z))R];;RFLUk"g"K>0L-Pfmc%N*5c8qQ%qjp"+#+orC=@%mEg>:RZ0-i;q5lLE"g_.,;90m[2JWO+V(A]d&+*hI^ro'SZb8$o>b29k`=E"n/%KNZ`Eeum>CP:_-j3?L]g72=CIVB:hA'Q>jR7;%P4>ODl=7fpe!GRMeSkGSM%db`]^TU+BZCE6jip2MIn.T&',koqru*R<9MJEE,&&!J+o68`5?<0<oH,"oY.sdBV@A'161nbUVhG=G%=h,0*O\h"lCuC!qgX&*7.FmH8,r=o_F8`/cl*&Y#^K*SSr9E\(IIhUG#BGh\07qFNa_9=#GhlB=TZo\fXC<%T+Jk)k(B!DMB#-]/%I6(!(:-$NBbtucaY4me-IfECR!8S0c%dJJk6:"Y/1Wf/>_Lk!R1RK])=UI_lS,O-b!0,fa=IRrK-k\F8Z75kUg2+fkBNQ+K$Sguh%,S["I'f(L*P'"_#/k&#812\OeeQ^SuRRA4P^X5b#=I[K>T*.4mC:>E#mg%3T=<<t9!EmA#]rO#<BD)8Sh"C?jSg5Y'e7^Yb`@)mF%g1U3TOsG+Xj&Y_K-^Yof#:-<PLfos.^g5eE5".3VUOb[<.I*7>^DDb0<9>>RSasYi=ctK+.iV'@EWTn^UiTE`nR4hHUVsb%=H@ut%CYt_dl^NB*f]B5o#LJIoI]XA+F!j=rD$Pcp(r/qtD@Q/DOL-;b4[@(REth#PRqFr_6:h><eTQBkJSCnWP>@Eh&g]DgT&U^VJtg2+%Uji8@,PCB?AWL**dG8E8P"X62#b9e4'*/#&p.h,Kn/2,t5j4UMHGXO;S*n$K,/9[fPY7=B><\@U4\<]Q.e-?'!/@kh/Q7(1H_`:c%nD/NcQeg`qm@PF2jin,ke-E=h+rFh)BorBXH:Gu.F9h#%#o2ah-(-2D\kHulleORZO2)tIg.g)Uh$lV>-$^p>F!F1]?s-K8eU"&]%OMXl^!,SK0&a4QR_I$s?FtPH:r-a9k2^&[=.U-T9'Hp\V3j4iP<-J!.Odb64-_:k$ra*.f:./85G'JDueIlm,Mua;3)]6h)-q8#+%GFRer-De],!8oFfY8W>+f_03`.Rc4!Nho.ICdJN`f)7%g?F&oH_I>_#e+/@6ZI0b2jOnF7**..TT%_/\1X.GBOgo/GlBlJ:o!o:\%%\f`-FlpI)T#J;MYmP9li55?$%k?:%r&lbemu,+q)SUPqJ(p2pF7f@63iU3)V,[#@-0"^8Dl\GTb\)<XA<P5jiBEfFdj$S@Y;612%#DudYbSDEpQNOJL*p@l-q1WL_Rn@j`9s7Q`8?=,6D5Etqn-L;a;C9)U=WZj+c8pg#=>BIk,rCN0'<*#BNbJh`Plt4X@2s"_32dp`%khi78ITO>[@5IGb$LqYb68EOmG8E4QgPTf/gQ50_AGAF72YG=6:M.\ukqU)0926O@e@g@m+uoW(A5B%)^`$nd*9bPc?dcpk=7$bF%J[-;,Xq1a1/sZM5IQpZJrqiG__VMq1C$#Y*2^[q=k5t!=Xf#7Tire\DX$ng/`.^X)p?3S<'W$8,\Cqua7TSg%)^\HSS4r3\?@^H&%$(QtFJpP2-pj;IM^i8Q\@1PY7E#k;63N!De?desrdCBCnGHp[DFEA0`>p?CX*i:3+USiD=Cn/<,MIR<jW04OT&Zp/:2Z(b(X_>ik%Hss$RWVGX+S-oJ?j0\HY_[>N/a,'<iB1'jHeS^F'//Kg'pfX5AqQ-V)f6'%RNNsu^HMj"Hj$&>c(L;g^],T[F8r;,1/5bYA+$OP2%Gep"$$b04WdL&PFh6l81qJgRJ\OUYD,Y!FoJu:!XA'XF#g$@P&RW_6M@^Z<,koFMs2D-_g>[Qee!<oV<jO7<Wa?&>;gW@g,@!kj0%7ZitiT]A:.7MVFXV(ClLWj%]\C0(q*U>[Gmm//%krhC[XP<4]!CjRWj;=q&A3K!gm>p/J4`LEZtHX83*`sh[?Ep!7!M^G7J0qfAm%WP0'tYqIf.!+RtHDoI1?\!D8C[+gb>bUNms&t6lC1='h@'`Ge`cZ)ZG`!B_RS#6gMNG_WTDmGPpce.[3&+5P/kD&Ipo,^#:"1#L`%MdLqS"mQ:^rq$[[no;X2pCg%\:DeBS)FhGKZ^7\pG[<t<_K0c(/(5B1]o7FQp805G%Zid4eZs_rI0;`?aqApnp`HJfH@7*Znabg$%_fHj<4W"E\$"8[Pc2u1;",$XHi<CoaK;lV>hVUTj%HO-7Jc'^JopoN=A%U2qddmqmHikY.K@lpNHoR]CDOR;">%a,0Wp`o#QMm;t%*ij*9U$NqT(pri9dWIF$.QkR9%L*bL?)MR<1>=U?I@d>:J4T\(X&AS6,\JaWY*H_ZVY!]T75(gT7CIh^0_01[bqkDbju;eSfDP(p%8,Vg&3T&>,N!,ol/>="D)c9+D!I>W/]'\!-,g(H0RiYpHMn9V(Jmmgb!MPE`L[a6Lk._%MP2J&W2b_-=jr[mEP"uUT&UqAK/IBMD%F$Kb@mjZCoF[SoDd"MR*CK4"lODg^R6FG5U;aC"%0"7qA>aT,$cf&Fl^:S[IW+ql;b)V4>,IYnoQVM?g8Ab]*BF`W]ElnCNaAaKX%\K0@YNATMljIhC6@g1jH!Lj73murAFDWiW(ch.C\i+B9dhD/5C"VBHU9>p-1W/j\mpqN\_3VVQ'P<l$QmfnB;>6^jfnZ"Q(G?Tk3%N_];<XL2OqiFm7#^sg_TgK81APcSKh"G!V,&g<Cfm`Bsn\6FatL,o>l+!"g4U@fc'V(u#U*rrYWH%Q4i._R0:m))"ZdL33H9PN:'%'Q)HimWZO/3t'Po2.IpIibihJja,qL`[GGtgCN&p09Jsc+mG8(=-Aa$:bb]oL1BT?3?@g:3C"@piIu0^eZDWZ/g0Z>=lD;B-tc&+%D[ppg;&F27hDI\,:8qH*L7idB5jGCH5pB"HnSQo<bCpP?)5[?;.eq!fo]qq>UpV7G^s'8STtHa5MlX"*But6cp)]*88:/'.4P,/&%D-_APc+^o9ei^:dT29:%;'<\hXksj0kP\ig_\.<F:2;Y>;Z5'sEP[)PJdtthU"(P?[%8c.P*fubBS&_Op+2?;HtcjVoWPt;B>`P$%>TW"QQFPhoB>7dL:U_;(\l+!b3uI9_=f5*rk^?r9/;+k'G8ui12<9&V1OuI!GYoY]PELmmL=8ae"[k*jqtfOus/l.t>@K$Xd?aO]%nbutAPhVP:*JM[Sqj&ffY>WC(aC.G3B.+&6]-&_E*p!XX+5[#5T[ZB=0o>IUMh,$sX-+o+-F_kt1I_NHai&,C6]/.!i]B`CUIN.!%Q"/i^mACH<d8^i&,?aWK+h@,K_tRMf8GN1-d=AiOf+?%a6;(sWl*4P^8U_X;=c<0Xe39UA9d.>0)L!XkH`XbY+<ac1bNjl\l0_,\%GMbJ6]?BVl]%d10p6riWRHk2?Jp,(C%le0':">t4&2nK]g$aPEGOa/uDNKqE+$KJ,VP"V<!*_#_GVt)iI-[/Kj9iEjRtC\#lu\Eq%SYt8UB$bdnEmsH4V2fPKr)sRH,u&9BEJi1Nj1_McLJ9BE<-8reJf.D5:GS6=?=4Kf:_gl)%@%"&\BbD.<S^3QQul5hjCd-:4W:p^%I4smP=3Cp_H)3EFduXs!Fc`,o&_Gu\-.?[-^D8ADf2;J<E&6?tBGY&E\["oG!VoH-Z*BYJHYA3I$]KCh&/IRFeK7_32k[_h22.0M%$KVatm_1TqCga7)B-Z8,I)3ITod4f96A"W;e:4F_&fS)9`h+BKP_>f<XSssr6FoG1/7,6SVDt*r^7@d$rp2_N;Ndt7]&b/&Im^4j%kp@FF]1WT'R7kXNT\63(:hl9Z1P/O[k=@C/#\Is(+rK?ALZ2.87jOr1p?sZBI<#LR?dUCrZb(BE_c+=!eK9#R],;Unp1>"W`qng`%20Qt+a2"BG7\hq,eYGlABlC.mmC_0oHF&Yc/+7A0hQ5c+YP19T`Qdh]hdnX:GnImk0nr^q9/FMr'2Z'jp%SECgcKcVf5^QHS9_Kd%-lO.cN_i"P:6"b.MU/A["Y^B7!T:jb5!i1mMP4F>X#NErq&m&UTiLl`A$L;q<Ec3P-^_%DX+trhVcsgW'J%inKSNX,X31b[im4\f%EYXB494mSH?CUD$f/He#=/0q#90_eBSP<8"S.MemPSn4,:t!S622<D;RIifAiqm4g4m-I?Bk.k]AZBlCoB//g">356Q[/N2M'%)D%EB:)%nq!=!R"3,Rg?OH4H#[a-Ap*P[$S9sWnlm-kFhL&/k6=uUBKJO8dk!O4&N,iVV@t\kJ7+eQb!HSg'$GERrnRtL)kA9[4'Bh$%!`1Cg72sU(*^aXCZ(O['[$u1?ck:YZBMti>:\5^0cqb01.L@`Q%jagFjW;F;dIpA3o-`a.]fsS_&)]C\pk;.i[7Tef0,qmjS0^:n%[Fs1Bc"kf(9s%.)2(d4)6'h"h0<atnY&j1+\!)6L-uN,3<sq]W$iPXY`Q("R_j&F?Q)=BD>oMogdZYVfPT'[h)kN<:3#tL#g%0q9%eW2's;_+bcH6fM.\M?GOLoDqb1o;Q.MJmn1X2!eZIeBcA?H^9VK>=?jlj,RS<>Q&]Jps54pSkb@-/p5!+5$WI@+m>_XB)`pYel@&%@_!P8nnjgc>*QBh(B#S@C1BK&=LDD9`['pe#=!oEmeV1c^W[]5oY9;q<Jt9=`^B\.qnPV_lVR:@5di4S`#m/g4[GF?n^GUO-=4(Z%Q9@t(lTa%NfL\Z,,K2DdOWj*AY";B!Tl`hhXLSC)Tpr9eAmZ3'4oT/i-&5bUD5bG?^9#"4pY&0$le_CgmPt`AMWsr.Hg\r)4>$a.%oWSl>QN(3__oGLIpm5d`mpc'_5Le,&D2<q&0+V[Y:o.\fPU]!+C3h5J!jpDOqfL,>I86kH$0C14Z[S[Sj$16]r7b.IZVaNVl'?WD%_'3tY3)m^%'nW.bSo'.ebAlUaq+OuP'Y"T'Fa4SI%:-Au3gA%CiY$j+LhB%:UieNI!s%odkL0gfB@1Zmj`J65gqEj^B@@3;mR%=[%ogp9;q(OGoOV(,6#DNoF#F\)ulf#/M@+MVmr/-0#BULj;V<9J$XNm(X&rljhA4HaNL\NefPhOQhmWZo@(E`%B,i?Q*3TrYeG4Dmj%>*Qd@_ITL[.Ai6]q/ePY,i<"QoRIgL,XA+7HI_*tC4n<7Vm+*RWqd8:c;\-B5h<9R[?k'M1*Ru:7G#/<fl535'ROO8Hl`>-T2!e1%7!''$8.gH>'nMg,cr@-B.6p9+D+3hf21H.(Ql'Bcn:0(h9X1TPg4Rs4OY7`83iI1C/$eUo`Yjo@k.0MM[j&V*J9RepDEukrPKlR1%7ZO(c@;7Y8gD],*#Sd[3:H8/7L@[ImT>&4NG-[RNL#seS[$]VU(;\a((f*`dK$M'^;Gnd@&jho!.IC#<CZ'.X:SQ[DoMqc/5.WAj%fe@)]A:m>3&2R"cOWZo\\JO'>89,;*s8MN9#^cgpJ%j[tM&0=6Uu*$WR=b0.m0-[]IQ2M1&je%=QCJotX(jUj_1C$BZ7'ur+P1F_%$V/aG+[eMOiPuo[DFX$61dBfThUBBu-srn3eV*bSZj<SeKIW8D,X2Z_Y>m_`V49m./L_Kao>ZjSoW/jMp38g2QacbW8'uLB0JFfD%*4+jHA2@LA.@?k[Ya@p2B,7P(7hO[HecWq6a[@Q/7\$CbqJn;.8N/r7L-lE$(o;]@A4'Zj><1ejIMG!>mgjmb3OB#=a;98M5=(16%LPRNq":L<S\n]0bf0k9kCi!QNJO`IO/P5U1nFuYCQ:.K;WfK2s,K?-8PHVri]7O!]3=tSfNnk4LeCPjkHFOpYlZBe22@Y*?@Nu]%%hk\/DQDGXnJsgT>l(OQba[^[6FVjZXV\a:Lpi&$/O7s<8H&M,DlG$#M$$=sR"_)EZGn@p[qPu<b=bh$p)23m,fZ,XG9fnrg(o=F/%/)H5tgG'r\ajD]qj#6!D`3^pf<niLb98fbH]*H*0@e#iWg$h(h:Fp7jRiYQAcq/m5)"I;5ohn!/][f#BgRAG0VBlHcYbmu!Y%=SI%*sVd8,kNq1U9:$D<0(`f]pX6a&ef.[#+PabAoN$H@NFM29%fIL7/@U.41p-YKi[9bU-qJ'$^Tk&8ZlEZb@_Ec<-LK%9eFM\#3W`p%HhPU*-A7t;QE#GC.RLk`l?Ck@)ds`m5q>Lf!BQo%oIlaC:cqaDI%>0*l=coj-.*d193a'EcDA1gdRR:b#<+B:IpHFZf@p>;%chQf%PF2K.lcXAUC&,.N;\2nGQac`Z_Y5=AO'?r[FCH9M-1uD!01Xh,GIX*3k<0?SkCdd,UNt?&B=3.k&AtE`QQu&rP&[<(SIdGQ$M@6(%V5)O46rM>\+[u8?-T$NBZ)%PUk!>rT"Dg3V?$,6O,jTq39gF_4ePM\@H4HHUeu"2+_2ua]CGNP@+BjkQLcVgk/5!;:,s!hG=G.,+%#.8,ccjjqtjTG:>lMa>*^"I$ur.?2?Tt\.WF"o69ec8qAmf=Gs>.ONT8k[\r%IXR7f1"O%iJ^.[?Sp\[JYt$671^RUD%u^okGca;%*RV6>KA\l&9m@CbF.THb=mAQT]'/#?Gt?hZDWk7kJ23nm8unD#.(#c2?iq:4VO^E4UAZY]gVKEcMT*am1+RlTAdJ[c2M;GU_'!C9%WU7&l0i9eH)ClZ8(l*321.hL]O7"jrObc%+DA)%BpL/9eMYH;El8OEN?2R47btL4+/[iKR#Sq)'[&)ess*g4uA'E[a\6cTYgqf0Z%[j?_30G/fu8FaBY;tQ+m-5c,HIVoZ^H>o9.P6-n/fU'Qf)2bH2<u5LWN#mD3UHM7Q!\`@Q)*3p-]cqrnPin[=L7E[K*'Xkj9$tr:%Ba;5pJbR>,I5T0qnrM_G#_*+(\G#duPFU?g,&&QI6P/&`WO"d8@%VI<s1AK5Nt]11;R]hL;;[Sq4_3IraI3"-1iddbY!B)cX5,"Z%Bpo)U"&:IC@>\9C36>((2M7mD%m7<gRYH)&mo`I[,(&e>6$-*m#q\[/DpQ-I>ZpH0?sCRH2WDq_ge*5lPdD<X%:7LZ+sl]5p.c)t%5`gj\q`-tCniFLFB%G-ZjtHVE!rYS_!@Xq_SS9iI?VS!iWEo0-A\ZW[.tTZXIWo&lMVaSf6l$KVnSHEa=3gXe7^H_^+OJk-!e=V!%RJaK8Kq%+]c\\'.:EcU.2O8U-blb`$.d!);;DO7SLIcBFK@HK@P9CI@h-H.U4p#l)9\JeHQ%#6_RTsEL#>E<O4<f^;COh!(6"s)k%Y,YEA3K>u\*i=f=>0ZY*ctN?gH/;>(/W7*i65iR1Q<YtrOml-W%9T#9_5*XVpGK:6AN'm$-fSBjGIGj(/Z=mnIXA"uAmEcf!WhB\%3Opu?!GH!!^>Sa@rTC`5B+NhXWj$uJL`Jlt5,.+$mMKA8f-f$h/)-E&a8SE&lb>"%o9[)c)`O?hK55ZBC[U/ST])CN\T/%:%50P$%1OIN2"oVGn9+nc\MOi,32I)VG>,o*LQ1iBgX2AC,0(RD0gCe=a\qKX6A,gH.=tg+PW&/],2>;/7G9mLg+(7>tlr[^m^+*"qEOYn:%Pr?<CM9ABUVfp$03%%]0p.H_tW3lrZP5Mip=^+<)7O^r#+=6ASb6VhnM3K6K=EIJ*,"Kq<H93di,XTah-1RWC5T52daqiLUDEG[3%NILP-*su;BUBbgDr8)"G8#lARS8IPA*nf\de1M63E_p,6cA''cIB<h`re"YA;^4,mZZH"kF["8s0>$8-a^!@=,H4qnEE?Y=/>S`5%n[#ZPPlrq)3LI617?#a@fKH`K(Fb90:a$KGaCER-<NZ$h/h'*!,XqM@d3_pcR$SrZ1f68=Q$Yku&nfmt`<?LV^T#AMACr$*D.[s+%P5gEZp$HTGQ_g4)>>Wg!2d?%*"3+6ab"<n4enBVXV\-tJ<^'69c+%=/3MiY.^4eSk4G`*l52U#4%c@Fb5=n;MBA4%%.'kG",UoL/%k8]NhJdb=M=-.r"QsOY(:N?lm4o/;t&0J7[&&TY?l)FWk%JBe0MMR6Y>G8=1>oWpR6b%duPr$rf3R)Ji_'r\h7+7j.P->pl/IiC#%?TkRc#>\A=J0DIK-m#$HU*H6j`/I)T"mDrA;ZoZ9Ybi`,Qb?G"V8V1OL\IgA2-(6.]`s[KPpEVa,2D3b"Al#?GpZCf03>/sfq_FN%F:Z;@M'SZTF-?qFqtT_oU]=Rj-f5lFmGd<2bYD(^h%#?s542dT4?"MS')$);=QZTt(kfT<]C_Edo,l1sG\rs1M?^>6KAAj&pGe6i%"de6pRVKbqZ?H+ulf7s/\jm_Gs1%`Oh"j6Qr?&NJO'DX2\Fm>gHX;ZcaA-13=&7#83.DdGG)oaC8DioO&=RT#3D$;Fo`Z2T_N]X@%#l\_S_JtrDY*!Y$hsqiBEQ^BqFo/6<Zfk0<6'2.a6U*)24cT<k.YqmK)b@uk8f(;DP>jPei&jmkG=cf9ZPI!c,TA,DkQNWjkmd3p%$1>8>0JCaNc^L8o\-/ksKIrs<BpCrCjDXO3<T5e6IsYh;@S;kpk9n>paI@oME169GpIcrt5`d*o8-S0K1l(L]TQ;Aj1aVGS(#N11%qda;,(8i[h\uTW3U>V:!hE*jta5#Hdfik7elHG""QtP`n^BDC921lNAW:Klr!,9O4Z\\KT,K^_$5G+V?7'a*/M</s@XnHUjfe)>]%'-egHU`,q:VEnl$.rsk]]Z1UCO"mg[2s/VT3)8:#N:3\@-EVUa`i4]E_ZQ-#%QaVA$SS2r4lVs%X8i?:ZEt?=k8/(5f9]R1'Eilh%]J<T]FT&7)7:1=lh:]de^\CE/)8[S`lN[_I=(bE\!=I$)IaXI!;HWnu;bc5/no/3jbhduJ<j^iTpt!q1>d=gm>*-tN2Pq5eT=]mI%I5I_[J8Zb`joQ)*!(^(c<8PcfD$jL::dZkAM![YC70EM:%]mM.\$C7CoC)).9W<Mes)G'.RrD6C>.r`c+fikjDk>hW=0Vj+0U@.N%%]mGh^MO3JcLPIg+;kS?(OoLJn>hZH:X:/f\Mf]RR7Xk!3NqKQ!8D8/D$6kY;+t,pcW)`0E7?#jVP`(5G>_C0Mh/6u_I?mGZ=ug-%5rGR/i:.O6Dr#a]Y".$GD,TfXmrs-%=A$M&M@F8W$G02qh-6=9Sp4j)V@B_mgBi:,h?`a&Y"2QX^!glW2SFP5rj9$B&o(/TDKl!V%]st$CLh5V%F$?uqHgH,-)_i2&U2'gYTF<@g,Y43#Wi*d?XSuaYZ'`VdUOccT2sG?1%qL=2i*ok2hD,uKYXp[col""j6qo/MMUk3"%7GJ&$?nd=\HDu'R.$.d%Ais>5P1;s$GmfP>jl182^>rG)On'`%`)M)FJ5.5qbh[@rQ>jbT1V=KYr+>(nWd1o1@ie+OlDpj0HI0U$%=2SsVS(XR%BO5`(k%=QZfG9=GD#&kmCbWL;Y8Cp\8fT8p^X9CCCRcGlI?WWuK.=HWri#^VCPI7M_H@7\*MEeHhYFG$&0+`?FOhpG%BcIB!i0M;jgGV?bXW>L]i&!;52"CJ1l2uLs"Fp6)2ZCfi9V'r#'*gMD8!os[4Lp93XK!eurm*8N.c;aj"K19SV?Pq:dR(3-9`lUS%*^bG90iV5AL&k4l:,Lp=#>]o:A&XLli_urdHd+Ba.Y&#L69X;%X6\Fc*1WGt2mhk>@Rb0o<@*VnhKFLW]CZW`W8_#=-ESbc]XUf)%p;nnd4B%034#/2.WlLj+eifW6SP:O?X+KTaPA*`U]GF6ur>d4,&=@3X@q85XWWIU<nc$MOY"M4#>r)MFpkhjj_NU&7C3<It<T8)C%,FY0D't87hGtphaadt,KnUmO%OTi#tFjHg`b:kXYMDi"7>;Bl1iJ-UJ3eKr$R!URSb0+r$6!N[2AFE0MV+2YLAa]U2co&S&1nYj'%BX>Z4]UP9miu5tlDE9u^LQ-R1pXJ'R!A)nDk=d)T/7W"pG_F^dBIYN$PG0B7RdH7Q]OT;K.D;NT;cee@XqkkC<<G#59bnBlO>,j3%bAM%#a5foJc@3]&a%@*Y-%9aU3.VF5>4LCC/QFIb2,_5$<n/G;_:8VMAt((f;3Q:)ToO2MJkNk9;AJcTD@:_GX9+kdD3%E/LkT)!%:$[1KFCX/m-@E3?T>GTWBrIEk;JqCN*K*"_)JojUM4.U!%2bTf(<Zq7A,DJYE$Y\/$!i@!_u[&*-.VF3(qr]XT%or2^>bD=_tg>;%cWA*:L>.62BQ.1ITeeER].&]:Z^7PR'r7.Hkrjc@?^\g(1NHe/h-nsJ&i%h?mLfc"nK9L*3R$0IlQmN4&J=6/QEGunO:Cn1C[!!i%ihHVF^"`U8"^"t_S98`>c.]5[XS30QHbu;aIo:G;gWV]ErI?40Z@+JgZElqKEKS=!6W2FkJV$Z+H.C#VSsj#p=7N\An=?GA2p_G)%15U#l]=J@2\T(@Rd$Cb-_T*@im/XQCZ*NB/cq2[(2l/C-jW$!<R%+'!=tPmY_$5Cq\GQd]9r_OmeVP?uUpOt5Yr:XbdsB?\6W^XO%I`["BYtFc>dK,9eUm[J(AiZ/f4rX=R\j"_UkmFl_VI`@fDHnlZHXXJ;B1Z]?/%==soiTAia$$g@<nrpL,`e6K\id:3*BG&fTX^AQ%?hS5^%bGdoq#`*qah_h*"nHUb#qRt!TVa3:,[Eo47<E;#H(]mlCK;k8LSeW2^>(T+A!&*/OW+*hK!8C@ZRAeZ[no7<P=P:M(*UGU%2GO8b:.@(95tl05bG:U&\MmsojG\'\UACBr+:Mmp`noXE=A&OO,s7SDLbjn+e!p=dia3cKJIX!:Di0$9fQpnI^I=gQ"-UmWfbG):%%PS@Y_;2/]7RUhgiDob`>9WB?.'%(mm5XL5_C4S(K1-FF5+?D3X"@8!UMo+DVoYG_r1YhGAS,f7I6gTOW4&<.Fbp;&0r7gfg;,el%B>+XefaT"DJmBqr25c*7(Kc+YoTHtHmJ#SuB=;.L#4QKan#^j)Dpd`d^+sZ;V%i3sKnBMeno1G2j_)*.2WW_l!X=%4I(PKa9bfWS%>NH_MfmZ9t%bLs!Vhp^<IP_cbW;P&-/@SUb[Y[)I.Ins51RiONX..#".KGr,p]fi1P5"F4Wh/@PXltG88jW,2O?)GA)`-NX[\TDR%ncg.,Re1FgSqSIg!dqb,ljJn'`UM`VZ8Ei)<lbkhNf'&>O;2'VAMkk\@I(BDR%"<;/3A>nJMp-9L3R;p=<jldL<lRZ14oa>T`T2)%R1G6@o=VS*B359-PhG/@K;#fj.RkN"G*!K#W[<OC1nD0Z#a,MP/=]RZ+qBAtq0G+0*e=gCbLn`%Jg@H<2LDf[E(D,#,;\aK)\tba%bAN<Gf?;7Qet*M!jW'qh.-_aemT=lOT!8^$Mbq450+i$d/?uE6^c4T9Sm^k0OXK)-nr,?Y,!U%bS6Hs@duG\i`p_cY"D>Io2Z6U2%OJ/M9Vl.2]YOLKO2^?Ks-!.:c6b@j.@TIs2DYa/scT\\s%i<c)A/QNb#rT+)2'P$TGfPEiP/<To\7XTW/KOK3P<q=-I(p)E@utPZ%?FU>HMBt@DkG4Ep"Ou3#=n]GZTH^-Ye!,K4WiI&AAVcY4V6MTU`L-?Fj9cT:K1+=dG5CbM:8J_sSN_YM7o[3a@pZ_OC6V>f)J`[Y%>W8',MQNqiBscMCh)HMpP:!@TXE5/s5O/">NBO$Ke:#hXB3A-(E[gcGl*<]A>q^ogV*(BY@\m\2Ri[6O>L7W]r`mn?D(*!71>f)U%VAPG-eo'i3l<>CkFQFS!(;uRWr+tDM3R(b)1^;iY8_3<Ue<4hLL,.oimA$dO9fIN'aZa7HbmdU8_m6p[Cql),Z[-5"D%WGmgAp*M%Ct#o&GYo)ta0MfiPh[Yn)7Sl"J-$l!.'^o9?gRjuB"4s?p+A]bW)@eYTpr''CSL)lV%aSK7BT"-pTEU[9t@l5$DK*jCJ%IqVnTu`%+-k\fJ[r(<8CK>):Q.'g&Q;!&/CdVfL?[<%NmhY-Hf]LTY7&^mFSYAJM-<kOQEFkN7&eS@+'(0=dR'3_+1OO@ph,Lbgi>OrP=H=n%Ng,ceK/'g)N[2/W3fXj'L5U-D6!kYW6@AjSg9HNN4]^oMdqosAXJbr'o.hq(D?a"EO?m,&Q=!,ZRF06X7p/(UNu.>$20]156##UW%1SKlgF6u]P>+5f$ROaT<>iT3*kR*qIHr`j=L8Jie&k!Wf$siDB1:D-O[)Zj[X[Z6l@G=9i5n;<9%Ap>7Ec&(t[kr<\HIjI2k!eb"%W3U(Mr(r]BPt'`_7og9BR3X%*IfXM4P6=>_5loLaI$)6_[jOuY.MH]%'.05:M5Co@+stUl.s9Q#OS]X@p%t4Ns##m%2I=_P0AEK$%YfLmLhHpR]#m%s2jCW%VfM?bE1aPYCoss3>gOsD4Wq'_nI2n$EeBO2DZGUs7;hd;;<a3e6>'qVI/IB?:`iKgmf&uT0:(=07lIU=l%CUE4b<od@D\7*2jc,%4JPrR\Pr-s#EB>$!04WTk.B59nF],MW9DQJJZA>9c)9;^paa/;Bf<`[sq4LGSX`5roD2IjORBdu=8@?J7*%aV5^;eXS.9BKlVNG2)J_=**uV?Bq]c7XhY&]W;J>>81[sF-.5<aW_Q:N?LMVq2pQEP6u)'<K.bDXJ5Ag,M>#5\4;B+>(mN>ieqQH%93p!IbY_,9A.L(n;^]:%Wnp()HU;:Ei,@g(pb"<&MMJfq/;#*?J/_nY.$CH.!e^t=$G0apN[/!9@C:Rs@cJ[,Jn,5(]%n`'OucJg%U:aR$^$G3T0W14YVuB6dqYgWJ*dfQI)A"E!WiE"[3^hRYa#F'hja+.>F@HWX9kcBKY`4c/<0NO':"jYdB.&ru9hEdGqht-5p!aIo%AGN?Hldo:Lor%PG]"P<>$8:2)Yc%n+%TBk^q!nVP&(e/Vp<Q<W;N9W6p'E4%AUK6h[P26/%^S\s4@HKchmTJ_id<gh?@DPa<*m6W%$Uj'u)bkQTY$sh>Sf5!YbkeYI=^Z:hVXiaF*q-8OiF91>U\\rWQ,esDlBi]BN5Qj9@UXADd2D;hdb)f?Z"d=4aVs](CE#AIoPcFQ%JLontU0il)0kC1F$pn^s%&r^Sb1JU'E_l]8PF]>0Y.,<*oZ#i+<>Ys01+@NjA$Y&Z<=FndIE<h`+6cBK1"Kg/^#`@@"aW1fB5]hR%+c7S`o,rtFDMK'XROl'APorC=2g_..LTCD0Tig\V0N[J8KKa[%j5u4Zf(n[t?3Hi:ng+o/9^_;@b`*uOUqUH6'GF0>'G5].(#^Za%P&W/6PcFIC.5:2<?8i.+l.E+M++<ZZ<f<oR3.rc$[j$@.EA5:-D(VDC!mrN-CO``,6dM`@:-*TSSEQ\\0^$pAh]g?6@>5X3c<\AY%CD?`(/sVE\!tmmcke=S:UJ%jl7FK,pHdX@'"q'lgPmnXV^+[9e22.r2q!q2'$]`oT#gj]`;bonn58p#-K^`[_SO!)^*hT<GT-u\>%e\U>N[84]!2\Y:g1l;oEn()l\1-F*iK&D8DZZF$3f!ia]dqYuM<uolg4>27525X\i8S,+[(kN(WQ6n"'Mn$AH:a&;,bC]Y_)?h;'%p!Xs>(>*Rg>_5-@pK3Q[A,V@#36U</So:a;MtO#KRpN2MMq.b<B*_^BcHjiH;'Yd\ANntAf'iRf,55[t0/pdo7s!1qU/5=^=%\9/%_!B5V_bGO+2gZD1+SSmShU+'X.fr!H9</GJTc/ST^JPAH.aKS*3#1>.cqHt,IXV]@@oBccK=qfGm)A)=q[GFj<*M;C0:/nt!cNKa%WUMAt*8li%Kd5;gRhsaDWYm3W#m;WgTIM?u_+\DPJ'<Fkreh1eq25^7[J`uP>]:/?f8mhs([uS),)O+G%#0VHG;m$Rl0hq8g->eJ%;5-uAZBdq\rU@_**tm;E'Z&e*r-#jM2;U!2`)anJ3B1)SRZ?.?gtpNm=92&W[8rP\[BdQ,4gXO#7'8J/2jG"8DYqR?Hr2?g:ZiD'%YSp;](\ZrfNR`l&15EBWC?j(PD[=JNMP3rDUDPSqpLj0jC2>=;8"EMQJ[rFk8JP(U"AOTKk8mt#f*5r5hWT^$Ar>MEq\8*:j1E']%U.>R6#f?q6;0"LPL4c$ng#s`G<(g1c:Lb&g!]C;r@]68eO>@l0:+jCDqn.N0[!K^0BA+/+,>0lkLgc]h_EO3l*(5*Q_>H?3C+%if%0c.NMM#%(mhGk<V\l?A3ACEMY&<%5GenoA?m%#ji2D%81'%@NPSstTKi7FU%8H-Vim0<Rf9U9\cYRC*u6.OsW*KB_pj'spsIVTqt%DT_"j1o"bh[jG,!q/c0"\VjgAd?TLVi*MNTiPD3R@Y#e44)N+7-5HI*ZsPkKU1_/CgB<RU.N3H,?[:/;\4HgXb,%g8HPHpb/L$6I%`RrV3Z\U8KCgQ1cOp)VcR:=E_!Gj0BD'FR_=h#mP:_?]1IcX1n1nQdr5/2`6BqO8e,C59Ah_03EDA4]XAJC+H^hK6-$aTjI]eY(T%EKu,>Q.O3?m=21?Id5H.h%Sel;WV_Jn#JJNJmR2k[a(60iC"#I$OiO^'g[f/,jg0X=F9_Go5D<iUAKL.b4/r3q1!F[:0KO7<N/QK%rG$n5R9T<l*T(t8h;tQ;Id6#>h%S(SfcSd<=FlFiNGhU5VDL<RUF+8dRW:T8g#V5lEYkA6Y<F>BO5njWrV<.R%/D!?W<U@U_1X!e%^6YW>ZHB<!)^F'#;oGp]W,EB>e14S+LS)_(p2IFc0)$TdUkaoTDH>IJFM/@rN=iS8D`YY`qbMl$!Sl."-\-QR4-/UEY[>*MY#<HK%2PZbbWM0)d/>AHPIqQd$:hh@>g=[9-!<EC@;AuR8"_lT,G&KGT5<2u"Lf.GS!\02+-cP7H4e.nX'LTnugJN:3W5/2rmTCd9<!51P%2i2kE#Mo:]XHH@b8ZuJ`PpgMfi`pf_(N)I?`1ZU=GOT`9WQO"=LYR"F^3je9nKLU$]P1aQ"jIj8$cACT>A$],F[Z%RKdIV`d&/gs%TeQ3[odT`eE?&o:QDb,Qn=IF$0g.\V<#1MY1A:XDlY,ul(fE*:Ud1jG2M)lfhqD>Uf7B%TE+#3U?1nk5Vi+C7qZ:C;p'@d/dEWta%,3`@[qhr8T=l-9s`ihe+j1iG62O48S"\s:A9s"B4]!">'4ljp21"hd>DCJO810'-+8lO$_,2H.jhq..OdK*1q8[5R0>s1dBbp,\^%/PTLO_\SA@VdahZ%G!I:@oia6#YB!/B0d*9[fj(&_:onXSr6Rp<G(>:"*7%r-No=bdkJa&FH[]:&]8aCm/9#n394Ta-/%`,`MHe3%#t4Z>0piHsoemeO!_HE-L$M&4;LZlmk[(825"db![oep<YSF"A5,6RKe9G0Y?"+e@Q:7p_<&B[d!\d<l@1>m+AL\*i:mJd6r5ZFm%8\1;3M]!Vl<c]D3+e-@t<A,Ddl,:ul+9=3LdXUk.<@#(i`NVa2I-DZObJUi@S'6`!M8KW&0bm<Ka+[g[.tgeCH8&`P/#Hso(q8PD%Id`:?C:"K)7Wa3RU=$9rC/j,K`kDU?+TX)lP9Sq"6CL@H;a,Rt92KM2,tlr@rg\9,Wgui`gAOH9GX]BX78\@%/go,cE>smi*TQ7S%]eQmt-9uoD24JQo;l^deLO+b7i0%[8#\nlX<!,S5JrjS.<8tE16gp?nVdUQf^OO8u8#_/aOP%4BO,2RB1sEq#P$:c'-a$\jn,D@1%\aPHGZ`[SHU33#BA/^nVV8Soi^M5")8lqjKl.T$kn>76tk^?B(P:JHlS"`5<<P[jL.+[\<kLGg0T"2m'D_O>*_/;jogkZKJ%Cniu%?gC3%\9DP/0j@f+/]qGTdYY_`C[9Q75:*LgnojQC6./4AkM+6#YrOZg($7(g9?U1?K&HE(W*/1,]+6uV%OFI'Q7(?2?(::93rIga%>N!b*Yd+JX#mm\l)LLD0QA21$m=PZ3?mWm,<]:t2*BIXKKn1%elJZ48S^t[@]8K,LG]#?D#*HM8`OD+g)dG&t:TiE);rgs0Q*n2U%M.F?g>G0D4dLQ-!YAJ_m6#$o21BkM.Y@cflP=t4OoPT:oinMq<5/.&M4cR_8?YO?G6nNPfq_BZ]M_8VakLTO0DXl]@K@0n(;3MH<%+[6-G/5>7STF%gf4GRjhd-9*:Qq\8aPoYEh2*$"N+j:k%6VG*]fR)0lcQYo0Dd?e6$W6.<%o1PaWEjdb&+]"_<$5nnj\nh:+^:*1%+03NO,u%$@b:K`hILQ;V4^"&5Eg5f`&\#Lr7Kms+@cTm$D@PD%eMu+\DoO6#.7a&)6On:MBpJI.+-sV2kOS.'GYn<Rp%E1cro0nA%@qb&ZS=OifUZe[oR;$KN.uLo1I'^0;BUPTDQGfGQkYYT/,t!BZ#ls,'7gUP_K3A0_6>TW8<uc%EaV77R3A6P[_@OCj*e&gg[FbCJ%[[DR&V-I3\06_>:kR0KOb20mIa/WlT<`G]/Y_YGV=MuDdWi:St*^cG-hOn$_!ot#%pZJSaI/Eu_!*Iq>h0N>N#\68hV[PU8l)>l-%g.:e\3'o"];'iTFHm>JNiqPNTLjr:ZX/?.m2Lo`nJ+Mcm%0D^V@X&rs?i.F>9;HXAR#+G.62<DgM(*nMN=4.I[#;L0hTfX#q*T$:%UhtjqO"#IB#$4q7iL^9s*X[R<7Ls=0ZH`-8!nElW$F6U@r4-kF*94/.laL6epD6VJ[chJ'cXZKk^qS8?%Tb`h@GtapPVul!8_7lE%o/\F6?6_.79u,C-"<pB3U[UiJ?Rdu78Y"#*VoEE(9R2@4>MeA[Q4c)]f^[pU:/NU6fBU9(]0?4M3IU'#,%[LT+7'nP^cno2]<O8A%oaTa0?SjYDfB/$3XBE2Z'buas"%t;t^#tAuPG`kN*`_5lE<Ds(j=j&.<cqW]ki0WfTns=V'oC;6rP#-4NecLC)\!qp,dQq&qu2Q$%#UE%S[YgGZ9iWXGl]7Tclh!k&n!Bfu6n*(8N\TPd`JC.?#p-;C$Vi_fA0-9q/#1!V`gro[;K7,b(D]<;EsI3'bF$@q:$a-oY\s"^%)V\\FRQq5+$5qLNr:sL>qPt#-=39IuHcQ5E%g*=4<D6f2j<b1@WsN"sS(I'8YN&_[%R4fb,#Ui7:Ve\2,)&:$fY`iOK0%J(>=mQ,%+Tq4SE#j.O[p-9Zn:k'F>F)L;AR!JjUZaI=.8nR/d$0B\?7rDHKtaOdFkWif_=mEaaWH-0L8qeb"C"1u&JG_S6,U1(.okZU?^noe%J,fFfBeqj$oA:L[eJduMo0Y\eSplD44=NA!?R3K4ABOj&Z0B^GDSYE"SM=*ecC2j6A]]a@*'PmbDa2k_>UYsK\)cql^N>tgK@"\\%X_`YW008hn9CV:9EL;<+;sIrOG)*kgZ7n2=1$jr^$OmFZ`@Xs'rELG6/p\(K'E>`7*$28r\+d'k,)\=Y\Yf`fX>H$9qQr25[%V&B%;0!FX1WR2n\m%"*jZM`2]V]]]gh4^t$#O78=*C1HB#IYqgmp7dceM9OO(;UT)t>Re8D=Q]WR2QN]kMBT)A(9PV_5-fh.;bo;.U=G%7rQ:B^3IuuM/!^-bcZr_`,&h<"rs#JrDM=Jkg7S9`EHWX*(rp\f)#AQf&p3rQ<\JFDcrpV.?ir+E?F?ZoQ-;e)dL1h*U^53^;'B#%)i=5a`/C^!RCM_(lmTm/)2jV7F7E.85%9Z5],#5eeJg-O*aMD1pC8R%8Hm2>Q#Z:-aLrJ0Y@al6T$9YadSV5c#[I^5J^8C*G6Y;S%^:LE(/WL@T9C5-srQGJ@$b])[A#O+-W[!A=p)?P%7@D#2FX8=?g/)$V-3(U:Xi,s;nY1saE/`^>Q&:^^61$1\0jXtg*Y957Q,j@@%?.1&T0]E;Ioi-NPV[PL^6Om-.!,f1\!MV99TqI<+RmeY;D`4NPQ\1NX@tBYVh)A6rM+lku<d*@sh,6]-L=Wu%C15>>^6!/gM(3HL%5j;RelC4#Qs$4MCG8@Z+V"4<&>EuMXD$ESfmZKT]O:Oqt_CVM!$*DE((dijF5e9SbSUKt'<s*(<?n;;sb>h1E(/pZp\k%B1So+)$%rl4eo[Q>jDL"N?$#gVhP]e;=qPIE@[csj6cK\eX*Le>c>HZQZ6ffZs2@dFU&]R$gnfrd"`N"gVJ<hn?HHoGD#Ks*Y+X2f_(]B\Ot%b?VgS`Sau0iG#6IJoD0>9GM/U\Do=BGt*S4N(Da)(OIS`rN@:UIJtKQk7e*T4\7^6'A3!j0o+"?@W5??.*+'7q`a=UZYr,MZ'k$=%=Rm't;$QF"r>Fqq4pVI#$XGCXOW!\70j&k<P8n.oI9_P<!H8epP/9ZS^e$M=KHSaK[2Tn;:'>AWIA`OAo1Q@>6?;F`KFlQh$Hf(l%W[U!n$OY+Yj=d=)dNU2&\I48eAjrmBhYEMM:Dj%nmHsIF%(TL?X.A6]BW1PRW_M>TK"ZXHh*d03i#GC_!t=`4LkZQ*PN]/M*%NHE%Z2'6>VHEIirFsOCMq'X>GjJDm^OFA@51ek/D^]\?Ms=:DDBHhT3VF0o2Z9,``aFq05H9V5q=aT%TR+T.Cqg+YaTdahqR0lg2W22a%(=gd^,lWYt"hX8&!mtRL'sX3A:biT8Oq%Yeh7S-L',#Aq<\nKmP&f7sU/gGMi6Sd%A\!KZZDM,e@pBRAn\@&l.Ef\KE[M-@8HIcV%aR$$_c*^ledXRf9P:A&.!Z1)Z9Z3T./T'\FHtLEJWf)uoXs9)VX,18aF!A_6R:^#SdWWsd&l&.-]*3_kdensmeQS(Qg3^EU0Q[B4%INi3fPuPWF1N6X-a7kJB$k\GJibjiO<[(e5OO7J6,1eq._3upYBR[!7&C)XuJoNL-'m\&]b,lf,U=\RPr)FT<,j!bG?2o+\^c8ci%Tt`5_p.jdZhrS<2NU"cNQOHq2`;M):<@MDj2;Ni%*D>Kb)6B7N7R>Qk>;1oBlR;,D8s?/V%O0"tnPcJsl:Fm\Qm+6gIBe>R/VQ7:%gg#n:%`PNF@)fnPd;tTNke781\p4rjm;Q4[ja*i<44O11G_Sm*5CJ"H?c?p\E-Gd+!J?U9-L,>T`73B<>BVBCne&C8d_nU*_,14r%dZ\lf)I'.<ouT?DM*n\*.c(leBnFWH.Q8R9X(*At!l)!Oo29,08p)fp'3'Rk\%uM:C']nIU'o?Ah!^QPi\(+./%083LCi;RJq7hV%*L$&-f!,l;p^g:'pET3c?l4b/SgfW#lM0VOIhb'8_p?<:h+mm[4;SM<H"b$DH8Tm!N&l&E-6V*Q2DQ]Uk?5re?H`4+[l5#Qm-Ira%J\/cj('[@"NS).39$QGf]^I/0lj`k"0css/@4#`4/fXIt;!*n-DD#RkKMJ!I_<"B^]ohes>VL11TL7gG\S:)I+qQ3?e\foH7(d;T%g]X:n&MA!qZ\"b4;0foniQP&,W^,#iZ%,>B_fZ^YpWhiMp$5,$$IcgYp:n2;)U]d?X``[]Ii<C8?^:m?7,Ql^%Ub;+nlhMcc#7Ir%>P6'I#f%]DTkSfuog^G)+@=/=TM?AKiQuVi<P;+q*OUa.T7"^DXiuhpC?a-'d2e,.i^+@3UUZ2\)F>X,V"+g1^3RE(\-S\0;W$A;%?b.jCB;]MbI4)[:"HO2a58GVn'i$gqW4p#.a0AC5Y#@=Hi=:&_7uh-_F@b36Jppq/lhC5Ceja(?L0ro%[OE\..\dBeo(2kXNX5$d%Vt\FO@K]jO.8+,=-XO2!JlkU_#ga]5/qLsB>n]9ArfX.XB+m+?(CL1GO!+DN-:s@lX"dXRS@f8#2kGn"A+P7A3K4bS;2b*!E4"L1%Q+3IF@%?5uASE*-;*/r><:D+f,,A1;XHro=W5tLj=1\E#NKP(2o5=`HEP:HF_.emt<tS[bBbehM:>6r],fN\D$.>n4M^Au<3=4\K%;OD>8(Gd^=mX-&.nR]7_]p5>@/KjXXKeroR`p?P)e[0?MVMfL:&O3N.,LN':/)irt(6tdhmRs9^cOt@8r[:c%>OSp\BUqk6[C63P%GM7+m]NtXD@V4a0>E%G$laLks.-T-h2p_p52D))!L/]BH?,Qe@GlZV3.btYI`:1`W^gud4LRc$6WsjGM^ANdg%&ZA`_A1*c]$2G9%etOY";#+GXW6#hNs1UM.I\pkqR_S#&.m0]E2G!_C'WVCC^TS)6#9TkcZSkR0r=13bND9b:7'U@e3FSfah1+T]ol9hl'mWT0i9;8:%i7UCI+n5HcATMMu<FkjtL1U`!/\_H6f>HFTmI:\;J(k..!<uN2Ub[A=VnQfb2fAlI!cqO?M5<D*o1p'pACW]D^fkK>5SW5Ye0Z%7%]RX]k18nf>HC`"t'Nu%ggaV+q8Ya.-O;8*COMnr-'KmkAQA86RYhc1:K)%lb5m(NUZ]MN((S*=s-ISSk/f($k(6J\q_T-?t[Q3AK%0oNM'2j&6=:o@pP$']i'q.#AN8i;X7<@%ubA:pl&)qj9S+oe%@n=-oVVRPJ>s0oo*n*%!#G@9uN[m'aGG:ULn;F2ha`'oWkA#82+%>/R<Y^lK7(h]f/>\!tod+FarB3=[Q.C&ZmGQi0Rml)l7db#XTlSA8TAlY=_`C-h69>0n\IhL.lr_3B8!GW&V==n9HWASVNN^=a-L%"<l(]jb4ubJFC#;fb/d`V^461r#Km=5CQgDP]&Ij&lfNQaH4QQmr[i'<5sRbS1%$W\3n>]BLbE#eJ&#HN6<P%0CX'?HNsSskZFlc%*Pr#p,dMS)Sb=teP8]AB4T-)>jLh-fc5$<^3>M`+I-%:XHtBo:qWMD`\]WY)RlNUfF4L1k8iiJKR@\Psg4lrQ=ZkCM_lZi<*iW.R%NqW,rXP1;L6VPeZm,Tpm.Rc`li)iN8[jGm5mc<C5!2$ICg.uW4_#JTOp;&,l5tAg5=2:0'Pl.0AY&*OT?dn/7VJ!APX[0@+CGU*)%6,gN!)jRA%/>7QQY7X)m:S07+h-tS9SW!$/8SJ>grS8He3`X8ER0s<$DK`C\,kK+JL5pOE*,9V;#dn[mB[jt:/bJ,5IQ\F<hg+jB%"E%LGBsY>2&g5<f>G*=&a-GbL'*>-g^Do3kF4Xp"WfqO87+7k%22hj3_L9V>!QhF0TBO^Zq_24NXn=+/=-[='D9',FXeMpjK3^8Q%(in9BDQ6pKce.^"g_>=jE?&(.:sn3dJgY?:6SpU\*o-HFMJoX[0Ht,8R#8R#US:(*J?ZGL<Hph^+c'H]Llkk0cVL$g)nic*U]=@>%`QTmj1>R0\e>ot19o&<;0Q?/2Xm`'1qLsVL2;g5m_RctH7MH<WdGcmM/7b?<@oQuGY(Y@tU-J0+b:u.JkcD`LK#83dlE2oH%^.p2%!E&"`#uXHZCLIO\N=>h*'%Z<Iq/5mnY\IN]]2bsaMQYC]AI.h4NUJ;g_2r$C1G6NckP3,b[j!8f0pg0L1m.2A+p29`1bT3m/bSJf%\XTSN.7=1hlM7g6A--!pY*pj_40WL;U=]&NY^q@o[r)H"m@;ST[P?Wpf\fkI.]]PV/&cI:d^A5&lgDD>%gB4cBH&j:[f#MPY3)Z@%6=cXHNrm'N,"%U.deT;Rqs.&()AOi$XZ)(hW_eM]ZG?:,28@7B\CLF#rPg+B7?NY`.[[D]Il.oKd`(8,_V&N3p4r)$@-W'dm0D9X%h]JIQ>5Ps]T-#9qHLE;*0e?*Yp>qB<)McW,RKqgG=p@Yn]HrC)d]27I?iZK3F&o-Oa)l&@G**cs-k')U,M5ge`,HUndiJ<FGta(q%]61ko3Vo4li+f`+Co[*pHglS_/Mo>X6ro*d_eZ<(JQ&^Gbp%nh1(u@dRE-B9V,490bB])U*X!U$*SqM#h':.N@a3p<P^rDP3o=%i%f1Ydr-2hSEIh(>Z:ME1&m5T8n;B`rUFVHSboL7Vk(q359X;][e:V6#M7k#WP%JZ\3g!*PW10fYsR-f/EShnVrX;iuie,k.S72;"3%E4Ts3Xu33cqq?'_\3Km#'(-87YLTd[o)LbjQd<SEh1sd\i6\_uMYK;McRJ<>,aR.SOZu$Je7u!?If2;68I-R@I.`tYrW!RmKVNl*%7dO?NSu-V2@Bhf[k6WGh/per!$74.k?MMip\8M0Tk.`"!6]kN7%*\,;2P=?X*_is^D3D5#_2BqY7`D)'6M?NE!s_kd=.'<nQop^j%T-NdohBdMl[\!IBB+$JT//OmnMokps8Sj^a3Wd1:U:Y;rk]r-7_i7,+B16U8]j73dTASmM^!$$F0e_T,SKQub?1QVZ9KtA"=13('%#_9Pc'i5!QhlCjfU>3aCK&%e!ZMM%Pr>5rX2:J6Ae[m&;ghFXS,3pIN28"Q"I!$3M\`R]M[I!^l(3nFn)V%Ao0VDA>Ib^F)%i`XL%k^Fffn-HOEIi%(:_D`[XT45[gF8)fd\)[3LY%KP<iesFFWgX76X@/(.3Go#J6nQ52.(++bA.f\>3=#,iZ9>J;3"-Qf3^bkrBG+1&%WMtOc2ejPB['ki2907O:c)fBa?YK[BDK1d?D/FTrM:HBn>;po+g="]LNU"SugKLfn:[#nAlqYNrP=Uo^R=rAaA)4<%KeN.7T"Q#)%\5+pujP[=>3M7d(c;TG<&I#,<'h,!_*:i!E@aB:bFf*'9**W`!F5N!t&IZ9T`F;N&5a]HH73L#s53V-*c/,CT7hUB_kI"K&:i4n9%a\!XC>(E91mf&+3PTY)c%]8SCH*_^^.#X?H4^d/eN>r>!->giL*`]WATjb::Jbpn$.$B4,*A-u6>63F$!^.R8fdrDcSNsJ2+0%<L%X;J<Ed2dN2N8r[99]rdN<1HQuq/MSNRFV`k:c!#?^m1^dn[<=23?h.ffM7<-_H0[<-1FAlKdsmhK;5L"Z-5.,.&BF6Dl@(>YY@`*%3j`+5\nD3m8$opAB?Llj&THd:kIYZp$sG%f"gR:"`f\#<b'q3HiiT^V.ogF=LeMtD[1,^`*$H]AQf9C7/RJ[!Zs#(+4BIZ<l^6("%FQk7^FcFT@f+1DmS;61imZ#&p)!(:14ST18l*qp\0fNE(iY7`i!7+r%m,!9Q_:br3!"+E02kL53"'3(&$cIS=QP:+'a)&555'"=3%ROLFgQT_r#Ep/jJk"g1;bMgR&XWQ>2%KSmHBPJB%nL[(X0u^5s29HL?XinY#qW.So5PKI97V@UTged'9^1YNFm=(T5)+XE3UbUkm%V/3U@X6G/5>O8i_C^O&t`<]rajP)&OcD-;1htj^JL4!q&L?h$s#-"PUBZO*F&-o1B+cCB1ZP%(c]4!20S;hf5bNq`H^Q0IY+t\&a%XrdNd9UbEXRoQ.Obst!F2u_cOX&scmW-ED.GU];d*Fe30+n;E'OLo;#F!#Y[@c0"iPM50L?K3sLV&hNoRF"Rm[@@bj`bj:IPb`3G%4jB*p]BK4V&%G4qs'71&E>T?S??-3]@`bQ,NIS)+r%@pCE`=.<G_>=+m4*0AGa>q,/rBXCMbMH!Y&ci#oAO1srPr,N/(<oNpb\f5%\&IX(!qLER<@c"h*,g&+H61pL;jS_O*nA<S?9Na6ip?kOk&h7@[Mur;1.^'[$EdmK$cA@1F134II"eUIFIkmd!8!lEU-`>K&:Y^P%8F\;bdZ<g1c6L!5l(\7GjZ(ic)koYef?ie5&G?90qZ>=H0dlbl7A&FaIJuARgprCaZ+(RY^jSW9l8NpghY])MlT#tq:[2)a4+s>[%qjYR,M1%P*p"=H$*r)dBr_.Ei=/P!A0//=12k](:ZZuY=GQh?5hK>E5e.IJ6Iu'=M_6)5(9P7fC;%[407"Xau?Z%j4B<3@T-/N/Z%DJ8,Tp8-bcdu#rFYY-#"j/qA)ejk'_WL%QMZ@+OU"dZ4FQhY1HbO_sks3^54\!MF_.@-et%-]s2``*d[]!9Cs!*IPUC4.6kk8$#$%^ZaTCn5!^H?@SSs;<,@XdW\dkr!:GU7?4u;Z86#j,91>?i\cN$qDqS'?TF4?0-0N%^YcYZnF+&Z=ZpbGQYF;!f4>dK15uGTK?.T>%U:8f85Xf7.%9ahS*OHT6SY')p#hHa/nrEj4S>!hrGAi"jYJA62Y[uGt&+]PH8cXoP=<M9g`d=TDf4#M_j=Z9&dPn;;8E2c9a-fh2%_Lnks>^;d.(8bfam7X/j-5c0e?H<.+*9n^lQsYEH^VZg3_"X6eNUmS`Z4A8/Sui-,jqN.^qfgQr$757hf,3l)%PDus!.>l`dWs'p%O;kbIH7[K!(=NZW4@5*Q=$q6fi0P*E&'#jl1/pjH$IJ"M%#Z+e-3EMOJLY)>;HZ.'JKNY30n+$m&lHj@s3CZq=I2$),ZarE6]W?0%*8)(o3Y5<5GX.*c,W-kmMHF5TZ^cZ+9b"/65?X]'j-&_)fQjJ\L-V!IU2:_T98'L@O=[d.]/7WL0%eH-@d$(-nRYP^dea)mKeelO%Bu[_7]%6g?a@MS@aDqR8cS0g*bCp<OXg$Dqp&.CN,K.B8WA2@=ShtXknO>-gXnWUl]M:DB>LD"]Y+G$-,`0`Nc07YA^NWuqYLh"[%^g%?,H'g7_K?TFOcsg$&-phZMrZ=6f_UP+]jC;lG58E7C'n5Dl;"B%1aV5\Z8?KqJ*XTibPAVK!3b*$?R#_gulo[l&hS7Ts/B&rq%0ok9H'69n!D\.+j7>!AGW&.dOoI<+f208Y"80%WgjaI>LnD9Up;`C=$?g%)tf)R]J`LP.Qh.;_Z4#ET!8WX=9@A?j=or'KEmel!5%V&ul:F8c1eJjNg5%2?G*Bd!*YO5,26iseDd\jZV)C`%`(iI.I_k8KnhB5JhZhn?`lV`][oaS.!s8X=JqC+MHE62#Y;ZR0c?AeB69%KG:i`<,sA082<Ml+Wq'3'@-(CnA_+Tpr\?u$W0H6J!,\>L"a`=A`t6):gi.m<>P(]FYBU]AQM._:a0jYBQPjs\gU^m-uA_scgLJL%a[mkU*@PTb/\GDRh`Y2-d.n%aINF^q/fk!.j'pm=7<"^Ra1'c+gB)!#q\\R(<4H-Xg_\Ua_(dJEO&I=9>biOHW"oW&e-eGPP1WIq%1bd#J>OR'sLGe@8("tnH<]<--mF@V&Yb,&nEJM$Y5ZNCYd\"<c::!nL.`5eLEpo%(_-r2l:KGq%Vl]lk@,%TNOK?U=#,Y+Zh`PGp%(,3!Cr!j"Xk3,m48BA>c%kinC8>[Nn\MQA!Q3\sJV^dOHBU&3^BT[&r<Ei)gCY^@X:;adm)pbP7(%3t#0jR?*W8b(oa0d:,[qlDT%T=Xsi?55:3(fcnbEW/Ek!.$;rVhHiD;7F(36%b\RO)*Wp.;tYQM?!,j_ftn(](N1;R)8pk1>Fcm4AgLlHZ7nWGH_1ERbNB7X1,P9%WY`dn3_Df8$t<$:P]Nl&8m_&DU<5-8\.h?)f?*j*,@^Ge;4D"-@?EkA=ppV!DujPdF?q9$^;gDOF(JD!Q#M[_[\[Pn^V(Lj80+!r%85@)$0lc9#,et1bm?kk+4Q76.#(>,#&HS#*HI7IjZ%->^T9HO+lh6fcRUsBag4+9]Z^;(<J$+*`%+"L7m7r".dIThUYL)Ti>I%Kl%XL0\MAHZ_B_SH0'1gMk\4t4!QhikYdU6%_Q(^uLJ>oY.$RKFJWJm+>o\9(7tg7fp5QrZ_IbVLm=aU")F;/Y4Cn`3/=nRR>!BWL6\%Y83tdRs4&i#*n*lfkN)<Q3/D9]N0q22(b!eC<VZnH@*m-cT:2I3X#R2;oN&qki`N66ra*VEZYp5OP!,)FWrFW.I:e+kX5Yj79H8H%&V8A-`>@JUXl:d7adiXGeV)oIN-8`gUJ:NYSmPObZLt4-=P>YJ4`NZE#lEm=!q0$5mmk=!QNOCplB0D7[[M\'Nl`@q?h,F,T3"DN%Fn"NJGg<4f#P7.FqqCbO=#QM*Wjj%E2J'&dNkfQ?k:VgK%TH5$,fp/$PNm<.ZOs\$I3Fho&k\/b.uIj(rU)gN3,[\VEVc&%O(F[E%VGF@>e(5-dKYFW`,2KP^dU.sj9J4gXO3^=AVYct=V@2^e`N:A+]Xj$j^u3Cd=3qI,)#ce1j.7GF+p>QYoi-TV6C"-:djO_4+7<IB%JkjoTk5=`;FVI+70:SB;1i7_ePi5S7G#*".j<.Fg8!M2@<EbmgbU8V?LkYbHI4*)m?!O$C1mj7nh]2G]7d*IP2%ROi;hofUg^*L,%O7K_2EaH\OA?Y-4-?iBES4;!8N..'Z+:1sLHsFr#mXp(FoR.B#0l>*q%*GAH\.k%"8-tg;OmIJ.ma)ILj0E>@MB!:E@5k2qTDU2q%aYD2S;^@d>?uuR7Q\.]c+Hf,rF#r]EHAJD((WW%^EtPE3lK%(egq+=t+i?4X1")PB]:9&E^!l,5,8Ii6Pgukt'pX1Dg.]PnB6MO,%MGQ.WHmK,!nu%$2q5o,]S<6pdI3!\XAL*)Tr(U/5P5KZZ3VFh^\*c>&G6e,M(aFY?rnW#\G8V&%0,KU1`NG;1#FrfOor(;ZjkXd%%,aBHc:Fb*qPVfO/RlX@iQC6PoPQ'KG^8]Nf6TZTGFn'PmhpS.aoMps@e82AX,.O?\O5,A!m"jGS[t2!$S+Toggt@ues3"2Mf0\nP%J+GhsAgQ-E%2]#[<cY\U=Qf.[6#90@a;hB'D(iL!;$S?pGF,70UjsH9"(L.UU;%G$G2!cBZdWO0Z!>Q.(XN!8M.do4`D="U,3.]D%D9-nJepIgK$d1u-Z>J_\i$=MY_4AC.];WTCqho>Vr7L)=D8kI7"B]+NmE;;PHEt\b37q9HR8OFi*NeF+l_@ZO=H+.]dXIY+AkJDd%6J+QE<'\,%/O2Abd)DHQ*%O&[hO*3pDSbq\r8nUjqInuj__=ODpr:)[^ZKuU"qAVsok7"=6!pA1YR!uBXi9d1C2ELhT@FCr3q`#q%&nJ!bW^e*b3>XDQZ+<mq1/^tlJO`$%Y^NfR=SY^!hT]#>A#TsLllC5)"?EhOA:)$KY)pdi5M)3V/'/Cb(eN]/rRktTj<7)qT!TI$%)qT]CYh\;5OgOL5,(`D`E'OY=jTZp1<ADK-Q'UWM!gEGs=-8Z<IW"Joqk(GDLTbZl0L?/A-hl!aAs!9mE"c'=-M/t-Sj@hu3s'-n%s1)fq5pV3j9#X5qoN><Nb$04Q***6FnqG-P;mJi7gJE:`glnq5?8X=.Z]`:t.EJPAiGGoQ[d7H0W+E`=e3#r-`O0fY@YQdBPsoLs%gD0sN<(L-IM4COlV+Wddq:?td*rB"bN,70HP!q?f*Qf+`VLhM"8%Q&1@sRIB</$UYSXF)e;L(Obp:J*5hqkZD5YpkERqHpoOo`Jc%[q]G10[.9lG4.Lm35)Dg9ocS!Hm0Si")9Pj.o*ZlRTb=a<Q.eV(2s7$'8"WR9>()!imO:q!V)VHKQ0rGRSpbUkK9r>mHWc7\L#FB%&0*GW5pE#7H]34B[r?[8)_DQkh&=#_m75`>*lG0'>'&bT<(a"QX8*E#WM#S[Nm6[q2#=umWNmO6enLRO=$OccUR0!@EiSN@V2aKY%V>u4k9!P+jUhfIkoZ?m"B1\C@p"k9WB;keCH38f^p.'5Tk94ta`Fd%aaq/k(.N9`EQqa:bT;j)X)DOPg3X9!cpYeW>1/EO+S-^$9%0r*8ITX/\;#.E!CF><9P\Os!DW#r.&OPgd*D#X:N`Id$]Kc).o*T8+(@[`328EGZT,SSNgn2*S`3H*1-qmMoYRJE`>PeA*WLO`;Y%;io;Irp6`)FZX\\;fT<;jc&GI5VI*tm&+`Ooc`\i>0-S$<bd#`K$?pCBf&oN<?(W1gpM@hd`tg_P4![\d.8CY]O1q\_F$es71rRo%r)@p++CBskH^2X"\9#B.gdf([39c+%Q?e41^huBXc(krn/FhP$d>WrD.;q20e97[_XkOP\hB^OLh7ZU1&]J6kr\ZkF/pud#92/@9%Mj;dlhuNCG99o@ml(f!hK$+9<:taOD"5_e-hGhYb0:Q^5:tsUQ[NJCNa%mbYcp3s3RVRFHC*U88`;8W5,!NI>Td&?OZ74UnYFhV0%Zaur1cqJ"0.u`$-D9YUD[hZBSD;K`JX2'9AbIh]bps&cc:u&Wc&":N&TA3LtSq4>"23poK*cZR=aTUrTN6HBD:mL>u;U:b)Vi\:k%U>tj9QnfCg2(h>Qg#QM*"/-ErFX_kt,od10d`kE+mW&u,>1Ss$pZoFmqP*FJl@TBsaUN=A6q-'(6RWnaCHU=0,^^:J'G-hm)`uuW%&3G_2A7YoS]._MjkQ+Q"k]j'"R4!]lEFq$^K*pWricC8prSd0IUW,l/o6e*Zc\3SD""3LuL!>PNn3dK:dEJ1Z6t,.DcNb's^sr@/%b(RYa+%.C047_N+]]J1B-#1.3N_NT@judaPKl@"fDVgf1!']4ENq:5+S7[biK-%9;XCl#Al.flc:m<?,%!J&^k-sY?eB`(2G^#T8%+h]Mjp[f6Ys4D"uF'4DRhR-!I,K_rFRpe'%4ln.a#UDq!'*\Zm'`Vg([OH,)jJ#KWE9J]k$brRlNcaZ+aqQZ=!4YbCN/GMiKt"V.%0(3TPCSU)a2q!V3[CX8c2bNS6/EI3_m[lJBh[;i?gq/L]^jq"nYr"!c+g"c^ZaDd.fY@jc7B`>b30#Q!>_OYQp>lmc6E?U\mUo_P%kOAq5kj*6&R#T^]`ljK6C-cpsKd"<;fFIbJV'E(-.$p#sPF(boV`0(;]9p(JMqL8._r['\C9J`Z_qje\rI8_bA%rC9ro&Vsrq!$`%GJF%2J,R8Lrpdc%o,mt`IL3dda+*p&pOBjU_a")5QaT-XTD^G;s7joir0RH\^]4+jp]'eKs7cPgAcKpCn_a<55Q7#LFSGe9=p/2M~>%AI9_PrivateDataEnd