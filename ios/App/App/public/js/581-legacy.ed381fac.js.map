{"version":3,"file":"js/581-legacy.ed381fac.js","mappings":"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","sources":["webpack://4angelsmobile/./node_modules/@capacitor/local-notifications/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class LocalNotificationsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.pending = [];\n        this.deliveredNotifications = [];\n        this.hasNotificationSupport = () => {\n            if (!('Notification' in window) || !Notification.requestPermission) {\n                return false;\n            }\n            if (Notification.permission !== 'granted') {\n                // don't test for `new Notification` if permission has already been granted\n                // otherwise this sends a real notification on supported browsers\n                try {\n                    new Notification('');\n                }\n                catch (e) {\n                    if (e.name == 'TypeError') {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        };\n    }\n    async getDeliveredNotifications() {\n        const deliveredSchemas = [];\n        for (const notification of this.deliveredNotifications) {\n            const deliveredSchema = {\n                title: notification.title,\n                id: parseInt(notification.tag),\n                body: notification.body,\n            };\n            deliveredSchemas.push(deliveredSchema);\n        }\n        return {\n            notifications: deliveredSchemas,\n        };\n    }\n    async removeDeliveredNotifications(delivered) {\n        for (const toRemove of delivered.notifications) {\n            const found = this.deliveredNotifications.find(n => n.tag === String(toRemove.id));\n            found === null || found === void 0 ? void 0 : found.close();\n            this.deliveredNotifications = this.deliveredNotifications.filter(() => !found);\n        }\n    }\n    async removeAllDeliveredNotifications() {\n        for (const notification of this.deliveredNotifications) {\n            notification.close();\n        }\n        this.deliveredNotifications = [];\n    }\n    async createChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async deleteChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async listChannels() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async schedule(options) {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        for (const notification of options.notifications) {\n            this.sendNotification(notification);\n        }\n        return {\n            notifications: options.notifications.map(notification => ({\n                id: notification.id,\n            })),\n        };\n    }\n    async getPending() {\n        return {\n            notifications: this.pending,\n        };\n    }\n    async registerActionTypes() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async cancel(pending) {\n        this.pending = this.pending.filter(notification => !pending.notifications.find(n => n.id === notification.id));\n    }\n    async areEnabled() {\n        const { display } = await this.checkPermissions();\n        return {\n            value: display === 'granted',\n        };\n    }\n    async requestPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(await Notification.requestPermission());\n        return { display };\n    }\n    async checkPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(Notification.permission);\n        return { display };\n    }\n    transformNotificationPermission(permission) {\n        switch (permission) {\n            case 'granted':\n                return 'granted';\n            case 'denied':\n                return 'denied';\n            default:\n                return 'prompt';\n        }\n    }\n    sendPending() {\n        var _a;\n        const toRemove = [];\n        const now = new Date().getTime();\n        for (const notification of this.pending) {\n            if (((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) &&\n                notification.schedule.at.getTime() <= now) {\n                this.buildNotification(notification);\n                toRemove.push(notification);\n            }\n        }\n        this.pending = this.pending.filter(notification => !toRemove.find(n => n === notification));\n    }\n    sendNotification(notification) {\n        var _a;\n        if ((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) {\n            const diff = notification.schedule.at.getTime() - new Date().getTime();\n            this.pending.push(notification);\n            setTimeout(() => {\n                this.sendPending();\n            }, diff);\n            return;\n        }\n        this.buildNotification(notification);\n    }\n    buildNotification(notification) {\n        const localNotification = new Notification(notification.title, {\n            body: notification.body,\n            tag: String(notification.id),\n        });\n        localNotification.addEventListener('click', this.onClick.bind(this, notification), false);\n        localNotification.addEventListener('show', this.onShow.bind(this, notification), false);\n        localNotification.addEventListener('close', () => {\n            this.deliveredNotifications = this.deliveredNotifications.filter(() => !this);\n        }, false);\n        this.deliveredNotifications.push(localNotification);\n        return localNotification;\n    }\n    onClick(notification) {\n        const data = {\n            actionId: 'tap',\n            notification,\n        };\n        this.notifyListeners('localNotificationActionPerformed', data);\n    }\n    onShow(notification) {\n        this.notifyListeners('localNotificationReceived', notification);\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["LocalNotificationsWeb","constructor","super","arguments","this","pending","deliveredNotifications","hasNotificationSupport","window","Notification","requestPermission","permission","e","name","async","deliveredSchemas","notification","deliveredSchema","title","id","parseInt","tag","body","push","notifications","delivered","toRemove","found","find","n","String","close","filter","unimplemented","options","unavailable","sendNotification","map","display","checkPermissions","value","transformNotificationPermission","sendPending","_a","now","Date","getTime","schedule","at","buildNotification","diff","setTimeout","localNotification","addEventListener","onClick","bind","onShow","data","actionId","notifyListeners"],"sourceRoot":""}